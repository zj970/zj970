<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MVC-三层架构简介</title>
      <link href="/2024/01/24/MVC-%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E7%AE%80%E4%BB%8B/"/>
      <url>/2024/01/24/MVC-%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<ul><li>前序<ul><li>慢慢理解世界，慢慢更新自己</li></ul></li></ul><meta name="referrer" content="no-referrer"/><h1 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h1><ul><li><a href="https://developer.aliyun.com/article/1194123">黑洞晓威 深入MVC模式和三层架构</a></li></ul><p>&emsp;&emsp;<font color=red>本文中的所有内容大部分来源于网络资料，如有侵权请联系本人修改或删除，请大家多多支持原创!非常感谢！</font></p><h1 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h1><h2 id="MVC-基本模型"><a href="#MVC-基本模型" class="headerlink" title="MVC 基本模型"></a>MVC 基本模型</h2><p>&emsp;&emsp;MVC（Model-View-Controller）是一种软件设计模式，旨在将应用程序分为三个主要组成部分：模型（Model）、视图（View）和控制器（Controller）。以下是MVC 模型的基本概念和职责的总结：</p><ol><li><p><strong>模型（Model）</strong>：</p><ul><li><strong>定义数据和业务逻辑：</strong> 模型表示应用程序的数据和业务逻辑。它包括应用程序的数据结构、数据库连接、以及对数据的操作和更新方法。</li><li><strong>独立于用户界面：</strong> 模型是与用户界面无关的部分，它专注于处理应用程序的数据和业务规则。</li></ul></li><li><p><strong>视图（View）</strong>：</p><ul><li><strong>负责显示用户界面：</strong> 视图负责显示用户界面，向用户呈现数据。它通常包含用户看到和与之交互的元素，如按钮、文本框等。</li><li><strong>观察模型的变化：</strong> 视图观察模型的变化，以便及时更新用户界面。</li></ul></li><li><p><strong>控制器（Controller）</strong>：</p><ul><li><strong>处理用户输入：</strong> 控制器负责处理用户的输入（例如点击按钮、输入文本），并根据这些输入来更新模型或视图。</li><li><strong>连接模型和视图：</strong> 控制器充当模型和视图之间的中介，确保二者之间的同步。它将用户输入转换为对模型的操作，同时更新视图以反映模型的变化。</li></ul></li><li><p><strong>模型-视图-控制器的交互</strong>：</p><ul><li><strong>模型通知视图：</strong> 当模型的状态发生变化时，模型通知相关的视图进行更新。</li><li><strong>用户交互引发控制器动作：</strong> 用户的交互通过控制器进行处理，控制器可能会对模型进行相应的操作。</li><li><strong>控制器更新模型和视图：</strong> 控制器更新模型，以便反映用户输入的变化，并通知相关的视图进行更新。</li></ul></li><li><p><strong>分离关注点（Separation of Concerns）</strong>：</p><ul><li><strong>可维护性和扩展性：</strong> MVC 模型通过分离关注点，使代码更具可维护性和扩展性。模型、视图和控制器各自关注特定的责任，有助于减少代码的耦合度。</li></ul></li></ol><p>总体而言，MVC 模型通过将应用程序划分为三个独立的组件，使得数据、用户界面和业务逻辑之间的关系更清晰，从而提高了代码的可维护性和可扩展性。</p><blockquote><p>控制器（serlvlet）用来接收浏览器发送过来的请求，控制器调用模型（JavaBean）来获取数据，比如从数据库查询数据；控制器获取到数据后再交由视图（JSP）进行数据展示。</p></blockquote><p align="center"><img src="https://cdn.jsdelivr.net/gh/zj970/resource/mvc/mvc.png"/></p><h2 id="MVC-模型的优缺点"><a href="#MVC-模型的优缺点" class="headerlink" title="MVC 模型的优缺点"></a>MVC 模型的优缺点</h2><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol><li><p><strong>分离关注点（Separation of Concerns）：</strong></p><ul><li><strong>优点：</strong> MVC 模型通过将应用程序划分为模型、视图和控制器三个独立的组件，使得关注点分离更为明显。这有助于提高代码的可维护性、可扩展性和可重用性。</li><li><strong>应用场景：</strong> 适用于大型和复杂的应用程序，其中不同的组件可以独立开发、测试和维护。</li></ul></li><li><p><strong>可测试性：</strong></p><ul><li><strong>优点：</strong> 由于模型、视图和控制器的独立性，可以更容易地进行单元测试。开发者可以分别测试每个组件，确保各个部分的功能正常。</li><li><strong>应用场景：</strong> 对于追求高质量、可测试性的应用程序，MVC 提供了便利。</li></ul></li><li><p><strong>灵活性和可扩展性：</strong></p><ul><li><strong>优点：</strong> MVC 模型使应用程序的不同部分能够独立地进行修改和扩展，而不会影响其他部分。这提高了应用程序的灵活性和可扩展性。</li><li><strong>应用场景：</strong> 适用于需要频繁修改或扩展的应用程序。</li></ul></li><li><p><strong>更好的团队协作：</strong></p><ul><li><strong>优点：</strong> 因为 MVC 模型将应用程序划分为独立的组件，团队可以同时开发不同的组件而不会发生冲突。这促进了团队协作和并行开发。</li><li><strong>应用场景：</strong> 适用于大型项目，多个团队成员可以并行地工作在不同的组件上。</li></ul></li></ol><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><ol><li><p><strong>复杂性增加：</strong></p><ul><li><strong>缺点：</strong> 在小型应用中，使用 MVC 模型可能会导致过度设计和不必要的复杂性。对于简单的应用程序，引入 MVC 可能会显得繁琐。</li><li><strong>应对策略：</strong> 对于小型应用，可以考虑使用更轻量级的框架或设计模式。</li></ul></li><li><p><strong>学习曲线：</strong></p><ul><li><strong>缺点：</strong> 对于初学者来说，理解和掌握 MVC 模型可能需要一定的学习曲线。这可能使得项目启动阶段的开发速度较慢。</li><li><strong>应对策略：</strong> 提供培训或使用更简单的设计模式可能有助于减缓学习曲线。</li></ul></li><li><p><strong>过度设计的风险：</strong></p><ul><li><strong>缺点：</strong> 在设计 MVC 应用程序时，存在过度设计的风险，即过度划分组件和关注点，导致不必要的复杂性。</li><li><strong>应对策略：</strong> 遵循适度设计的原则，根据实际需求调整设计，避免过度设计。</li></ul></li></ol><p>&emsp;&emsp;总体而言，MVC 模型在大型、复杂的应用程序中表现出色，但在小型项目中可能显得过于繁琐。选择使用 MVC 还是其他设计模式应该根据项目的规模、需求和团队的经验来权衡。</p><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><h3 id="什么是三层架构？"><a href="#什么是三层架构？" class="headerlink" title="什么是三层架构？"></a>什么是三层架构？</h3><p>&emsp;&emsp;三层架构是将我们的项目分成了三个层面，分别是 表现层、业务逻辑层、数据访问层</p><ul><li>数据访问层：对数据库的CRUD基本操作 </li><li>业务逻辑层：对业务逻辑进行封装，组合数据访问层层中基本功能，形成复杂的业务逻辑功能。例如 注册业务功能 ，我们会先调用 数据访问层 的 selectByName() 方法判断该用户名是否存在，如果不存在再调用 数据访问层 的 insert() 方法进行数据的添加操作 </li><li>表现层：接收请求，封装数据，调用业务逻辑层，响应数据</li></ul><p>而整个流程是，浏览器发送请求，表现层的Servlet接收请求并调用业务逻辑层的方法进行业务逻辑处理，而业务逻辑层方法调用数据访问层方法进行数据的操作，依次返回到serlvet，然后servlet将数据交由 JSP 进行展示。</p><p>三层架构的每一层都有特有的包名称：</p><ul><li>表现层： com.xx.controller 或者 com.xx.web</li><li>业务逻辑层：com.xx.service</li><li>数据访问层：com.xx.dao 或者 com.xx.mapper</li></ul><p align="center"><img src="https://cdn.jsdelivr.net/gh/zj970/resource/mvc/mvc_three.png"/></p><p><strong>更多框架：</strong></p><p align="center"><img src="https://cdn.jsdelivr.net/gh/zj970/resource/mvc/mvc_advance.png"/></p><h3 id="三层框架和MVC的联系"><a href="#三层框架和MVC的联系" class="headerlink" title="三层框架和MVC的联系"></a>三层框架和MVC的联系</h3><p align="center"><img src="https://cdn.jsdelivr.net/gh/zj970/resource/mvc/mvc_three_contact.png"/></p><p>&emsp;&emsp;如上图上半部分是 MVC 模式，上图下半部分是三层架构。 MVC 模式 中的 C（控制器）和 V（视图）就是 三层架构 中的表现层，而 MVC 模式 中的 M（模型）就是 三层架构 中的 业务逻辑层 和 数据访问层</p><p>&emsp;&emsp;可以将 MVC 模式 理解成是一个大的概念，而 三层架构 是对 MVC 模式 实现架构的思想。 那么我们以后按照要求将不同层的代码写在不同的包下，每一层里功能职责做到单一，将来如果将表现层的技术换掉，而业务逻辑层和数据访问层的代码不需要发生变化</p>]]></content>
      
      
      <categories>
          
          <category> Framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android_14_源码分析之WindowManagerService</title>
      <link href="/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BWindowManagerService/"/>
      <url>/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BWindowManagerService/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android_14_源码分析之PackageManagerService</title>
      <link href="/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BPackageManagerService/"/>
      <url>/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BPackageManagerService/</url>
      
        <content type="html"><![CDATA[<ul><li>前言<ul><li>背负着过去的痛苦，夹杂着现实的烦恼，对人的心灵而言是无任何益处的</li></ul></li></ul><meta name="referrer" content="no-referrer"/><h1 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h1><ul><li><a href="https://juejin.cn/post/7050112177478336543">wise丰</a></li><li><a href="https://juejin.cn/user/2453765681069095/posts">冬子</a></li></ul><p>&emsp;&emsp;<font color=red>本文中的所有内容大部分来源于网络资料，如有侵权请联系本人修改或删除，请大家多多支持原创!非常感谢！</font></p><h1 id="PackageManagerService"><a href="#PackageManagerService" class="headerlink" title="PackageManagerService"></a>PackageManagerService</h1><p>&emsp;&emsp;PackageManagerService(PMS)主要是管理应用的安装，卸载，更新，解析以及权限。同ActivityManagerService,PMS也是由SystemService孵化而来。</p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/feb0d11702fc4041a2ec826f279bb401~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="PMS启动流程.png" loading="lazy"><h2 id="启动与初始化"><a href="#启动与初始化" class="headerlink" title="启动与初始化"></a>启动与初始化</h2><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;SystemServer.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 1234</span></span><br><span class="line"><span class="comment">// Start the package manager.</span></span><br><span class="line"><span class="keyword">if</span> (!mRuntimeRestart) &#123;</span><br><span class="line">    FrameworkStatsLog.write(FrameworkStatsLog.BOOT_TIME_EVENT_ELAPSED_TIME_REPORTED,</span><br><span class="line">            FrameworkStatsLog</span><br><span class="line">                    .BOOT_TIME_EVENT_ELAPSED_TIME__EVENT__PACKAGE_MANAGER_INIT_START,</span><br><span class="line">            SystemClock.elapsedRealtime());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t.traceBegin(<span class="string">&quot;StartDomainVerificationService&quot;</span>);</span><br><span class="line"><span class="type">DomainVerificationService</span> <span class="variable">domainVerificationService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DomainVerificationService</span>(</span><br><span class="line">        mSystemContext, SystemConfig.getInstance(), platformCompat);</span><br><span class="line">mSystemServiceManager.startService(domainVerificationService);</span><br><span class="line">t.traceEnd();</span><br><span class="line"></span><br><span class="line">t.traceBegin(<span class="string">&quot;StartPackageManagerService&quot;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Watchdog.getInstance().pauseWatchingCurrentThread(<span class="string">&quot;packagemanagermain&quot;</span>);</span><br><span class="line">    mPackageManagerService = PackageManagerService.main(</span><br><span class="line">            mSystemContext, installer, domainVerificationService,</span><br><span class="line">            mFactoryTestMode != FactoryTest.FACTORY_TEST_OFF);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    Watchdog.getInstance().resumeWatchingCurrentThread(<span class="string">&quot;packagemanagermain&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mFirstBoot = mPackageManagerService.isFirstBoot();</span><br><span class="line">mPackageManager = mSystemContext.getPackageManager();</span><br><span class="line">t.traceEnd();</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;DomainVerificationService 是用来验证域名是否已经被注册过的服务。它是一个后台服务，可以在系统启动时或者应用请求时触发。它的主要功能是检查域名是否已经被其他应用或者系统使用过，以及是否已经被用户注册过。如果域名没有被使用或者注册过，那么 DomainVerificationService 会返回一个成功的结果；如果域名已经被使用或者注册过，那么 DomainVerificationService 会返回一个失败的结果，并且给出相应的错误信息。如果只启动 DomainVerificationService 不启动 PackageManagerService ，那么可能会导致一些功能缺失或者异常。这里重点查看PackageManagerService。</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;pm&#x2F;PackageManagerService.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Line 1520</span></span><br><span class="line"><span class="comment">/** Starts PackageManagerService. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PackageManagerService <span class="title function_">main</span><span class="params">(Context context,</span></span><br><span class="line"><span class="params">            Installer installer, <span class="meta">@NonNull</span> DomainVerificationService domainVerificationService,</span></span><br><span class="line"><span class="params">            <span class="type">boolean</span> factoryTest)</span> &#123;</span><br><span class="line">        <span class="comment">// Self-check for initial settings.</span></span><br><span class="line">        <span class="comment">// 初始化配置检查</span></span><br><span class="line">        PackageManagerServiceCompilerMapping.checkProperties();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">TimingsTraceAndSlog</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TimingsTraceAndSlog</span>(TAG + <span class="string">&quot;Timing&quot;</span>,</span><br><span class="line">                Trace.TRACE_TAG_PACKAGE_MANAGER);</span><br><span class="line">        t.traceBegin(<span class="string">&quot;create package manager&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">PackageManagerTracedLock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageManagerTracedLock</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">installLock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">HandlerThread</span> <span class="variable">backgroundThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceThread</span>(<span class="string">&quot;PackageManagerBg&quot;</span>,</span><br><span class="line">                Process.THREAD_PRIORITY_BACKGROUND, <span class="literal">true</span> <span class="comment">/*allowIo*/</span>);</span><br><span class="line">        backgroundThread.start();</span><br><span class="line">        <span class="type">Handler</span> <span class="variable">backgroundHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(backgroundThread.getLooper(),</span><br><span class="line">                BACKGROUND_HANDLER_CALLBACK);</span><br><span class="line"></span><br><span class="line">        <span class="type">PackageManagerServiceInjector</span> <span class="variable">injector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageManagerServiceInjector</span>(</span><br><span class="line">                context, lock, installer, installLock, <span class="keyword">new</span> <span class="title class_">PackageAbiHelperImpl</span>(),</span><br><span class="line">                backgroundHandler,</span><br><span class="line">                SYSTEM_PARTITIONS,</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">ComponentResolver</span>(i.getUserManagerService(), pm.mUserNeedsBadging),</span><br><span class="line">                (i, pm) -&gt; PermissionManagerService.create(context,</span><br><span class="line">                        i.getSystemConfig().getAvailableFeatures()),</span><br><span class="line">                        <span class="comment">// 创建多用户管理对象</span></span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">UserManagerService</span>(context, pm,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">UserDataPreparer</span>(installer, installLock, context), lock),</span><br><span class="line">                        <span class="comment">// 初始化Settings,调试中可以在shell使用setting get/put命令</span></span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">Settings</span>(Environment.getDataDirectory(),</span><br><span class="line">                        RuntimePermissionsPersistence.createInstance(),</span><br><span class="line">                        i.getPermissionManagerServiceInternal(),</span><br><span class="line">                        domainVerificationService, backgroundHandler,</span><br><span class="line">                        lock),</span><br><span class="line">                (i, pm) -&gt; AppsFilterImpl.create(i,</span><br><span class="line">                        i.getLocalService(PackageManagerInternal.class)),</span><br><span class="line">                (i, pm) -&gt; (PlatformCompat) ServiceManager.getService(<span class="string">&quot;platform_compat&quot;</span>),</span><br><span class="line">                (i, pm) -&gt; SystemConfig.getInstance(),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">PackageDexOptimizer</span>(i.getInstaller(), i.getInstallLock(),</span><br><span class="line">                        i.getContext(), <span class="string">&quot;*dexopt*&quot;</span>),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">DexManager</span>(i.getContext(), i.getPackageDexOptimizer(),</span><br><span class="line">                        i.getInstaller(), i.getInstallLock(), i.getDynamicCodeLogger()),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">DynamicCodeLogger</span>(i.getInstaller()),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">ArtManagerService</span>(i.getContext(), i.getInstaller(),</span><br><span class="line">                        i.getInstallLock()),</span><br><span class="line">                (i, pm) -&gt; ApexManager.getInstance(),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">ViewCompiler</span>(i.getInstallLock(), i.getInstaller()),</span><br><span class="line">                (i, pm) -&gt; (IncrementalManager)</span><br><span class="line">                        i.getContext().getSystemService(Context.INCREMENTAL_SERVICE),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">DefaultAppProvider</span>(() -&gt; context.getSystemService(RoleManager.class),</span><br><span class="line">                        () -&gt; LocalServices.getService(UserManagerInternal.class)),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">DisplayMetrics</span>(),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">PackageParser2</span>(pm.mSeparateProcesses, i.getDisplayMetrics(),</span><br><span class="line">                        pm.mCacheDir,</span><br><span class="line">                        pm.mPackageParserCallback) <span class="comment">/* scanningCachingPackageParserProducer */</span>,</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">PackageParser2</span>(pm.mSeparateProcesses, i.getDisplayMetrics(), <span class="literal">null</span>,</span><br><span class="line">                        pm.mPackageParserCallback) <span class="comment">/* scanningPackageParserProducer */</span>,</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">PackageParser2</span>(pm.mSeparateProcesses, i.getDisplayMetrics(), <span class="literal">null</span>,</span><br><span class="line">                        pm.mPackageParserCallback) <span class="comment">/* preparingPackageParserProducer */</span>,</span><br><span class="line">                <span class="comment">// Prepare a supplier of package parser for the staging manager to parse apex file</span></span><br><span class="line">                <span class="comment">// during the staging installation.</span></span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">PackageInstallerService</span>(</span><br><span class="line">                        i.getContext(), pm, i::getScanningPackageParser),</span><br><span class="line">                (i, pm, cn) -&gt; <span class="keyword">new</span> <span class="title class_">InstantAppResolverConnection</span>(</span><br><span class="line">                        i.getContext(), cn, Intent.ACTION_RESOLVE_INSTANT_APP_PACKAGE),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">ModuleInfoProvider</span>(i.getContext()),</span><br><span class="line">                (i, pm) -&gt; LegacyPermissionManagerService.create(i.getContext()),</span><br><span class="line">                (i, pm) -&gt; domainVerificationService,</span><br><span class="line">                (i, pm) -&gt; &#123;</span><br><span class="line">                    <span class="type">HandlerThread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceThread</span>(TAG,</span><br><span class="line">                            Process.THREAD_PRIORITY_DEFAULT, <span class="literal">true</span> <span class="comment">/*allowIo*/</span>);</span><br><span class="line">                    thread.start();</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PackageHandler</span>(thread.getLooper(), pm);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">DefaultSystemWrapper</span>(),</span><br><span class="line">                LocalServices::getService,</span><br><span class="line">                context::getSystemService,</span><br><span class="line">                (i, pm) -&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (useArtService()) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BackgroundDexOptService</span>(i.getContext(), i.getDexManager(), pm);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (LegacyDexoptDisabledException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                (i, pm) -&gt; IBackupManager.Stub.asInterface(ServiceManager.getService(</span><br><span class="line">                        Context.BACKUP_SERVICE)),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">SharedLibrariesImpl</span>(pm, i),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">CrossProfileIntentFilterHelper</span>(i.getSettings(),</span><br><span class="line">                        i.getUserManagerService(), i.getLock(), i.getUserManagerInternal(),</span><br><span class="line">                        context),</span><br><span class="line">                (i, pm) -&gt; <span class="keyword">new</span> <span class="title class_">UpdateOwnershipHelper</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">&quot;**** ro.build.version.sdk not set!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建PMS对象</span></span><br><span class="line">        <span class="type">PackageManagerService</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageManagerService</span>(injector, factoryTest,</span><br><span class="line">                PackagePartitions.FINGERPRINT, Build.IS_ENG, Build.IS_USERDEBUG,</span><br><span class="line">                Build.VERSION.SDK_INT, Build.VERSION.INCREMENTAL);</span><br><span class="line">        t.traceEnd(); <span class="comment">// &quot;create package manager&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CompatChange.<span class="type">ChangeListener</span> <span class="variable">selinuxChangeListener</span> <span class="operator">=</span> packageName -&gt; &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (m.mInstallLock) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">Computer</span> <span class="variable">snapshot</span> <span class="operator">=</span> m.snapshotComputer();</span><br><span class="line">                <span class="keyword">final</span> <span class="type">PackageStateInternal</span> <span class="variable">packageState</span> <span class="operator">=</span></span><br><span class="line">                        snapshot.getPackageStateInternal(packageName);</span><br><span class="line">                <span class="keyword">if</span> (packageState == <span class="literal">null</span>) &#123;</span><br><span class="line">                    Slog.e(TAG, <span class="string">&quot;Failed to find package setting &quot;</span> + packageName);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">AndroidPackage</span> <span class="variable">pkg</span> <span class="operator">=</span> packageState.getPkg();</span><br><span class="line">                <span class="type">SharedUserApi</span> <span class="variable">sharedUser</span> <span class="operator">=</span> snapshot.getSharedUser(</span><br><span class="line">                        packageState.getSharedUserAppId());</span><br><span class="line">                <span class="type">String</span> <span class="variable">oldSeInfo</span> <span class="operator">=</span> packageState.getSeInfo();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (pkg == <span class="literal">null</span>) &#123;</span><br><span class="line">                    Slog.e(TAG, <span class="string">&quot;Failed to find package &quot;</span> + packageName);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">newSeInfo</span> <span class="operator">=</span> SELinuxMMAC.getSeInfo(packageState, pkg, sharedUser,</span><br><span class="line">                        m.mInjector.getCompatibility());</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!newSeInfo.equals(oldSeInfo)) &#123;</span><br><span class="line">                    Slog.i(TAG, <span class="string">&quot;Updating seInfo for package &quot;</span> + packageName + <span class="string">&quot; from: &quot;</span></span><br><span class="line">                            + oldSeInfo + <span class="string">&quot; to: &quot;</span> + newSeInfo);</span><br><span class="line">                    m.commitPackageStateMutation(<span class="literal">null</span>, packageName,</span><br><span class="line">                            state -&gt; state.setOverrideSeInfo(newSeInfo));</span><br><span class="line">                    m.mAppDataHelper.prepareAppDataAfterInstallLIF(pkg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        injector.getCompatibility().registerListener(SELinuxMMAC.SELINUX_LATEST_CHANGES,</span><br><span class="line">                selinuxChangeListener);</span><br><span class="line">        injector.getCompatibility().registerListener(SELinuxMMAC.SELINUX_R_CHANGES,</span><br><span class="line">                selinuxChangeListener);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为用户安装系统应用</span></span><br><span class="line">        m.installAllowlistedSystemPackages();</span><br><span class="line">        <span class="type">IPackageManagerImpl</span> <span class="variable">iPackageManager</span> <span class="operator">=</span> m.<span class="keyword">new</span> <span class="title class_">IPackageManagerImpl</span>();</span><br><span class="line">        <span class="comment">// 向ServiceManager注册PMS服务</span></span><br><span class="line">        ServiceManager.addService(<span class="string">&quot;package&quot;</span>, iPackageManager);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">PackageManagerNative</span> <span class="variable">pmn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageManagerNative</span>(m);</span><br><span class="line">        ServiceManager.addService(<span class="string">&quot;package_native&quot;</span>, pmn);</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;PMS的构造方法代码较多，可以分为5个阶段。这里直接引用<a href="https://juejin.cn/post/7050112177478336543">wise丰</a>大佬的分析过程。</p><h3 id="1-PMS-START阶段"><a href="#1-PMS-START阶段" class="headerlink" title="1. PMS_START阶段"></a>1. PMS_START阶段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">PackageManagerService</span><span class="params">(Injector injector, <span class="type">boolean</span> onlyCore, <span class="type">boolean</span> factoryTest,</span></span><br><span class="line"><span class="params">        <span class="keyword">final</span> String buildFingerprint, <span class="keyword">final</span> <span class="type">boolean</span> isEngBuild,</span></span><br><span class="line"><span class="params">        <span class="keyword">final</span> <span class="type">boolean</span> isUserDebugBuild, <span class="keyword">final</span> <span class="type">int</span> sdkVersion, <span class="keyword">final</span> String incrementalVersion)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印启动日志</span></span><br><span class="line">    EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_PMS_START, SystemClock.uptimeMillis());</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建Settings对象</span></span><br><span class="line">    mSettings = injector.getSettings();</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用addSharedUserLPw函数添加共享ID</span></span><br><span class="line">    t.traceBegin(<span class="string">&quot;addSharedUsers&quot;</span>);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.system&quot;</span>, Process.SYSTEM_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.phone&quot;</span>, RADIO_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.log&quot;</span>, LOG_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.nfc&quot;</span>, NFC_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.bluetooth&quot;</span>, BLUETOOTH_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.shell&quot;</span>, SHELL_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.se&quot;</span>, SE_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.networkstack&quot;</span>, NETWORKSTACK_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    mSettings.addSharedUserLPw(<span class="string">&quot;android.uid.uwb&quot;</span>, UWB_UID,</span><br><span class="line">        ApplicationInfo.FLAG_SYSTEM, ApplicationInfo.PRIVATE_FLAG_PRIVILEGED);</span><br><span class="line">    t.traceEnd();</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取dex优化对象</span></span><br><span class="line">    mPackageDexOptimizer = injector.getPackageDexOptimizer();</span><br><span class="line">    <span class="comment">// 获取dex管理对象</span></span><br><span class="line">    mDexManager = injector.getDexManager();</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取系统配置信息</span></span><br><span class="line">    t.traceBegin(<span class="string">&quot;get system config&quot;</span>);</span><br><span class="line">    <span class="type">SystemConfig</span> <span class="variable">systemConfig</span> <span class="operator">=</span> injector.getSystemConfig();</span><br><span class="line">    mAvailableFeatures = systemConfig.getAvailableFeatures();</span><br><span class="line">    t.traceEnd();</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在Data分区创建app目录</span></span><br><span class="line">    mAppInstallDir = <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getDataDirectory(), <span class="string">&quot;app&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在Data分区创建framework目录</span></span><br><span class="line">    <span class="type">File</span> <span class="variable">frameworkDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getRootDirectory(), <span class="string">&quot;framework&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取Settings类,这个类在Android中是在PMS的Main函数下初始化的</li><li>向Settings中添加信息</li><li>获取系统配置信息，包括全局属性、groupid以及系统权限。将一些类进行绑定，包括：PackageDexOptimizer （dex优化工具类） 、 DexManager（dex管理类）、PackageHandler（建立package相关操作的消息循环）等</li><li>创建data下的各种目录</li></ul><h3 id="2-PMS-SYSTEM-SCAN-START阶段"><a href="#2-PMS-SYSTEM-SCAN-START阶段" class="headerlink" title="2. PMS_SYSTEM_SCAN_START阶段"></a>2. PMS_SYSTEM_SCAN_START阶段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">PackageManagerService</span><span class="params">(Injector injector, <span class="type">boolean</span> onlyCore, <span class="type">boolean</span> factoryTest,</span></span><br><span class="line"><span class="params">        <span class="keyword">final</span> String buildFingerprint, <span class="keyword">final</span> <span class="type">boolean</span> isEngBuild,</span></span><br><span class="line"><span class="params">        <span class="keyword">final</span> <span class="type">boolean</span> isUserDebugBuild, <span class="keyword">final</span> <span class="type">int</span> sdkVersion, <span class="keyword">final</span> String incrementalVersion)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">    <span class="comment">// 打印启动日志</span></span><br><span class="line">    EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_PMS_SYSTEM_SCAN_START, startTime);</span><br><span class="line">       </span><br><span class="line">    <span class="comment">// 读取环境变量BOOTCLASSPATH，用于之后的类加载和优化</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">bootClassPath</span> <span class="operator">=</span> System.getenv(<span class="string">&quot;BOOTCLASSPATH&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">systemServerClassPath</span> <span class="operator">=</span> System.getenv(<span class="string">&quot;SYSTEMSERVERCLASSPATH&quot;</span>);</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在system/下创建framework目录</span></span><br><span class="line">    <span class="type">File</span> <span class="variable">frameworkDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(Environment.getRootDirectory(), <span class="string">&quot;framework&quot;</span>);</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在扫描APK之前准备APEX包信息</span></span><br><span class="line">    mApexManager.scanApexPackagesTraced(packageParser, executorService);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在vendor/product/system_ext分区的收集包名</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> mDirsToScanAsSystem.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ScanPartition</span> <span class="variable">partition</span> <span class="operator">=</span> mDirsToScanAsSystem.get(i);</span><br><span class="line">        <span class="keyword">if</span> (partition.getOverlayFolder() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        scanDirTracedLI(partition.getOverlayFolder(), systemParseFlags,</span><br><span class="line">                systemScanFlags | partition.scanFlag, <span class="number">0</span>,</span><br><span class="line">                packageParser, executorService);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在system/framework目录下收集包名</span></span><br><span class="line">    scanDirTracedLI(frameworkDir, systemParseFlags,</span><br><span class="line">            systemScanFlags | SCAN_NO_DEX | SCAN_AS_PRIVILEGED, <span class="number">0</span>,</span><br><span class="line">            packageParser, executorService);</span><br><span class="line">    <span class="keyword">if</span> (!mPackages.containsKey(<span class="string">&quot;android&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(</span><br><span class="line">                <span class="string">&quot;Failed to load frameworks package; check log for warnings&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, size = mDirsToScanAsSystem.size(); i &lt; size; i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ScanPartition</span> <span class="variable">partition</span> <span class="operator">=</span> mDirsToScanAsSystem.get(i);</span><br><span class="line">        <span class="keyword">if</span> (partition.getPrivAppFolder() != <span class="literal">null</span>) &#123;</span><br><span class="line">            scanDirTracedLI(partition.getPrivAppFolder(), systemParseFlags,</span><br><span class="line">                    systemScanFlags | SCAN_AS_PRIVILEGED | partition.scanFlag, <span class="number">0</span>,</span><br><span class="line">                    packageParser, executorService);</span><br><span class="line">        &#125;</span><br><span class="line">        scanDirTracedLI(partition.getAppFolder(), systemParseFlags,</span><br><span class="line">                systemScanFlags | partition.scanFlag, <span class="number">0</span>,</span><br><span class="line">                packageParser, executorService);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">// 收集可能不再存在的系统App</span></span><br><span class="line">     <span class="keyword">final</span> List&lt;String&gt; possiblyDeletedUpdatedSystemApps = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">     <span class="keyword">final</span> List&lt;String&gt; stubSystemApps = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">     <span class="keyword">if</span> (!mOnlyCore) &#123;</span><br><span class="line">        <span class="comment">// do this first before mucking with mPackages for the &quot;expecting better&quot; case</span></span><br><span class="line">        <span class="keyword">final</span> Iterator&lt;AndroidPackage&gt; pkgIterator = mPackages.values().iterator();</span><br><span class="line">        <span class="keyword">while</span> (pkgIterator.hasNext()) &#123;</span><br><span class="line">             <span class="keyword">final</span> <span class="type">AndroidPackage</span> <span class="variable">pkg</span> <span class="operator">=</span> pkgIterator.next();</span><br><span class="line">             <span class="keyword">if</span> (pkg.isStub()) &#123;</span><br><span class="line">                 stubSystemApps.add(pkg.getPackageName());</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">final</span> Iterator&lt;PackageSetting&gt; psit = mSettings.mPackages.values().iterator();</span><br><span class="line">   <span class="comment">// 将packages.xml文件中读取的记录和实时扫描得到的记录做比较，看看有哪些变化</span></span><br><span class="line">   <span class="comment">// OTA升级往往会带来一些变化</span></span><br><span class="line">   <span class="keyword">while</span> (psit.hasNext()) &#123;</span><br><span class="line">       <span class="type">PackageSetting</span> <span class="variable">ps</span> <span class="operator">=</span> psit.next();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 非系统App跳过</span></span><br><span class="line">       <span class="keyword">if</span> ((ps.pkgFlags &amp; ApplicationInfo.FLAG_SYSTEM) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">AndroidPackage</span> <span class="variable">scannedPkg</span> <span class="operator">=</span> mPackages.get(ps.name);</span><br><span class="line">        <span class="keyword">if</span> (scannedPkg != <span class="literal">null</span>) &#123;</span><br><span class="line">             <span class="keyword">if</span> (mSettings.isDisabledSystemPackageLPr(ps.name)) &#123;</span><br><span class="line">                   logCriticalInfo(Log.WARN,</span><br><span class="line">                   <span class="string">&quot;Expecting better updated system app for &quot;</span> + ps.name</span><br><span class="line">                   + <span class="string">&quot;; removing system app.  Last known&quot;</span></span><br><span class="line">                   + <span class="string">&quot; codePath=&quot;</span> + ps.codePathString</span><br><span class="line">                   + <span class="string">&quot;, versionCode=&quot;</span> + ps.versionCode</span><br><span class="line">                   + <span class="string">&quot;; scanned versionCode=&quot;</span> + scannedPkg.getLongVersionCode());</span><br><span class="line">                   removePackageLI(scannedPkg, <span class="literal">true</span>);</span><br><span class="line">                   mExpectingBetter.put(ps.name, ps.codePath);</span><br><span class="line">                 &#125;</span><br><span class="line">             <span class="keyword">continue</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (!mSettings.isDisabledSystemPackageLPr(ps.name)) &#123;</span><br><span class="line">             psit.remove();</span><br><span class="line">             logCriticalInfo(Log.WARN, <span class="string">&quot;System package &quot;</span> + ps.name</span><br><span class="line">             + <span class="string">&quot; no longer exists; it&#x27;s data will be wiped&quot;</span>);</span><br><span class="line">             mPermissionManager.updatePermissions(ps.name, <span class="literal">null</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">final</span> <span class="type">PackageSetting</span> <span class="variable">disabledPs</span> <span class="operator">=</span></span><br><span class="line">             mSettings.getDisabledSystemPkgLPr(ps.name);</span><br><span class="line">             <span class="keyword">if</span> (disabledPs.codePath == <span class="literal">null</span> || !disabledPs.codePath.exists()</span><br><span class="line">                      || disabledPs.pkg == <span class="literal">null</span>) &#123;</span><br><span class="line">                  possiblyDeletedUpdatedSystemApps.add(ps.name);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mExpectingBetter.put(disabledPs.name, disabledPs.codePath);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     ...</span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>扫描各个系统分区的的App</li><li>解析系统App信息</li><li>把解析结果存储起来，存储在PMS的相关属性和mSettings里</li></ul><h3 id="3-PMS-DATA-SCAN-START阶段"><a href="#3-PMS-DATA-SCAN-START阶段" class="headerlink" title="3. PMS_DATA_SCAN_START阶段"></a>3. PMS_DATA_SCAN_START阶段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!mOnlyCore) &#123;</span><br><span class="line">    EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_PMS_DATA_SCAN_START,</span><br><span class="line">            SystemClock.uptimeMillis());</span><br><span class="line">            </span><br><span class="line">    <span class="comment">// 在/data/app目录扫描用户安装文件</span></span><br><span class="line">    scanDirTracedLI(sAppInstallDir, <span class="number">0</span>, scanFlags | SCAN_REQUIRE_KNOWN, <span class="number">0</span>,</span><br><span class="line">            packageParser, executorService);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭packageParser</span></span><br><span class="line">packageParser.close();</span><br><span class="line"></span><br><span class="line">List&lt;Runnable&gt; unfinishedTasks = executorService.shutdownNow();</span><br><span class="line"><span class="keyword">if</span> (!unfinishedTasks.isEmpty()) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Not all tasks finished before calling close: &quot;</span></span><br><span class="line">            + unfinishedTasks);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!mOnlyCore) &#123;</span><br><span class="line">    <span class="comment">// 删除OTA升级中移除的系统App，如果OTA对这个App的操作是“删除”，则完全删除App相关的东西，否则剥夺它的“系统App”权限</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> possiblyDeletedUpdatedSystemApps.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> possiblyDeletedUpdatedSystemApps.get(i);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">AndroidPackage</span> <span class="variable">pkg</span> <span class="operator">=</span> mPackages.get(packageName);</span><br><span class="line">        <span class="keyword">final</span> String msg;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从disabled清单删除</span></span><br><span class="line">        mSettings.removeDisabledSystemPackageLPw(packageName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pkg == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// should have found an update, but, we didn&#x27;t; remove everything</span></span><br><span class="line">            <span class="comment">// pkg</span></span><br><span class="line">            msg = <span class="string">&quot;Updated system package &quot;</span> + packageName</span><br><span class="line">                    + <span class="string">&quot; no longer exists; removing its data&quot;</span>;</span><br><span class="line">            <span class="comment">// Actual deletion of code and data will be handled by later</span></span><br><span class="line">            <span class="comment">// reconciliation step</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// found an update; revoke system privileges</span></span><br><span class="line">            msg = <span class="string">&quot;Updated system package &quot;</span> + packageName</span><br><span class="line">                    + <span class="string">&quot; no longer exists; rescanning package on data&quot;</span>;</span><br><span class="line">             </span><br><span class="line">            <span class="comment">//  从系统中删除该包并重新扫描权限</span></span><br><span class="line">            removePackageLI(pkg, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">File</span> <span class="variable">codePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(pkg.getCodePath());</span><br><span class="line">                scanPackageTracedLI(codePath, <span class="number">0</span>, scanFlags, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (PackageManagerException e) &#123;</span><br><span class="line">                Slog.e(TAG, <span class="string">&quot;Failed to parse updated, ex-system package: &quot;</span></span><br><span class="line">                        + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">final</span> <span class="type">PackageSetting</span> <span class="variable">ps</span> <span class="operator">=</span> mSettings.mPackages.get(packageName);</span><br><span class="line">        <span class="keyword">if</span> (ps != <span class="literal">null</span> &amp;&amp; mPackages.get(packageName) == <span class="literal">null</span>) &#123;</span><br><span class="line">            removePackageDataLIF(ps, <span class="literal">null</span>, <span class="literal">null</span>, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        logCriticalInfo(Log.WARN, msg);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//遍历mExpectingBetter列表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mExpectingBetter.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> mExpectingBetter.keyAt(i);</span><br><span class="line">        <span class="keyword">if</span> (!mPackages.containsKey(packageName)) &#123;</span><br><span class="line">            <span class="comment">//得到系统App的升级包路径</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">File</span> <span class="variable">scanFile</span> <span class="operator">=</span> mExpectingBetter.valueAt(i);</span><br><span class="line"></span><br><span class="line">            logCriticalInfo(Log.WARN, <span class="string">&quot;Expected better &quot;</span> + packageName</span><br><span class="line">                    + <span class="string">&quot; but never showed up; reverting to system&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="meta">@ParseFlags</span> <span class="type">int</span> <span class="variable">reparseFlags</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="meta">@ScanFlags</span> <span class="type">int</span> <span class="variable">rescanFlags</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> mDirsToScanAsSystem.size() - <span class="number">1</span>; i1 &gt;= <span class="number">0</span>; i1--) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">ScanPartition</span> <span class="variable">partition</span> <span class="operator">=</span> mDirsToScanAsSystem.get(i1);</span><br><span class="line">                <span class="keyword">if</span> (partition.containsPrivApp(scanFile)) &#123;</span><br><span class="line">                    reparseFlags = systemParseFlags;</span><br><span class="line">                    rescanFlags = systemScanFlags | SCAN_AS_PRIVILEGED</span><br><span class="line">                            | partition.scanFlag;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (partition.containsApp(scanFile)) &#123;</span><br><span class="line">                    reparseFlags = systemParseFlags;</span><br><span class="line">                    rescanFlags = systemScanFlags | partition.scanFlag;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (rescanFlags == <span class="number">0</span>) &#123;</span><br><span class="line">                Slog.e(TAG, <span class="string">&quot;Ignoring unexpected fallback path &quot;</span> + scanFile);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 将packageName对应的包设置数据（PackageSetting）添加到mSettings的mPackages中</span></span><br><span class="line">            mSettings.enableSystemPackageLPw(packageName);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 扫描系统App的升级包</span></span><br><span class="line">                scanPackageTracedLI(scanFile, reparseFlags, rescanFlags, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (PackageManagerException e) &#123;</span><br><span class="line">                Slog.e(TAG, <span class="string">&quot;Failed to parse original system package: &quot;</span></span><br><span class="line">                        + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    installSystemStubPackages(stubSystemApps, scanFlags);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">cachedNonSystemApps</span> <span class="operator">=</span> PackageCacher.sCachedPackageReadCount.get()</span><br><span class="line">                    - cachedSystemApps;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">long</span> <span class="variable">dataScanTime</span> <span class="operator">=</span> SystemClock.uptimeMillis() - systemScanTime - startTime;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">dataPackagesCount</span> <span class="operator">=</span> mPackages.size() - systemPackagesCount;</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Finished scanning non-system apps. Time: &quot;</span> + dataScanTime</span><br><span class="line">            + <span class="string">&quot; ms, packageCount: &quot;</span> + dataPackagesCount</span><br><span class="line">            + <span class="string">&quot; , timePerPackage: &quot;</span></span><br><span class="line">            + (dataPackagesCount == <span class="number">0</span> ? <span class="number">0</span> : dataScanTime / dataPackagesCount)</span><br><span class="line">            + <span class="string">&quot; , cached: &quot;</span> + cachedNonSystemApps);</span><br><span class="line">    <span class="keyword">if</span> (mIsUpgrade &amp;&amp; dataPackagesCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//CHECKSTYLE:OFF IndentationCheck</span></span><br><span class="line">        FrameworkStatsLog.write(</span><br><span class="line">            FrameworkStatsLog.BOOT_TIME_EVENT_DURATION_REPORTED,</span><br><span class="line">            BOOT_TIME_EVENT_DURATION__EVENT__OTA_PACKAGE_MANAGER_DATA_APP_AVG_SCAN_TIME,</span><br><span class="line">            dataScanTime / dataPackagesCount);</span><br><span class="line">        <span class="comment">//CHECKSTYLE:OFF IndentationCheck</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">mExpectingBetter.clear();</span><br><span class="line"></span><br><span class="line">mStorageManagerPackage = getStorageManagerPackageName();</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-PMS-SCAN-END阶段"><a href="#4-PMS-SCAN-END阶段" class="headerlink" title="4. PMS_SCAN_END阶段"></a>4. PMS_SCAN_END阶段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打印相关日志</span></span><br><span class="line">EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_PMS_SCAN_END,</span><br><span class="line">        SystemClock.uptimeMillis());</span><br><span class="line">Slog.i(TAG, <span class="string">&quot;Time to scan packages: &quot;</span></span><br><span class="line">        + ((SystemClock.uptimeMillis()-startTime)/<span class="number">1000f</span>)</span><br><span class="line">        + <span class="string">&quot; seconds&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the platform SDK has changed since the last time we booted,</span></span><br><span class="line"><span class="comment">// we need to re-grant app permission to catch any new ones that</span></span><br><span class="line"><span class="comment">// appear.  This is really a hack, and means that apps can in some</span></span><br><span class="line"><span class="comment">// cases get permissions that the user didn&#x27;t initially explicitly</span></span><br><span class="line"><span class="comment">// allow...  it would be nice to have some better way to handle</span></span><br><span class="line"><span class="comment">// this situation.</span></span><br><span class="line"><span class="comment">// 如果SDK版本发生了变化（升级系统），重新对App进行授权</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">sdkUpdated</span> <span class="operator">=</span> (ver.sdkVersion != mSdkVersion);</span><br><span class="line"><span class="keyword">if</span> (sdkUpdated) &#123;</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Platform changed from &quot;</span> + ver.sdkVersion + <span class="string">&quot; to &quot;</span></span><br><span class="line">            + mSdkVersion + <span class="string">&quot;; regranting permissions for internal storage&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">mPermissionManager.updateAllPermissions(</span><br><span class="line">        StorageManager.UUID_PRIVATE_INTERNAL, sdkUpdated);</span><br><span class="line">ver.sdkVersion = mSdkVersion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If this is the first boot or an update from pre-M, and it is a normal</span></span><br><span class="line"><span class="comment">// boot, then we need to initialize the default preferred apps across</span></span><br><span class="line"><span class="comment">// all defined users.</span></span><br><span class="line"><span class="comment">// 如果是首次启动或者从6.0以前的系统升级，初始化用户首选App</span></span><br><span class="line"><span class="keyword">if</span> (!mOnlyCore &amp;&amp; (mPromoteSystemApps || mFirstBoot)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (UserInfo user : mInjector.getUserManagerInternal().getUsers(<span class="literal">true</span>)) &#123;</span><br><span class="line">        mSettings.applyDefaultPreferredAppsLPw(user.id);</span><br><span class="line">        primeDomainVerificationsLPw(user.id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Prepare storage for system user really early during boot,</span></span><br><span class="line"><span class="comment">// since core system apps like SettingsProvider and SystemUI</span></span><br><span class="line"><span class="comment">// can&#x27;t wait for user to start</span></span><br><span class="line"><span class="comment">// 为系统用户准备存储空间，因为SettingsProvider和SystemUI等核心系统App不可能等用户去启动</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">int</span> storageFlags;</span><br><span class="line"><span class="keyword">if</span> (StorageManager.isFileEncryptedNativeOrEmulated()) &#123;</span><br><span class="line">    storageFlags = StorageManager.FLAG_STORAGE_DE;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    storageFlags = StorageManager.FLAG_STORAGE_DE | StorageManager.FLAG_STORAGE_CE;</span><br><span class="line">&#125;</span><br><span class="line">List&lt;String&gt; deferPackages = reconcileAppsDataLI(StorageManager.UUID_PRIVATE_INTERNAL,</span><br><span class="line">        UserHandle.USER_SYSTEM, storageFlags, <span class="literal">true</span> <span class="comment">/* migrateAppData */</span>,</span><br><span class="line">        <span class="literal">true</span> <span class="comment">/* onlyCoreApps */</span>);</span><br><span class="line">mPrepareAppDataFuture = SystemServerInitThreadPool.submit(() -&gt; &#123;</span><br><span class="line">    <span class="type">TimingsTraceLog</span> <span class="variable">traceLog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TimingsTraceLog</span>(<span class="string">&quot;SystemServerTimingAsync&quot;</span>,</span><br><span class="line">            Trace.TRACE_TAG_PACKAGE_MANAGER);</span><br><span class="line">    traceLog.traceBegin(<span class="string">&quot;AppDataFixup&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mInstaller.fixupAppData(StorageManager.UUID_PRIVATE_INTERNAL,</span><br><span class="line">                StorageManager.FLAG_STORAGE_DE | StorageManager.FLAG_STORAGE_CE);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InstallerException e) &#123;</span><br><span class="line">        Slog.w(TAG, <span class="string">&quot;Trouble fixing GIDs&quot;</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">    traceLog.traceEnd();</span><br><span class="line"></span><br><span class="line">    traceLog.traceBegin(<span class="string">&quot;AppDataPrepare&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (deferPackages == <span class="literal">null</span> || deferPackages.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (String pkgName : deferPackages) &#123;</span><br><span class="line">        <span class="type">AndroidPackage</span> <span class="variable">pkg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">            <span class="type">PackageSetting</span> <span class="variable">ps</span> <span class="operator">=</span> mSettings.getPackageLPr(pkgName);</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="literal">null</span> &amp;&amp; ps.getInstalled(UserHandle.USER_SYSTEM)) &#123;</span><br><span class="line">                pkg = ps.pkg;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pkg != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (mInstallLock) &#123;</span><br><span class="line">                prepareAppDataAndMigrateLIF(pkg, UserHandle.USER_SYSTEM, storageFlags,</span><br><span class="line">                        <span class="literal">true</span> <span class="comment">/* maybeMigrateAppData */</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    traceLog.traceEnd();</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Deferred reconcileAppsData finished &quot;</span> + count + <span class="string">&quot; packages&quot;</span>);</span><br><span class="line">&#125;, <span class="string">&quot;prepareAppData&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果是升级后第一次正常启动，需要清除代码缓存，但不是会清除应用的配置文件</span></span><br><span class="line"><span class="keyword">if</span> (mIsUpgrade &amp;&amp; !mOnlyCore) &#123;</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Build fingerprint changed; clearing code caches&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mSettings.mPackages.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">PackageSetting</span> <span class="variable">ps</span> <span class="operator">=</span> mSettings.mPackages.valueAt(i);</span><br><span class="line">        <span class="keyword">if</span> (Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, ps.volumeUuid)) &#123;</span><br><span class="line">            <span class="comment">// No apps are running this early, so no need to freeze</span></span><br><span class="line">            clearAppDataLIF(ps.pkg, UserHandle.USER_ALL,</span><br><span class="line">                    FLAG_STORAGE_DE | FLAG_STORAGE_CE | FLAG_STORAGE_EXTERNAL</span><br><span class="line">                            | Installer.FLAG_CLEAR_CODE_CACHE_ONLY</span><br><span class="line">                            | Installer.FLAG_CLEAR_APP_DATA_KEEP_ART_PROFILES);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ver.fingerprint = Build.FINGERPRINT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Grandfather existing (installed before Q) non-system apps to hide</span></span><br><span class="line"><span class="comment">// their icons in launcher.</span></span><br><span class="line"><span class="keyword">if</span> (!mOnlyCore &amp;&amp; mIsPreQUpgrade) &#123;</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Whitelisting all existing apps to hide their icons&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> mSettings.mPackages.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">PackageSetting</span> <span class="variable">ps</span> <span class="operator">=</span> mSettings.mPackages.valueAt(i);</span><br><span class="line">        <span class="keyword">if</span> ((ps.pkgFlags &amp; ApplicationInfo.FLAG_SYSTEM) != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ps.disableComponentLPw(PackageManager.APP_DETAILS_ACTIVITY_CLASS_NAME,</span><br><span class="line">                UserHandle.USER_SYSTEM);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// clear only after permissions and other defaults have been updated</span></span><br><span class="line">mPromoteSystemApps = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// All the changes are done during package scanning.</span></span><br><span class="line">ver.databaseVersion = Settings.CURRENT_DATABASE_VERSION;</span><br><span class="line"></span><br><span class="line"><span class="comment">// can downgrade to reader</span></span><br><span class="line">t.traceBegin(<span class="string">&quot;write settings&quot;</span>);</span><br><span class="line"><span class="comment">// 把更新后的mSettings中更新后的相关信息写入packages.xml等对应文件中</span></span><br><span class="line">mSettings.writeLPr();</span><br><span class="line">t.traceEnd();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>如果SDK版本发生了变化（升级系统），重新对App进行授权</li><li>为系统核心服务准备存储空间</li><li>如果是升级后第一次正常启动，需要清除代码缓存，但不是会清除应用的配置文件</li><li>把更新后的信息写回对应的xml文件中</li></ul><h3 id="5-PMS-READY阶段"><a href="#5-PMS-READY阶段" class="headerlink" title="5. PMS_READY阶段"></a>5. PMS_READY阶段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">PackageManagerService</span><span class="params">(Injector injector, <span class="type">boolean</span> onlyCore, <span class="type">boolean</span> factoryTest)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">synchronized</span> (mInstallLock) &#123;</span><br><span class="line">    <span class="comment">// writer</span></span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_PMS_READY,</span><br><span class="line">                SystemClock.uptimeMillis());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mOnlyCore) &#123;</span><br><span class="line">            mRequiredVerifierPackage = getRequiredButNotReallyRequiredVerifierLPr();</span><br><span class="line">            mRequiredInstallerPackage = getRequiredInstallerLPr();</span><br><span class="line">            mRequiredUninstallerPackage = getRequiredUninstallerLPr();</span><br><span class="line">            mIntentFilterVerifierComponent = getIntentFilterVerifierComponentNameLPr();</span><br><span class="line">            <span class="keyword">if</span> (mIntentFilterVerifierComponent != <span class="literal">null</span>) &#123;</span><br><span class="line">                mIntentFilterVerifier = <span class="keyword">new</span> <span class="title class_">IntentVerifierProxy</span>(mContext,</span><br><span class="line">                        mIntentFilterVerifierComponent);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                mIntentFilterVerifier = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mServicesExtensionPackageName = getRequiredServicesExtensionPackageLPr();</span><br><span class="line">            mSharedSystemSharedLibraryPackageName = getRequiredSharedLibraryLPr(</span><br><span class="line">                    PackageManager.SYSTEM_SHARED_LIBRARY_SHARED,</span><br><span class="line">                    SharedLibraryInfo.VERSION_UNDEFINED);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mRequiredVerifierPackage = <span class="literal">null</span>;</span><br><span class="line">            mRequiredInstallerPackage = <span class="literal">null</span>;</span><br><span class="line">            mRequiredUninstallerPackage = <span class="literal">null</span>;</span><br><span class="line">            mIntentFilterVerifierComponent = <span class="literal">null</span>;</span><br><span class="line">            mIntentFilterVerifier = <span class="literal">null</span>;</span><br><span class="line">            mServicesExtensionPackageName = <span class="literal">null</span>;</span><br><span class="line">            mSharedSystemSharedLibraryPackageName = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// PermissionController hosts default permission granting and role management, so it&#x27;s a</span></span><br><span class="line">        <span class="comment">// critical part of the core system.</span></span><br><span class="line">        mRequiredPermissionControllerPackage = getRequiredPermissionControllerLPr();</span><br><span class="line"></span><br><span class="line">        mSettings.setPermissionControllerVersion(</span><br><span class="line">                getPackageInfo(mRequiredPermissionControllerPackage, <span class="number">0</span>,</span><br><span class="line">                        UserHandle.USER_SYSTEM).getLongVersionCode());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Initialize InstantAppRegistry&#x27;s Instant App list for all users.</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span>[] userIds = UserManagerService.getInstance().getUserIds();</span><br><span class="line">        <span class="keyword">for</span> (AndroidPackage pkg : mPackages.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pkg.isSystem()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> userId : userIds) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">PackageSetting</span> <span class="variable">ps</span> <span class="operator">=</span> getPackageSetting(pkg.getPackageName());</span><br><span class="line">                <span class="keyword">if</span> (ps == <span class="literal">null</span> || !ps.getInstantApp(userId) || !ps.getInstalled(userId)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                mInstantAppRegistry.addInstantAppLPw(userId, ps.appId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Prepare a supplier of package parser for the staging manager to parse apex file</span></span><br><span class="line">        <span class="comment">// during the staging installation.</span></span><br><span class="line">        <span class="keyword">final</span> Supplier&lt;PackageParser2&gt; apexParserSupplier = () -&gt; <span class="keyword">new</span> <span class="title class_">PackageParser2</span>(</span><br><span class="line">                mSeparateProcesses, mOnlyCore, mMetrics, <span class="literal">null</span> <span class="comment">/* cacheDir */</span>,</span><br><span class="line">                mPackageParserCallback);</span><br><span class="line">        <span class="comment">// 初始化PackageInstallerService</span></span><br><span class="line">        mInstallerService = <span class="keyword">new</span> <span class="title class_">PackageInstallerService</span>(mContext, <span class="built_in">this</span>, apexParserSupplier);</span><br><span class="line">        <span class="keyword">final</span> Pair&lt;ComponentName, String&gt; instantAppResolverComponent =</span><br><span class="line">                getInstantAppResolverLPr();</span><br><span class="line">        <span class="keyword">if</span> (instantAppResolverComponent != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_INSTANT) &#123;</span><br><span class="line">                Slog.d(TAG, <span class="string">&quot;Set ephemeral resolver: &quot;</span> + instantAppResolverComponent);</span><br><span class="line">            &#125;</span><br><span class="line">            mInstantAppResolverConnection = <span class="keyword">new</span> <span class="title class_">InstantAppResolverConnection</span>(</span><br><span class="line">                    mContext, instantAppResolverComponent.first,</span><br><span class="line">                    instantAppResolverComponent.second);</span><br><span class="line">            mInstantAppResolverSettingsComponent =</span><br><span class="line">                    getInstantAppResolverSettingsLPr(instantAppResolverComponent.first);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mInstantAppResolverConnection = <span class="literal">null</span>;</span><br><span class="line">            mInstantAppResolverSettingsComponent = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        updateInstantAppInstallerLocked(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取并更新dex文件的使用情况</span></span><br><span class="line">        <span class="keyword">final</span> Map&lt;Integer, List&lt;PackageInfo&gt;&gt; userPackages = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> userId : userIds) &#123;</span><br><span class="line">            userPackages.put(userId, getInstalledPackages(<span class="comment">/*flags*/</span> <span class="number">0</span>, userId).getList());</span><br><span class="line">        &#125;</span><br><span class="line">        mDexManager.load(userPackages);</span><br><span class="line">        <span class="keyword">if</span> (mIsUpgrade) &#123;</span><br><span class="line">            FrameworkStatsLog.write(</span><br><span class="line">                    FrameworkStatsLog.BOOT_TIME_EVENT_DURATION_REPORTED,</span><br><span class="line">                    BOOT_TIME_EVENT_DURATION__EVENT__OTA_PACKAGE_MANAGER_INIT_TIME,</span><br><span class="line">                    SystemClock.uptimeMillis() - startTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="comment">// synchronized (mLock)</span></span><br><span class="line">    &#125; <span class="comment">// synchronized (mInstallLock)</span></span><br><span class="line">    <span class="comment">// CHECKSTYLE:ON IndentationCheck</span></span><br><span class="line"></span><br><span class="line">    mModuleInfoProvider = <span class="keyword">new</span> <span class="title class_">ModuleInfoProvider</span>(mContext, <span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Uncork cache invalidations and allow clients to cache package information.</span></span><br><span class="line">    PackageManager.uncorkPackageInfoCache();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Now after opening every single application zip, make sure they</span></span><br><span class="line">    <span class="comment">// are all flushed.  Not really needed, but keeps things nice and</span></span><br><span class="line">    <span class="comment">// tidy.</span></span><br><span class="line">    t.traceBegin(<span class="string">&quot;GC&quot;</span>);</span><br><span class="line">    Runtime.getRuntime().gc();</span><br><span class="line">    t.traceEnd();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The initial scanning above does many calls into installd while</span></span><br><span class="line">    <span class="comment">// holding the mPackages lock, but we&#x27;re mostly interested in yelling</span></span><br><span class="line">    <span class="comment">// once we have a booted system.</span></span><br><span class="line">    mInstaller.setWarnIfHeld(mLock);</span><br><span class="line"></span><br><span class="line">    PackageParser.readConfigUseRoundIcon(mContext.getResources());</span><br><span class="line"></span><br><span class="line">    mServiceStartWithDelay = SystemClock.uptimeMillis() + (<span class="number">60</span> * <span class="number">1000L</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h2><h3 id="apk-文件构成"><a href="#apk-文件构成" class="headerlink" title="apk 文件构成"></a>apk 文件构成</h3><table><thead><tr><th>目录 or 文件</th><th>描述</th></tr></thead><tbody><tr><td>assert</td><td>存放的原生资源文件,通过AssetManager类访问</td></tr><tr><td>lib</td><td>native库文件</td></tr><tr><td>META-INF</td><td>存放签名信息，用来保证APK包的完整性和系统的安全。系统安装APK时，应用管理器会按照对应算法对包里文件做校验，如果校验结果与META-INF中内容不一致，则不会安装这个APK。</td></tr><tr><td>res</td><td>种资源文件系统会在R.java里面自动生成该资源文件的ID，所以访问这种资源文件比较简单，通过R.XXX.ID即可</td></tr><tr><td>AndroidManifest.xml</td><td>每个应用都必须定义和包含，描述应用的名字、版本权限、引用的库文件等信息。apk中的AndroidManifest.xml经过压缩，可以通过AXMLPrinter2工具解开。</td></tr><tr><td>classes.dex</td><td>是JAVA源码编译后生成的JAVA字节码文件。但Android使用的dalvik虚拟机与标准的JAVA虚拟机不兼容，dex文件与class文件相比，不论是文件结构还是opcode都不一样。</td></tr><tr><td>resources.arsc</td><td>编译后的二进制资源文件。</td></tr></tbody></table><h3 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h3><ul><li>adb install</li></ul><p>&emsp;&emsp;当执行adb install时，会调用packages&#x2F;modules&#x2F;adb&#x2F;client&#x2F;commandline.cpp中的adb_commandline函数,这个过程会把apk文件copy到data&#x2F;local&#x2F;tmp&#x2F;目录下，然后向shell服务发送pm命令安装apk，最后调用Pm.runInstall()方法来安装apk</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;pm&#x2F;PackageManagerShellCommand.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Line 1522    </span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">runInstall</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">        <span class="keyword">return</span> doRunInstall(makeInstallParams(UNSUPPORTED_INSTALL_CMD_OPTS));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">doRunInstall</span><span class="params">(<span class="keyword">final</span> InstallParams params)</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">PrintWriter</span> <span class="variable">pw</span> <span class="operator">=</span> getOutPrintWriter();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">isStreaming</span> <span class="operator">=</span> params.sessionParams.dataLoaderParams != <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">isApex</span> <span class="operator">=</span></span><br><span class="line">                (params.sessionParams.installFlags &amp; PackageManager.INSTALL_APEX) != <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; args = getRemainingArgs();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">fromStdIn</span> <span class="operator">=</span> args.isEmpty() || STDIN_PATH.equals(args.get(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">hasSplits</span> <span class="operator">=</span> args.size() &gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fromStdIn &amp;&amp; params.sessionParams.sizeBytes == -<span class="number">1</span>) &#123;</span><br><span class="line">            pw.println(<span class="string">&quot;Error: must either specify a package size or an APK file&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isApex &amp;&amp; hasSplits) &#123;</span><br><span class="line">            pw.println(<span class="string">&quot;Error: can&#x27;t specify SPLIT(s) for APEX&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isStreaming) &#123;</span><br><span class="line">            <span class="keyword">if</span> (fromStdIn &amp;&amp; hasSplits) &#123;</span><br><span class="line">                pw.println(<span class="string">&quot;Error: can&#x27;t specify SPLIT(s) along with STDIN&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (args.isEmpty()) &#123;</span><br><span class="line">                args.add(STDIN_PATH);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                setParamsSize(params, args);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">sessionId</span> <span class="operator">=</span> doCreateSession(params.sessionParams,</span><br><span class="line">                params.installerPackageName, params.userId);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">abandonSession</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (isStreaming) &#123;</span><br><span class="line">                <span class="keyword">if</span> (doAddFiles(sessionId, args, params.sessionParams.sizeBytes, isApex)</span><br><span class="line">                        != PackageInstaller.STATUS_SUCCESS) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (doWriteSplits(sessionId, args, params.sessionParams.sizeBytes, isApex)</span><br><span class="line">                        != PackageInstaller.STATUS_SUCCESS) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (doCommitSession(sessionId, <span class="literal">false</span> <span class="comment">/*logSuccess*/</span>)</span><br><span class="line">                    != PackageInstaller.STATUS_SUCCESS) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            abandonSession = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (params.sessionParams.isStaged &amp;&amp; params.stagedReadyTimeoutMs &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> doWaitForStagedSessionReady(sessionId, params.stagedReadyTimeoutMs, pw);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            pw.println(<span class="string">&quot;Success&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (abandonSession) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    doAbandonSession(sessionId, <span class="literal">false</span> <span class="comment">/*logSuccess*/</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception ignore) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里关键事件是doCreateSession、doWriteSplits、doCommitSession读写提交session</p><ul><li><p>doCreateSession</p><ul><li>调用的是PackageInstallerService的createSession，这个过程主要是为APK安装做好准备工作，例如权限检查、目的临时文件的创建等， 最终创建出PackageInstallerSession对象。 PackageInstallerSession可以看做是”安装APK”这个请求的封装，其中包含了处理这个请求需要的一些信息。 实际上PackageInstallerSession不仅是封装请求的对象，其自身还是个服务端</li></ul></li><li><p>doWriteSplits</p><ul><li>通过PackageInstallerSession将&#x2F;data&#x2F;local&#x2F;tmp的apk拷贝到终端目录内</li></ul></li><li><p>doCommitSession</p><ul><li>doWriteSplits结束后，如果没有出现任何错误，那么APK源文件已经copy到目的地址了，doCommitSession最终会调用到PMS.installStage来安装apk</li></ul></li><li><p>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;pm&#x2F;PackageManagerService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 进入安装阶段</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">installStage</span><span class="params">(ActiveInstallSession activeInstallSession)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (DEBUG_INSTANT) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((activeInstallSession.getSessionParams().installFlags</span><br><span class="line">                &amp; PackageManager.INSTALL_INSTANT_APP) != <span class="number">0</span>) &#123;</span><br><span class="line">            Slog.d(TAG, <span class="string">&quot;Ephemeral install of &quot;</span> + activeInstallSession.getPackageName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Message</span> <span class="variable">msg</span> <span class="operator">=</span> mHandler.obtainMessage(INIT_COPY);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">InstallParams</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InstallParams</span>(activeInstallSession);</span><br><span class="line">    params.setTraceMethod(<span class="string">&quot;installStage&quot;</span>).setTraceCookie(System.identityHashCode(params));</span><br><span class="line">    msg.obj = params;</span><br><span class="line"></span><br><span class="line">    Trace.asyncTraceBegin(TRACE_TAG_PACKAGE_MANAGER, <span class="string">&quot;installStage&quot;</span>,</span><br><span class="line">            System.identityHashCode(msg.obj));</span><br><span class="line">    Trace.asyncTraceBegin(TRACE_TAG_PACKAGE_MANAGER, <span class="string">&quot;queueInstall&quot;</span>,</span><br><span class="line">            System.identityHashCode(msg.obj));</span><br><span class="line"></span><br><span class="line">    mHandler.sendMessage(msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装过程细分"><a href="#安装过程细分" class="headerlink" title="安装过程细分"></a>安装过程细分</h3><h4 id="首先检查安装包的完整性并解析安装包"><a href="#首先检查安装包的完整性并解析安装包" class="headerlink" title="首先检查安装包的完整性并解析安装包"></a>首先检查安装包的完整性并解析安装包</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//[PackageManagerService.java] preparePackageLI()</span></span><br><span class="line"><span class="comment">// 完整性校验</span></span><br><span class="line"><span class="keyword">if</span> (instantApp &amp;&amp; onExternal) &#123;</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Incompatible ephemeral install; external=&quot;</span> + onExternal);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(PackageManager.INSTALL_FAILED_INSTANT_APP_INVALID);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 检索包设置，并解析应用</span></span><br><span class="line"><span class="meta">@ParseFlags</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">parseFlags</span> <span class="operator">=</span> mDefParseFlags | PackageParser.PARSE_CHATTY</span><br><span class="line">        | PackageParser.PARSE_ENFORCE_CODE</span><br><span class="line">        | (onExternal ? PackageParser.PARSE_EXTERNAL_STORAGE : <span class="number">0</span>);</span><br><span class="line"><span class="type">PackageParser</span> <span class="variable">pp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageParser</span>();</span><br><span class="line">pp.setSeparateProcesses(mSeparateProcesses);</span><br><span class="line">pp.setDisplayMetrics(mMetrics);</span><br><span class="line">pp.setCallback(mPackageParserCallback);</span><br><span class="line">Trace.traceBegin(TRACE_TAG_PACKAGE_MANAGER, <span class="string">&quot;parsePackage&quot;</span>);</span><br><span class="line"><span class="keyword">final</span> PackageParser.Package pkg;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//解析安装包</span></span><br><span class="line">    pkg = pp.parsePackage(tmpPackageFile, parseFlags);</span><br><span class="line">    DexMetadataHelper.validatePackageDexMetadata(pkg);</span><br><span class="line">&#125; <span class="keyword">catch</span> (PackageParserException e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(<span class="string">&quot;Failed parse during installPackageLI&quot;</span>, e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    Trace.traceEnd(TRACE_TAG_PACKAGE_MANAGER);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="检查SDK版本和沙箱版本，同时检查是否有静态共享库，如有则需要放在内部存储中"><a href="#检查SDK版本和沙箱版本，同时检查是否有静态共享库，如有则需要放在内部存储中" class="headerlink" title="检查SDK版本和沙箱版本，同时检查是否有静态共享库，如有则需要放在内部存储中"></a>检查SDK版本和沙箱版本，同时检查是否有静态共享库，如有则需要放在内部存储中</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//[PackageManagerService.java] preparePackageLI()</span></span><br><span class="line"><span class="comment">//检查SDK版本和沙箱版本</span></span><br><span class="line"><span class="keyword">if</span> (instantApp) &#123;</span><br><span class="line">    <span class="keyword">if</span> (pkg.applicationInfo.targetSdkVersion &lt; Build.VERSION_CODES.O) &#123;</span><br><span class="line">        Slog.w(TAG,</span><br><span class="line">        <span class="string">&quot;Instant app package &quot;</span> + pkg.packageName + <span class="string">&quot; does not target at least O&quot;</span>);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_INSTANT_APP_INVALID,</span><br><span class="line">        <span class="string">&quot;Instant app package must target at least O&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pkg.mSharedUserId != <span class="literal">null</span>) &#123;</span><br><span class="line">        Slog.w(TAG, <span class="string">&quot;Instant app package &quot;</span> + pkg.packageName</span><br><span class="line">        + <span class="string">&quot; may not declare sharedUserId.&quot;</span>);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_INSTANT_APP_INVALID,</span><br><span class="line">        <span class="string">&quot;Instant app package may not declare a sharedUserId&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">//检查是否有静态共享库</span></span><br><span class="line"><span class="keyword">if</span> (pkg.applicationInfo.isStaticSharedLibrary()) &#123;</span><br><span class="line"><span class="comment">// Static shared libraries have synthetic package names</span></span><br><span class="line">    renameStaticSharedLibraryPackage(pkg);</span><br><span class="line">    <span class="comment">// No static shared libs on external storage</span></span><br><span class="line">    <span class="keyword">if</span> (onExternal) &#123;</span><br><span class="line">    Slog.i(TAG, <span class="string">&quot;Static shared libs can only be installed on internal storage.&quot;</span>);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_INVALID_INSTALL_LOCATION,</span><br><span class="line">    <span class="string">&quot;Packages declaring static-shared libs cannot be updated&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="检查是否有子安装包，如有则子安装包也需要检测"><a href="#检查是否有子安装包，如有则子安装包也需要检测" class="headerlink" title="检查是否有子安装包，如有则子安装包也需要检测"></a>检查是否有子安装包，如有则子安装包也需要检测</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java]preparePackageLI()</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(pkg.childPackages!=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mPackages)&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> childCount=pkg.childPackages.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;childCount; i++)&#123;</span><br><span class="line">            PackageParser.Package childPkg=pkg.childPackages.get(i);</span><br><span class="line">            PackageInstalledInfo childRes=<span class="keyword">new</span> <span class="title class_">PackageInstalledInfo</span>();</span><br><span class="line">            childRes.setReturnCode(PackageManager.INSTALL_SUCCEEDED);</span><br><span class="line">            childRes.pkg=childPkg;</span><br><span class="line">            childRes.name=childPkg.packageName;</span><br><span class="line">            PackageSetting childPs=mSettings.getPackageLPr(childPkg.packageName);</span><br><span class="line">            <span class="keyword">if</span>(childPs!=<span class="literal">null</span>)&#123;</span><br><span class="line">                childRes.origUsers=childPs.queryInstalledUsers(</span><br><span class="line">                sUserManager.getUserIds(),<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((mPackages.containsKey(childPkg.packageName)))&#123;</span><br><span class="line">                childRes.removedInfo=<span class="keyword">new</span> <span class="title class_">PackageRemovedInfo</span>(<span class="built_in">this</span>);</span><br><span class="line">                childRes.removedInfo.removedPackage=childPkg.packageName;</span><br><span class="line">                childRes.removedInfo.installerPackageName=childPs.installerPackageName;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(res.addedChildPackages==<span class="literal">null</span>)&#123;</span><br><span class="line">                res.addedChildPackages=<span class="keyword">new</span> <span class="title class_">ArrayMap</span>&lt;&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">            res.addedChildPackages.put(childPkg.packageName,childRes);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="校验安装包签名"><a href="#校验安装包签名" class="headerlink" title="校验安装包签名"></a>校验安装包签名</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] preparePackageLI()</span><br><span class="line"><span class="type">PackageSetting</span> <span class="variable">signatureCheckPs</span> <span class="operator">=</span> ps;</span><br><span class="line"><span class="keyword">if</span> (pkg.applicationInfo.isStaticSharedLibrary()) &#123;</span><br><span class="line">    <span class="type">SharedLibraryInfo</span> <span class="variable">libraryInfo</span> <span class="operator">=</span> getLatestSharedLibraVersionLPr(pkg);</span><br><span class="line">    <span class="keyword">if</span> (libraryInfo != <span class="literal">null</span>) &#123;</span><br><span class="line">        signatureCheckPs = mSettings.getPackageLPr(libraryInfo.getPackageName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> <span class="type">KeySetManagerService</span> <span class="variable">ksms</span> <span class="operator">=</span> mSettings.mKeySetManagerService;</span><br><span class="line"><span class="keyword">if</span> (ksms.shouldCheckUpgradeKeySetLocked(signatureCheckPs, scanFlags)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ksms.checkUpgradeKeySetLocked(signatureCheckPs, pkg)) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_UPDATE_INCOMPATIBLE, <span class="string">&quot;Package &quot;</span></span><br><span class="line">    + pkg.packageName + <span class="string">&quot; upgrade keys do not match the &quot;</span></span><br><span class="line">    + <span class="string">&quot;previously installed version&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="设置相关的权限，包括生成权限、移植权限等"><a href="#设置相关的权限，包括生成权限、移植权限等" class="headerlink" title="设置相关的权限，包括生成权限、移植权限等"></a>设置相关的权限，包括生成权限、移植权限等</h4><h4 id="如果这是一个系统应用，则检查是否在外部存储上或是是否被其他应用替换等"><a href="#如果这是一个系统应用，则检查是否在外部存储上或是是否被其他应用替换等" class="headerlink" title="如果这是一个系统应用，则检查是否在外部存储上或是是否被其他应用替换等"></a>如果这是一个系统应用，则检查是否在外部存储上或是是否被其他应用替换等</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java]preparePackageLI()</span><br><span class="line"><span class="keyword">if</span>(systemApp)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(onExternal)&#123;</span><br><span class="line">    <span class="comment">// Abort update; system app can&#x27;t be replaced with app on sdcard</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_INVALID_INSTALL_LOCATION,</span><br><span class="line">    <span class="string">&quot;Cannot install updates to system apps on sdcard&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(instantApp)&#123;</span><br><span class="line">        <span class="comment">// Abort update; system app can&#x27;t be replaced with an instant app</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_INSTANT_APP_INVALID,</span><br><span class="line">        <span class="string">&quot;Cannot update a system app with an instant app&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="生成安装包Abi-Application-binary-interface，应用二进制接口，描述应用程序和操作系统之间或其他应用程序的低级接口"><a href="#生成安装包Abi-Application-binary-interface，应用二进制接口，描述应用程序和操作系统之间或其他应用程序的低级接口" class="headerlink" title="生成安装包Abi(Application binary interface，应用二进制接口，描述应用程序和操作系统之间或其他应用程序的低级接口)"></a>生成安装包Abi(Application binary interface，应用二进制接口，描述应用程序和操作系统之间或其他应用程序的低级接口)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] preparePackageLI()</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">abiOverride</span> <span class="operator">=</span> (TextUtils.isEmpty(pkg.cpuAbiOverride) ?</span><br><span class="line">            args.abiOverride : pkg.cpuAbiOverride);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">extractNativeLibs</span> <span class="operator">=</span> !pkg.isLibrary();</span><br><span class="line">    derivePackageAbi(pkg, abiOverride, extractNativeLibs);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (PackageManagerException pme) &#123;</span><br><span class="line">        Slog.e(TAG, <span class="string">&quot;Error deriving application ABI&quot;</span>, pme);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PrepareFailure</span>(INSTALL_FAILED_INTERNAL_ERROR, <span class="string">&quot;Error deriving application ABI&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="如有必要，优化dex文件"><a href="#如有必要，优化dex文件" class="headerlink" title="如有必要，优化dex文件"></a>如有必要，优化dex文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] executePostCommitSteps()</span><br><span class="line"><span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">performDexopt</span> <span class="operator">=</span>(!instantApp || Global.getInt(mContext.getContentResolver(),Global.INSTANT_APP_DEXOPT_ENABLED, <span class="number">0</span>) != <span class="number">0</span>)&amp;&amp; ((pkg.applicationInfo.flags &amp; ApplicationInfo.FLAG_DEBUGGABLE) == <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (performDexopt) &#123;</span><br><span class="line">    <span class="comment">// Compile the layout resources.</span></span><br><span class="line">    <span class="keyword">if</span> (SystemProperties.getBoolean(PRECOMPILE_LAYOUTS, <span class="literal">false</span>)) &#123;</span><br><span class="line">    Trace.traceBegin(TRACE_TAG_PACKAGE_MANAGER, <span class="string">&quot;compileLayouts&quot;</span>);</span><br><span class="line">    mViewCompiler.compileLayouts(pkg);</span><br><span class="line">    Trace.traceEnd(TRACE_TAG_PACKAGE_MANAGER);</span><br><span class="line">&#125;</span><br><span class="line">Trace.traceBegin(TRACE_TAG_PACKAGE_MANAGER, <span class="string">&quot;dexopt&quot;</span>);</span><br><span class="line"><span class="type">DexoptOptions</span> <span class="variable">dexoptOptions</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DexoptOptions</span>(packageName,</span><br><span class="line">    REASON_INSTALL,</span><br><span class="line">    DexoptOptions.DEXOPT_BOOT_COMPLETE</span><br><span class="line">    | DexoptOptions.DEXOPT_INSTALL_WITH_DEX_METADATA_FILE);</span><br><span class="line">    mPackageDexOptimizer.performDexOpt(pkg,<span class="literal">null</span> <span class="comment">/* instructionSets */</span>,</span><br><span class="line">    getOrCreateCompilerPackageStats(pkg),</span><br><span class="line">    mDexManager.getPackageUseInfoOrDefault(packageName),</span><br><span class="line">    dexoptOptions);</span><br><span class="line">Trace.traceEnd(TRACE_TAG_PACKAGE_MANAGER);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="冻结APK，并决定是替换安装，还是新安装，组装参数"><a href="#冻结APK，并决定是替换安装，还是新安装，组装参数" class="headerlink" title="冻结APK，并决定是替换安装，还是新安装，组装参数"></a>冻结APK，并决定是替换安装，还是新安装，组装参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] preparePackageLI()</span><br><span class="line"><span class="keyword">final</span> <span class="type">PackageFreezer</span> <span class="variable">freezer</span> <span class="operator">=</span>freezePackageForInstall(pkgName, installFlags, <span class="string">&quot;installPackageLI&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (replace) &#123;</span><br><span class="line"><span class="comment">//替换安装</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">// new package install</span></span><br><span class="line"><span class="comment">//安装新的APK</span></span><br><span class="line"><span class="comment">//1)已安装具有相同名称的包，但已将其重命名为旧名称</span></span><br><span class="line"><span class="comment">//2)不要允许在同一名称的现有包上安装。</span></span><br><span class="line">renamedPackage = mSettings.getRenamedPackageLPr(pkgName1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="扫描APK，将APK的信息存储在PackageParser-Package类型的newPackage中，一个Package的信息包含了1个base-APK以及0个或者多个split-APK"><a href="#扫描APK，将APK的信息存储在PackageParser-Package类型的newPackage中，一个Package的信息包含了1个base-APK以及0个或者多个split-APK" class="headerlink" title="扫描APK，将APK的信息存储在PackageParser.Package类型的newPackage中，一个Package的信息包含了1个base APK以及0个或者多个split APK"></a>扫描APK，将APK的信息存储在PackageParser.Package类型的newPackage中，一个Package的信息包含了1个base APK以及0个或者多个split APK</h4><p>&emsp;&emsp;调用顺序： scanPackageTracedLI() &#x3D;&gt; scanPackageLI() &#x3D;&gt; parsePackage()</p><h4 id="更新共享库"><a href="#更新共享库" class="headerlink" title="更新共享库"></a>更新共享库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] commitPackageSettings()</span><br><span class="line"><span class="keyword">synchronized</span> (mPackages) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ArrayUtils.isEmpty(reconciledPkg.allowedSharedLibraryInfos)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (SharedLibraryInfo info : reconciledPkg.allowedSharedLibraryInfos) &#123;</span><br><span class="line">            commitSharedLibraryInfoLocked(info);</span><br><span class="line">            <span class="keyword">final</span> Map&lt;String, PackageParser.Package&gt; combinedPackages =reconciledPkg.getCombinedPackages();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// Shared libraries for the package need to be updated.</span></span><br><span class="line">                updateSharedLibrariesLocked(pkg, <span class="literal">null</span>, combinedPackages);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (PackageManagerException e) &#123;</span><br><span class="line">                Slog.e(TAG, <span class="string">&quot;updateSharedLibrariesLPr failed: &quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Update all applications that use this library. Skip when booting</span></span><br><span class="line">            <span class="comment">// since this will be done after all packages are scaned.</span></span><br><span class="line">            <span class="keyword">if</span> ((scanFlags &amp; SCAN_BOOTING) == <span class="number">0</span>) &#123;</span><br><span class="line">                 clientLibPkgs = updateAllSharedLibrariesLocked(pkg, combinedPackages);</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="更新该APK对应的Settings信息，Settings用于保存所有包的动态设置"><a href="#更新该APK对应的Settings信息，Settings用于保存所有包的动态设置" class="headerlink" title="更新该APK对应的Settings信息，Settings用于保存所有包的动态设置"></a>更新该APK对应的Settings信息，Settings用于保存所有包的动态设置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] commitPackageSettings()</span><br><span class="line"><span class="keyword">synchronized</span> (mPackages) &#123;</span><br><span class="line">    <span class="comment">// Add the new setting to mSettings</span></span><br><span class="line">    mSettings.insertPackageSettingLPw(pkgSetting, pkg);</span><br><span class="line">    <span class="comment">// Add the new setting to mPackages</span></span><br><span class="line">    mPackages.put(pkg.applicationInfo.packageName, pkg);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安装APK-并为新的代码路径准备应用程序配置文件-并再次检查是否需要dex优化"><a href="#安装APK-并为新的代码路径准备应用程序配置文件-并再次检查是否需要dex优化" class="headerlink" title="安装APK,并为新的代码路径准备应用程序配置文件,并再次检查是否需要dex优化"></a>安装APK,并为新的代码路径准备应用程序配置文件,并再次检查是否需要dex优化</h4><p>&emsp;&emsp;如果是直接安装新包，会为新的代码路径准备应用程序配置文件。 如果是替换安装：其主要过程为更新设置，清除原有的某些APP数据，重新生成相关的app数据目录等步骤，同时要区分系统应用替换和非系统应用替换。而安装新包：则直接更新设置，生成APP数据即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[PackageManagerService.java] executePostCommitSteps()</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">executePostCommitSteps</span><span class="params">(CommitRequest commitRequest)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (ReconciledPackage reconciledPkg : commitRequest.reconciledPackages.values()) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//1)进行安装</span></span><br><span class="line">        prepareAppDataAfterInstallLIF(pkg);</span><br><span class="line">        <span class="comment">//2)如果需要替换安装，则需要清楚原有的APP数据</span></span><br><span class="line">        <span class="keyword">if</span> (reconciledPkg.prepareResult.clearCodeCache) &#123;</span><br><span class="line">            clearAppDataLIF(pkg, UserHandle.USER_ALL, FLAG_STORAGE_DE | FLAG_STORAGE_CE</span><br><span class="line">            | FLAG_STORAGE_EXTERNAL | Installer.FLAG_CLEAR_CODE_CACHE_ONLY);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3)为新的代码路径准备应用程序配置文件。这需要在调用dexopt之前完成，以便任何安装时配置文件都可以用于优化。</span></span><br><span class="line">        mArtManagerService.prepareAppProfiles(pkg,resolveUserIds(reconciledPkg.installArgs.user.getIdentifier()),</span><br><span class="line">        <span class="comment">/* updateReferenceProfileContent= */</span> <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">performDexopt</span> <span class="operator">=</span>(!instantApp || Global.getInt(mContext.getContentResolver(),</span><br><span class="line">        Global.INSTANT_APP_DEXOPT_ENABLED, <span class="number">0</span>) != <span class="number">0</span>)&amp;&amp; ((pkg.applicationInfo.flags &amp; ApplicationInfo.FLAG_DEBUGGABLE) == <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (performDexopt) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//4)执行dex优化</span></span><br><span class="line">        mPackageDexOptimizer.performDexOpt(pkg,<span class="literal">null</span> <span class="comment">/* instructionSets */</span>,getOrCreateCompilerPackageStats(pkg),</span><br><span class="line">            mDexManager.getPackageUseInfoOrDefault(packageName),</span><br><span class="line">            dexoptOptions);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="APK的安装"><a href="#APK的安装" class="headerlink" title="APK的安装"></a>APK的安装</h4><p>&emsp;&emsp;调用顺序如下： prepareAppDataAfterInstallLIF() &#x3D;&gt; prepareAppDataLIF() &#x3D;&gt; prepareAppDataLeafLIF() &#x3D;&gt; Installer.java#createAppData()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">prepareAppDataAfterInstallLIF</span><span class="params">(PackageParser.Package pkg)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">for</span> (UserInfo user : um.getUsers()) &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (ps.getInstalled(user.id)) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> when user data is locked, mark that we&#x27;re still dirty</span></span><br><span class="line">            prepareAppDataLIF(pkg, user.id, flags);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">prepareAppDataLIF</span><span class="params">(PackageParser.Package pkg, <span class="type">int</span> userId, <span class="type">int</span> flags)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (pkg == <span class="literal">null</span>) &#123;</span><br><span class="line">        Slog.wtf(TAG, <span class="string">&quot;Package was null!&quot;</span>, <span class="keyword">new</span> <span class="title class_">Throwable</span>());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    prepareAppDataLeafLIF(pkg, userId, flags);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">childCount</span> <span class="operator">=</span> (pkg.childPackages != <span class="literal">null</span>) ? pkg.childPackages.size() : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">        prepareAppDataLeafLIF(pkg.childPackages.get(i), userId, flags);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">prepareAppDataLeafLIF</span><span class="params">(AndroidPackage pkg, <span class="type">int</span> userId, <span class="type">int</span> flags)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (DEBUG_APP_DATA) &#123;</span><br><span class="line">        Slog.v(TAG, <span class="string">&quot;prepareAppData for &quot;</span> + pkg.getPackageName() + <span class="string">&quot; u&quot;</span> + userId + <span class="string">&quot; 0x&quot;</span></span><br><span class="line">        + Integer.toHexString(flags));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> PackageSetting ps;</span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">            ps = mSettings.mPackages.get(pkg.getPackageName());</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">volumeUuid</span> <span class="operator">=</span> pkg.getVolumeUuid();</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> pkg.getPackageName();</span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">appId</span> <span class="operator">=</span> UserHandle.getAppId(pkg.getUid());</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">pkgSeInfo</span> <span class="operator">=</span> AndroidPackageUtils.getSeInfo(pkg, ps);</span><br><span class="line"></span><br><span class="line">    Preconditions.checkNotNull(pkgSeInfo);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">seInfo</span> <span class="operator">=</span> pkgSeInfo + (pkg.getSeInfoUser() != <span class="literal">null</span> ? pkg.getSeInfoUser() : <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="type">long</span> <span class="variable">ceDataInode</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ceDataInode = mInstaller.createAppData(volumeUuid, packageName, userId, flags,</span><br><span class="line">        appId, seInfo, pkg.getTargetSdkVersion());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InstallerException e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pkg.isSystem()) &#123;</span><br><span class="line">            logCriticalInfo(Log.ERROR, <span class="string">&quot;Failed to create app data for &quot;</span> + packageName</span><br><span class="line">            + <span class="string">&quot;, but trying to recover: &quot;</span> + e);</span><br><span class="line">            destroyAppDataLeafLIF(pkg, userId, flags);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ceDataInode = mInstaller.createAppData(volumeUuid, packageName, userId, flags,</span><br><span class="line">                appId, seInfo, pkg.getTargetSdkVersion());</span><br><span class="line">                logCriticalInfo(Log.DEBUG, <span class="string">&quot;Recovery succeeded!&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InstallerException e2) &#123;</span><br><span class="line">                logCriticalInfo(Log.DEBUG, <span class="string">&quot;Recovery failed!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Slog.e(TAG, <span class="string">&quot;Failed to create app data for &quot;</span> + packageName + <span class="string">&quot;: &quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mIsUpgrade || mFirstBoot || (userId != UserHandle.USER_SYSTEM)) &#123;</span><br><span class="line">         mArtManagerService.prepareAppProfiles(pkg, userId,</span><br><span class="line">    <span class="comment">/* updateReferenceProfileContent= */</span> <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((flags &amp; StorageManager.FLAG_STORAGE_CE) != <span class="number">0</span> &amp;&amp; ceDataInode != -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="literal">null</span>) &#123;</span><br><span class="line">                    ps.setCeDataInode(ceDataInode, userId);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     prepareAppDataContentsLeafLIF(pkg, ps, userId, flags);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安装完成后，更新设置，更新安装锁等"><a href="#安装完成后，更新设置，更新安装锁等" class="headerlink" title="安装完成后，更新设置，更新安装锁等"></a>安装完成后，更新设置，更新安装锁等</h4><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp;PMS是一个及其复杂的服务，其系统源码涵盖广泛。阅读源码可以更好的帮助你理解这个服务，比如说实现静默安装，从上面的源码中得知，可以使用pm install调用command指令去安装，但是限制和条件是有很多的，需要系统签名，系统组等等。更好的实现方式是仿照pm 的安装流程，构建session。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android_14_源码分析之ActivityManagerService</title>
      <link href="/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BActivityManagerService/"/>
      <url>/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BActivityManagerService/</url>
      
        <content type="html"><![CDATA[<ul><li>前序<ul><li>一个人知道自己为什么而活，便能忍受任何一种生活</li></ul></li></ul><meta name="referrer" content="no-referrer"/><h1 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h1><ul><li><a href="https://juejin.cn/post/7042721801612296206">厚雪长坡-ActivityTaskManagerService解析</a></li><li><a href="https://blog.csdn.net/LeeDuoZuiShuai/article/details/104574496">LeeDuo-深入理解ActivityManagerService</a></li><li><a href="https://blog.csdn.net/weixin_47465999/article/details/134018001">芒果蒲公英-Android14 AMS启动流程</a></li><li><a href="https://www.jianshu.com/p/c97688eb5056">anly_jun-探索Activity之启动Intent Flag和taksAffinity</a></li><li><a href="https://blog.csdn.net/menghaocheng/article/details/103988993">menghaocheng-Android-AMS】ActivityManagerService启动分析</a></li><li><a href="https://www.sukaidev.top/2021/06/16/86">Sukai’s Blog</a></li></ul><p>&emsp;&emsp;<font color=red>本文中的所有内容大部分来源于网络资料，如有侵权请联系本人修改或删除，请大家多多支持原创!非常感谢！</font></p><h1 id="ActivityManagerService"><a href="#ActivityManagerService" class="headerlink" title="ActivityManagerService"></a>ActivityManagerService</h1><p>&emsp;&emsp;Android系统非常庞大、错综复杂，其底层是采用Linux作为基底，上层采用包含虚拟机的Java层以及Native层，通过系统调用(Syscall)连接系统的内核空间与用户空间。用户空间主要采用C++和Java代码，通过JNI技术打通用户空间的Java层和Native层(C&#x2F;C++)。Google官方提供了一张经典的四层架构图，从下往上依次分为Linux内核、系统库和Android运行时环境、框架层以及应用层这4层架构，其中每一层都包含了大量的子模块或子系统。</p><p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.9a974ebc6b16e316ef275bbc71999a88?rik=8aCJ2ngBANSnJg&riu=http%3a%2f%2fwww.uml.org.cn%2fmobiledev%2fimages%2f2012052561.jpg&ehk=GCyVd%2fJ7v8l4jyz0iEjOfV88tA4VC9q7AQqxyRdcsbU%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1"></img></p><h2 id="Android-架构"><a href="#Android-架构" class="headerlink" title="Android 架构"></a>Android 架构</h2><p><img src="https://img-blog.csdnimg.cn/20200405233933640.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZyZWVraW5nMTAx,size_16,color_FFFFFF,t_70" alt="平台架构.png"></p><p>&emsp;&emsp;Android系统启动过程由上图从下网上的一个过程:Loader -&gt; Kernel -&gt; Native -&gt; Framework -&gt; App，接来写简要说说每个过程:</p><ul><li>Loader层<ul><li>Boot ROM:当手机处于关机状态时，长按Power键开机，引导芯片开始从固化在ROM里的预设出代码开始执行，然后加载引导程序到RAM;</li><li>Boot Loader:这是启动Android系统之前的引导程序，主要是检查RAM，初始化硬件参数等功能。</li></ul></li><li>Kernel层<ul><li>Kernel层是指Android内核层，到这里才刚刚开始进入Android系统。启动Kernel的swapper进程(pid&#x3D;0):该进程又称为idle进程，系统初始化过程Kernel由无到有开创的第一个进程，用于初始化进程管理、内存管理，加载Display,Camera Driver, Binder Driver等相关工作；启动kthreadd进程(pid&#x3D;2):是Linux系统的内核进程，会创建内核工作线程kworder,软中断线程ksoftirqd,thermal等内核守护进程。kthreadd进程是所有内核进程的鼻祖。</li></ul></li><li>Native层 <ul><li>这里的Native层主要包括init孵化来的用户空间的守护进程、HAL层以及开机动画等。启动init进程(pid&#x3D;1)，是Linux系统的用户进程，init进程是所有用户进程的鼻祖。</li><li>init进程会孵化出ueventd、logd、healthd、installd、add、lmkd等用户守护进程；init进程还启动servicemanager(binder服务管家)、bootanim(开机动画)等重要服务。init进程孵化出Zygote进程，Zygote进程是Android系统的第一个Java进程(即虚拟机进程)，Zygote是所有Java进程的父进程，Zygote进程本身是由init进程孵化而来的。</li></ul></li><li>Framework层<ul><li>Zygote进程，是由init进程通过解析init.rc文件后fork生成的，Zygote进程主要包含:加载<ul><li>ZygoteInit类，注册Zygote Socket服务端套接字</li><li>加载虚拟机preloadClasses</li><li>preloadResource</li></ul></li><li>System Server进程，是由Zygote进程fork而来，System Server是Zygote孵化的第一个进程，System Server负责启动和管理整个Java Framework，包括ActivityManager，PowerManager等服务。</li><li>Media Server进程，是由init进程fork而来，负责启动和管理整个C++ framework,包含AudioFlinger，Camera Service等服务</li></ul></li><li>App层<ul><li>Zygote进程孵化出的第一个App进程是Launcher，这是用户看到的桌面App</li><li>Zygote进程还会创建Browser, Phone，Email等App进程，每个App至少运行在一个进程上。所有的App进程都是由Zygote进程fork生成的。</li></ul></li><li>Syscall &amp;&amp; JNI<ul><li>Native 与 Kernel 之间有一层系统调用(SysCall)层，见Linux系统调用(Syscall)原理</li><li>Java层与Native(C&#x2F;C++)层之间的纽带JNI</li></ul></li></ul><h2 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h2><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;SystemServer.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Line 1053</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Starts the small tangle of critical services that are needed to get the system off the</span></span><br><span class="line"><span class="comment"> * ground.  These services have complex mutual dependencies which is why we initialize them all</span></span><br><span class="line"><span class="comment"> * in one place here.  Unless your service is also entwined in these dependencies, it should be</span></span><br><span class="line"><span class="comment"> * initialized in one of the other functions.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startBootstrapServices</span><span class="params">(<span class="meta">@NonNull</span> TimingsTraceAndSlog t)</span> &#123;</span><br><span class="line">    <span class="comment">// more ... </span></span><br><span class="line">    <span class="comment">// Activity manager runs the show.</span></span><br><span class="line">    t.traceBegin(<span class="string">&quot;StartActivityManager&quot;</span>);</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Might need to move after migration to WM.</span></span><br><span class="line">    <span class="type">ActivityTaskManagerService</span> <span class="variable">atm</span> <span class="operator">=</span> mSystemServiceManager.startService(</span><br><span class="line">            ActivityTaskManagerService.Lifecycle.class).getService();</span><br><span class="line">    mActivityManagerService = ActivityManagerService.Lifecycle.startService(</span><br><span class="line">            mSystemServiceManager, atm);</span><br><span class="line">    mActivityManagerService.setSystemServiceManager(mSystemServiceManager);</span><br><span class="line">    mActivityManagerService.setInstaller(installer);</span><br><span class="line">    mWindowManagerGlobalLock = atm.getGlobalLock();</span><br><span class="line">    t.traceEnd();</span><br><span class="line">    <span class="comment">//more ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;ActivityManagerService由SystemServer进程中启动。startBootstrapServices启动一些基础必要的系统服务，为后续系统正常运行做准备。在Android系统的启动过程中，各个系统服务需要按照一定的顺序进行初始化和启动。像源码中，会有t.traceBegin();和      t.traceEnd();这样对于服务启动的时间跟踪，测量和记录各个阶段的时间消耗，用于性能分析，调优和优化等。ActivityTaskManagerService(ATMS)是Android 10新增加的系统服务类，承担了ActivityManagerService(AMS)的部分工作(activies、task、stacks、displays相关)，比如将Activity的启动相关的调用转移到了ATMS中。</p><ul><li>ATMS的启动过程</li></ul><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/525812c90c1045238f677b9fbe08d30a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?"/><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;SystemServiceManager.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment">// Services that should receive lifecycle events.</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SystemService&gt; mServices;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates and starts a system service. The class must be a subclass of</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> com.android.server.SystemService&#125;.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> serviceClass A Java class that implements the SystemService interface.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> The service instance, never null.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RuntimeException if the service fails to start.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">SystemService</span>&gt; T <span class="title function_">startService</span><span class="params">(Class&lt;T&gt; serviceClass)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> serviceClass.getName();</span><br><span class="line">            Slog.i(TAG, <span class="string">&quot;Starting &quot;</span> + name);</span><br><span class="line">            Trace.traceBegin(Trace.TRACE_TAG_SYSTEM_SERVER, <span class="string">&quot;StartService &quot;</span> + name);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Create the service.</span></span><br><span class="line">            <span class="keyword">if</span> (!SystemService.class.isAssignableFrom(serviceClass)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create &quot;</span> + name</span><br><span class="line">                        + <span class="string">&quot;: service must extend &quot;</span> + SystemService.class.getName());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">final</span> T service;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Constructor&lt;T&gt; constructor = serviceClass.getConstructor(Context.class);</span><br><span class="line">                service = constructor.newInstance(mContext);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InstantiationException ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create servicSystemServicee &quot;</span> + name</span><br><span class="line">                        + <span class="string">&quot;: service could not be instantiated&quot;</span>, ex);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                        + <span class="string">&quot;: service must have a public constructor with a Context argument&quot;</span>, ex);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                        + <span class="string">&quot;: service must have a public constructor with a Context argument&quot;</span>, ex);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create service &quot;</span> + name</span><br><span class="line">                        + <span class="string">&quot;: service constructor threw an exception&quot;</span>, ex);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            startService(service);</span><br><span class="line">            <span class="keyword">return</span> service;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            Trace.traceEnd(Trace.TRACE_TAG_SYSTEM_SERVER);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startService</span><span class="params">(<span class="meta">@NonNull</span> <span class="keyword">final</span> SystemService service)</span> &#123;</span><br><span class="line">        <span class="comment">// Check if already started</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> service.getClass().getName();</span><br><span class="line">        <span class="keyword">if</span> (mServiceClassnames.contains(className)) &#123;</span><br><span class="line">            Slog.i(TAG, <span class="string">&quot;Not starting an already started service &quot;</span> + className);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mServiceClassnames.add(className);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Register it.</span></span><br><span class="line">        mServices.add(service);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start it.</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> SystemClock.elapsedRealtime();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            service.onStart();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to start service &quot;</span> + service.getClass().getName()</span><br><span class="line">                    + <span class="string">&quot;: onStart threw an exception&quot;</span>, ex);</span><br><span class="line">        &#125;</span><br><span class="line">        warnIfTooLong(SystemClock.elapsedRealtime() - time, service, <span class="string">&quot;onStart&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在SystemServiceManager.startService内部通过Cpnstructor构造器创建并且初始化ActivityTaskManagerService.Lifecycle实例,Lifecycle内部会创建ATMS实例，最终调用Lifecyle的onStart方法。内部类Lifecyle继承自SystemService,在其构造函数中创建了ActivityTaskManagerService对象，并在onStart中调用SystemService的publichBinderService将ATMS注册到ServiceManager中并调用ATMS的start方法，startService方法返回Lifecyle实例并通过getService()获取到了ATMS实例，</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;wm&#x2F;ActivityTaskManagerService.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Lifecycle</span> <span class="keyword">extends</span> <span class="title class_">SystemService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ActivityTaskManagerService mService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Lifecycle</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        mService = <span class="keyword">new</span> <span class="title class_">ActivityTaskManagerService</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">()</span> &#123;</span><br><span class="line">        publishBinderService(Context.ACTIVITY_TASK_SERVICE, mService);</span><br><span class="line">        mService.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUserUnlocked</span><span class="params">(<span class="meta">@NonNull</span> TargetUser user)</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mService.getGlobalLock()) &#123;</span><br><span class="line">            mService.mTaskSupervisor.onUserUnlocked(user.getUserIdentifier());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUserStopped</span><span class="params">(<span class="meta">@NonNull</span> TargetUser user)</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mService.getGlobalLock()) &#123;</span><br><span class="line">            mService.mTaskSupervisor.mLaunchParamsPersister</span><br><span class="line">                    .onCleanupUser(user.getUserIdentifier());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ActivityTaskManagerService <span class="title function_">getService</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;同样ActivityManager也有一个Lifecycle内部类调用其startService方法传递之前的ATMS实例atm以及SystemServiceManager实例，其后续流程跟ATMS类似，最终会启动ActivityManagerService。</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;am&#x2F;ActivityManagerService.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// frameworks/base/services/java/com/android/server/SystemServer.java</span></span><br><span class="line"><span class="comment">// line 1153</span></span><br><span class="line"><span class="comment">// mActivityManagerService = ActivityManagerService.Lifecycle.startService(mSystemServiceManager, atm);</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Lifecycle</span> <span class="keyword">extends</span> <span class="title class_">SystemService</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> ActivityManagerService mService;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> ActivityTaskManagerService sAtm;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Lifecycle</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(context);</span><br><span class="line">            mService = <span class="keyword">new</span> <span class="title class_">ActivityManagerService</span>(context, sAtm);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> ActivityManagerService <span class="title function_">startService</span><span class="params">(</span></span><br><span class="line"><span class="params">                SystemServiceManager ssm, ActivityTaskManagerService atm)</span> &#123;</span><br><span class="line">            sAtm = atm;</span><br><span class="line">            <span class="keyword">return</span> ssm.startService(ActivityManagerService.Lifecycle.class).getService();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">()</span> &#123;</span><br><span class="line">            mService.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBootPhase</span><span class="params">(<span class="type">int</span> phase)</span> &#123;</span><br><span class="line">            mService.mBootPhase = phase;</span><br><span class="line">            <span class="keyword">if</span> (phase == PHASE_SYSTEM_SERVICES_READY) &#123;</span><br><span class="line">                mService.mBatteryStatsService.systemServicesReady();</span><br><span class="line">                mService.mServices.systemServicesReady();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (phase == PHASE_ACTIVITY_MANAGER_READY) &#123;</span><br><span class="line">                mService.startBroadcastObservers();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (phase == PHASE_THIRD_PARTY_APPS_CAN_START) &#123;</span><br><span class="line">                mService.mPackageWatchdog.onPackagesReady();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUserStopped</span><span class="params">(<span class="meta">@NonNull</span> TargetUser user)</span> &#123;</span><br><span class="line">            mService.mBatteryStatsService.onCleanupUser(user.getUserIdentifier());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> ActivityManagerService <span class="title function_">getService</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mService;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;ssm调用startService，同样反射调用ActivityManagerService构造方法，这里会调用ActivityTaskManagerService的initialize初始化安徽念书方法，传入Diplay线程的Looper。</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;am&#x2F;ActivityManagerService.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Note: This method is invoked on the main thread but may need to attach various</span></span><br><span class="line">    <span class="comment">// handlers to other threads.  So take care to be explicit about the looper.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ActivityManagerService</span><span class="params">(Context systemContext, ActivityTaskManagerService atm)</span> &#123;</span><br><span class="line">        LockGuard.installLock(<span class="built_in">this</span>, LockGuard.INDEX_ACTIVITY);</span><br><span class="line">        mInjector = <span class="keyword">new</span> <span class="title class_">Injector</span>(systemContext);</span><br><span class="line">        <span class="comment">//系统上下文</span></span><br><span class="line">        mContext = systemContext;   </span><br><span class="line">        mFactoryTest = FactoryTest.getMode();</span><br><span class="line">        <span class="comment">// 标记当前进程的ActivityThread,当前进程也为AMS需要管理的一部分</span></span><br><span class="line">        mSystemThread = ActivityThread.currentActivityThread();</span><br><span class="line">        mUiContext = mSystemThread.getSystemUiContext();</span><br><span class="line"></span><br><span class="line">        Slog.i(TAG, <span class="string">&quot;Memory class: &quot;</span> + ActivityManager.staticGetMemoryClass());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建名为“ActivityManager”的线程，并指定优先级为前台</span></span><br><span class="line">        <span class="comment">// 这条线程是AMS主要工作线程</span></span><br><span class="line">        mHandlerThread = <span class="keyword">new</span> <span class="title class_">ServiceThread</span>(TAG,</span><br><span class="line">                THREAD_PRIORITY_FOREGROUND, <span class="literal">false</span> <span class="comment">/*allowIo*/</span>);</span><br><span class="line">        mHandlerThread.start();</span><br><span class="line">        mHandler = <span class="keyword">new</span> <span class="title class_">MainHandler</span>(mHandlerThread.getLooper());</span><br><span class="line">        mUiHandler = mInjector.getUiHandler(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建名为“ActivityManger:procStart”的线程，并指定优先级为前台</span></span><br><span class="line">        <span class="comment">// 这条线程处理进程启动相关</span></span><br><span class="line">        mProcStartHandlerThread = <span class="keyword">new</span> <span class="title class_">ServiceThread</span>(TAG + <span class="string">&quot;:procStart&quot;</span>,</span><br><span class="line">                THREAD_PRIORITY_FOREGROUND, <span class="literal">false</span> <span class="comment">/* allowIo */</span>);</span><br><span class="line">        mProcStartHandlerThread.start();</span><br><span class="line">        mProcStartHandler = <span class="keyword">new</span> <span class="title class_">ProcStartHandler</span>(<span class="built_in">this</span>, mProcStartHandlerThread.getLooper());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化一些常量</span></span><br><span class="line">        mConstants = <span class="keyword">new</span> <span class="title class_">ActivityManagerConstants</span>(mContext, <span class="built_in">this</span>, mHandler);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ActiveUids</span> <span class="variable">activeUids</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActiveUids</span>(<span class="built_in">this</span>, <span class="literal">true</span> <span class="comment">/* postChangesToAtm */</span>);</span><br><span class="line">        mPlatformCompat = (PlatformCompat) ServiceManager.getService(</span><br><span class="line">                Context.PLATFORM_COMPAT_SERVICE);</span><br><span class="line">        <span class="comment">//管理进程相关</span></span><br><span class="line">        mProcessList = mInjector.getProcessList(<span class="built_in">this</span>);</span><br><span class="line">        mProcessList.init(<span class="built_in">this</span>, activeUids, mPlatformCompat);</span><br><span class="line">        <span class="comment">//低内存检测，内部通过一个线程接收内核PSI机制epoll过来的地内存通知</span></span><br><span class="line">        mAppProfiler = <span class="keyword">new</span> <span class="title class_">AppProfiler</span>(<span class="built_in">this</span>, BackgroundThread.getHandler().getLooper(),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LowMemDetector</span>(<span class="built_in">this</span>));</span><br><span class="line">        mPhantomProcessList = <span class="keyword">new</span> <span class="title class_">PhantomProcessList</span>(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//进程优先级(oom_adj)相关的类</span></span><br><span class="line">        mOomAdjuster = <span class="keyword">new</span> <span class="title class_">OomAdjuster</span>(<span class="built_in">this</span>, mProcessList, activeUids);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//广播政策相关的参数</span></span><br><span class="line">        <span class="comment">// Broadcast policy parameters</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BroadcastConstants</span> <span class="variable">foreConstants</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BroadcastConstants</span>(</span><br><span class="line">                Settings.Global.BROADCAST_FG_CONSTANTS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//前台广播 10S</span></span><br><span class="line">        foreConstants.TIMEOUT = BROADCAST_FG_TIMEOUT;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BroadcastConstants</span> <span class="variable">backConstants</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BroadcastConstants</span>(</span><br><span class="line">                Settings.Global.BROADCAST_BG_CONSTANTS);</span><br><span class="line">        <span class="comment">//后台广播60S</span></span><br><span class="line">        backConstants.TIMEOUT = BROADCAST_BG_TIMEOUT;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BroadcastConstants</span> <span class="variable">offloadConstants</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BroadcastConstants</span>(</span><br><span class="line">                Settings.Global.BROADCAST_OFFLOAD_CONSTANTS);</span><br><span class="line">        <span class="comment">//延时广播 60S</span></span><br><span class="line">        offloadConstants.TIMEOUT = BROADCAST_BG_TIMEOUT;</span><br><span class="line">        <span class="comment">// by default, no &quot;slow&quot; policy in this queue</span></span><br><span class="line">        offloadConstants.SLOW_TIME = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">        mEnableOffloadQueue = SystemProperties.getBoolean(</span><br><span class="line">                <span class="string">&quot;persist.device_config.activity_manager_native_boot.offload_queue_enabled&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        mEnableModernQueue = foreConstants.MODERN_QUEUE_ENABLED;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mEnableModernQueue) &#123;</span><br><span class="line">            mBroadcastQueues = <span class="keyword">new</span> <span class="title class_">BroadcastQueue</span>[<span class="number">1</span>];</span><br><span class="line">            mBroadcastQueues[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">BroadcastQueueModernImpl</span>(<span class="built_in">this</span>, mHandler,</span><br><span class="line">                    foreConstants, backConstants);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//为三种广播创建对应的队列</span></span><br><span class="line">            mBroadcastQueues = <span class="keyword">new</span> <span class="title class_">BroadcastQueue</span>[<span class="number">4</span>];</span><br><span class="line">            mBroadcastQueues[BROADCAST_QUEUE_FG] = <span class="keyword">new</span> <span class="title class_">BroadcastQueueImpl</span>(<span class="built_in">this</span>, mHandler,</span><br><span class="line">                    <span class="string">&quot;foreground&quot;</span>, foreConstants, <span class="literal">false</span>, ProcessList.SCHED_GROUP_DEFAULT);</span><br><span class="line">            mBroadcastQueues[BROADCAST_QUEUE_BG] = <span class="keyword">new</span> <span class="title class_">BroadcastQueueImpl</span>(<span class="built_in">this</span>, mHandler,</span><br><span class="line">                    <span class="string">&quot;background&quot;</span>, backConstants, <span class="literal">true</span>, ProcessList.SCHED_GROUP_BACKGROUND);</span><br><span class="line">            mBroadcastQueues[BROADCAST_QUEUE_BG_OFFLOAD] = <span class="keyword">new</span> <span class="title class_">BroadcastQueueImpl</span>(<span class="built_in">this</span>, mHandler,</span><br><span class="line">                    <span class="string">&quot;offload_bg&quot;</span>, offloadConstants, <span class="literal">true</span>, ProcessList.SCHED_GROUP_BACKGROUND);</span><br><span class="line">            mBroadcastQueues[BROADCAST_QUEUE_FG_OFFLOAD] = <span class="keyword">new</span> <span class="title class_">BroadcastQueueImpl</span>(<span class="built_in">this</span>, mHandler,</span><br><span class="line">                    <span class="string">&quot;offload_fg&quot;</span>, foreConstants, <span class="literal">true</span>, ProcessList.SCHED_GROUP_BACKGROUND);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//管理Service组件</span></span><br><span class="line">        mServices = <span class="keyword">new</span> <span class="title class_">ActiveServices</span>(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//管理ContentProvider组件</span></span><br><span class="line">        mCpHelper = <span class="keyword">new</span> <span class="title class_">ContentProviderHelper</span>(<span class="built_in">this</span>, <span class="literal">true</span>);</span><br><span class="line">        mPackageWatchdog = PackageWatchdog.getInstance(mUiContext);</span><br><span class="line">        mAppErrors = <span class="keyword">new</span> <span class="title class_">AppErrors</span>(mUiContext, <span class="built_in">this</span>, mPackageWatchdog);</span><br><span class="line">        mUidObserverController = <span class="keyword">new</span> <span class="title class_">UidObserverController</span>(mUiHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建/data/system目录</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">File</span> <span class="variable">systemDir</span> <span class="operator">=</span> SystemServiceManager.ensureSystemDir();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Move creation of battery stats service outside of activity manager service.</span></span><br><span class="line">        <span class="comment">// 电池状态统计服务的初始化</span></span><br><span class="line">        mBatteryStatsService = BatteryStatsService.create(systemContext, systemDir,</span><br><span class="line">                BackgroundThread.getHandler(), <span class="built_in">this</span>);</span><br><span class="line">        mOnBattery = DEBUG_POWER ? <span class="literal">true</span></span><br><span class="line">                : mBatteryStatsService.getActiveStatistics().getIsOnBattery();</span><br><span class="line">        mOomAdjProfiler.batteryPowerChanged(mOnBattery);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//进程状态统计服务初始化</span></span><br><span class="line">        mProcessStats = <span class="keyword">new</span> <span class="title class_">ProcessStatsService</span>(<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">File</span>(systemDir, <span class="string">&quot;procstats&quot;</span>));</span><br><span class="line"></span><br><span class="line">        mAppOpsService = mInjector.getAppOpsService(<span class="keyword">new</span> <span class="title class_">File</span>(systemDir, <span class="string">&quot;appops_accesses.xml&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">File</span>(systemDir, <span class="string">&quot;appops.xml&quot;</span>), mHandler);</span><br><span class="line"></span><br><span class="line">        mUgmInternal = LocalServices.getService(UriGrantsManagerInternal.class);</span><br><span class="line"></span><br><span class="line">        mUserController = <span class="keyword">new</span> <span class="title class_">UserController</span>(<span class="built_in">this</span>);</span><br><span class="line">        mInjector.mUserController = mUserController;</span><br><span class="line"></span><br><span class="line">        mPendingIntentController = <span class="keyword">new</span> <span class="title class_">PendingIntentController</span>(</span><br><span class="line">                mHandlerThread.getLooper(), mUserController, mConstants);</span><br><span class="line"></span><br><span class="line">        mAppRestrictionController = <span class="keyword">new</span> <span class="title class_">AppRestrictionController</span>(mContext, <span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        mUseFifoUiScheduling = SystemProperties.getInt(<span class="string">&quot;sys.use_fifo_ui&quot;</span>, <span class="number">0</span>) != <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        mTrackingAssociations = <span class="string">&quot;1&quot;</span>.equals(SystemProperties.get(<span class="string">&quot;debug.track-associations&quot;</span>));</span><br><span class="line">        mIntentFirewall = <span class="keyword">new</span> <span class="title class_">IntentFirewall</span>(<span class="keyword">new</span> <span class="title class_">IntentFirewallInterface</span>(), mHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化ATMS</span></span><br><span class="line">        mActivityTaskManager = atm;</span><br><span class="line">        mActivityTaskManager.initialize(mIntentFirewall, mPendingIntentController,</span><br><span class="line">                DisplayThread.get().getLooper());</span><br><span class="line">        mAtmInternal = LocalServices.getService(ActivityTaskManagerInternal.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//HiddenApi黑名单列表</span></span><br><span class="line">        mHiddenApiBlacklist = <span class="keyword">new</span> <span class="title class_">HiddenApiSettings</span>(mHandler, mContext);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//监听AMS和其工作线程的状态，例如阻塞、死锁等</span></span><br><span class="line">        Watchdog.getInstance().addMonitor(<span class="built_in">this</span>);</span><br><span class="line">        Watchdog.getInstance().addThread(mHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bind background threads to little cores</span></span><br><span class="line">        <span class="comment">// this is expected to fail inside of framework tests because apps can&#x27;t touch cpusets directly</span></span><br><span class="line">        <span class="comment">// make sure we&#x27;ve already adjusted system_server&#x27;s internal view of itself first</span></span><br><span class="line">        <span class="comment">// 调整优先级</span></span><br><span class="line">        updateOomAdjLocked(OOM_ADJ_REASON_SYSTEM_INIT);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Process.setThreadGroupAndCpuset(BackgroundThread.get().getThreadId(),</span><br><span class="line">                    Process.THREAD_GROUP_SYSTEM);</span><br><span class="line">            Process.setThreadGroupAndCpuset(</span><br><span class="line">                    mOomAdjuster.mCachedAppOptimizer.mCachedAppOptimizerThread.getThreadId(),</span><br><span class="line">                    Process.THREAD_GROUP_SYSTEM);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">&quot;Setting background thread cpuset failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mInternal = <span class="keyword">new</span> <span class="title class_">LocalService</span>();</span><br><span class="line">        mPendingStartActivityUids = <span class="keyword">new</span> <span class="title class_">PendingStartActivityUids</span>();</span><br><span class="line">        mTraceErrorLogger = <span class="keyword">new</span> <span class="title class_">TraceErrorLogger</span>();</span><br><span class="line">        mComponentAliasResolver = <span class="keyword">new</span> <span class="title class_">ComponentAliasResolver</span>(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;可以看到AMS首先创建了两条线程，其中一条作为自己的主要工作线程，接着围绕四大组件的管理做初始化工作。对于Activity的管理工作全部转移到ATMS中，因此这里了调用了ATMS的initialize方法初始化ATMS。</p><p>&emsp;&emsp;对于Service,创建了ActiveServie类管理。并且可以在frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;am&#x2F;ActivityManagerConstants.java看到Service的超时时间。</p><p>&emsp;&emsp;对于ContentProvider，创建了ContentProviderHelper来管理，在SystemServer中对应的数据结构是ContentProciderRecord。</p><p>&emsp;&emsp;对于广播Brodcast，创建了三个广播队列来分别管理三种广播类型。除了四大组件，初始化中还涉及一些性能相关，例如：</p><ul><li><p>初始化ProcessList</p></li><li><p>创建LowMemDetextor用于检测低内存</p></li><li><p>创建OomAdjuster用于调整进程的优先级等级</p></li><li><p>创建BatteryStatsService和ProcessStatsService用于管理电量状态和进程状态</p></li><li><p>创建HiddenApiSettings用于管理一些需要对开发者隐藏的HiddenApi</p></li><li><p>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;am&#x2F;ActivityManagerService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">    mBatteryStatsService.publish();</span><br><span class="line">    mAppOpsService.publish();</span><br><span class="line">    mProcessStats.publish();</span><br><span class="line">    Slog.d(<span class="string">&quot;AppOps&quot;</span>, <span class="string">&quot;AppOpsService published&quot;</span>);</span><br><span class="line">    <span class="comment">//将LocalService添加到本地服务列表</span></span><br><span class="line">    LocalServices.addService(ActivityManagerInternal.class, mInternal);</span><br><span class="line">    <span class="comment">//添加管理</span></span><br><span class="line">    LocalManagerRegistry.addManager(ActivityManagerLocal.class,</span><br><span class="line">            (ActivityManagerLocal) mInternal);</span><br><span class="line">    <span class="comment">//通知UGM,AMS已经启动，可以获取到AMS</span></span><br><span class="line">    mActivityTaskManager.onActivityManagerInternalAdded();</span><br><span class="line">    <span class="comment">//通知PendingIntentController,AMS已经启动，可以获取到AMS</span></span><br><span class="line">    mPendingIntentController.onActivityManagerInternalAdded();</span><br><span class="line">    mAppProfiler.onActivityManagerInternalAdded();</span><br><span class="line">    CriticalEventLog.init();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;initialize()方法会初始化一些对象实例，比如ActivityTaskSupervisor、ActivityStartController等，会涉及到Activity的启动以及Activity栈的一些逻辑。ActivityTaskSupervisor负责管理ActivityStack,ActivityStartController创建将自身ATMS传入，主要负责Activity启动相关工作。例如在startActivityAsUser通过getActivityStartController().obtainStarter(…)获取到ActivityStarter并执行后续的启动工作。</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;wm&#x2F;ActivityTaskManagerService.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(IntentFirewall intentFirewall, PendingIntentController intentController,</span></span><br><span class="line"><span class="params">            Looper looper)</span> &#123;</span><br><span class="line">        mH = <span class="keyword">new</span> <span class="title class_">H</span>(looper);</span><br><span class="line">        mUiHandler = <span class="keyword">new</span> <span class="title class_">UiHandler</span>();</span><br><span class="line">        mIntentFirewall = intentFirewall;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">File</span> <span class="variable">systemDir</span> <span class="operator">=</span> SystemServiceManager.ensureSystemDir();</span><br><span class="line">        mAppWarnings = createAppWarnings(mUiContext, mH, mUiHandler, systemDir);</span><br><span class="line">        mCompatModePackages = <span class="keyword">new</span> <span class="title class_">CompatModePackages</span>(<span class="built_in">this</span>, systemDir, mH);</span><br><span class="line">        mPendingIntentController = intentController;</span><br><span class="line">        mTaskSupervisor = createTaskSupervisor();</span><br><span class="line">        mActivityClientController = <span class="keyword">new</span> <span class="title class_">ActivityClientController</span>(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        mTaskChangeNotificationController =</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">TaskChangeNotificationController</span>(mTaskSupervisor, mH);</span><br><span class="line">        mLockTaskController = <span class="keyword">new</span> <span class="title class_">LockTaskController</span>(mContext, mTaskSupervisor, mH,</span><br><span class="line">                mTaskChangeNotificationController);</span><br><span class="line">        mActivityStartController = <span class="keyword">new</span> <span class="title class_">ActivityStartController</span>(<span class="built_in">this</span>);</span><br><span class="line">        setRecentTasks(<span class="keyword">new</span> <span class="title class_">RecentTasks</span>(<span class="built_in">this</span>, mTaskSupervisor));</span><br><span class="line">        mVrController = <span class="keyword">new</span> <span class="title class_">VrController</span>(mGlobalLock);</span><br><span class="line">        mKeyguardController = mTaskSupervisor.getKeyguardController();</span><br><span class="line">        mPackageConfigPersister = <span class="keyword">new</span> <span class="title class_">PackageConfigPersister</span>(mTaskSupervisor.mPersisterQueue, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;ActiivtyManagerService在启动应用时会检查应用的进程是否存在，若不存在，AMS会请求Zygote进程创建需要的应用程序进程。</p><h2 id="与ActivityManagerService相关的数据结构类"><a href="#与ActivityManagerService相关的数据结构类" class="headerlink" title="与ActivityManagerService相关的数据结构类"></a>与ActivityManagerService相关的数据结构类</h2><h3 id="ActivityRecord"><a href="#ActivityRecord" class="headerlink" title="ActivityRecord"></a>ActivityRecord</h3><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;wm&#x2F;ActivityRecord.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ActivityRecord</span> <span class="keyword">extends</span> <span class="title class_">WindowToken</span> <span class="keyword">implements</span> <span class="title class_">WindowManagerService</span>.AppFreezeListener &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> TAG_WITH_CLASS_NAME ? <span class="string">&quot;ActivityRecord&quot;</span> : TAG_ATM;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_ADD_REMOVE</span> <span class="operator">=</span> TAG + POSTFIX_ADD_REMOVE;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_APP</span> <span class="operator">=</span> TAG + POSTFIX_APP;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_CONFIGURATION</span> <span class="operator">=</span> TAG + POSTFIX_CONFIGURATION;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_CONTAINERS</span> <span class="operator">=</span> TAG + POSTFIX_CONTAINERS;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_FOCUS</span> <span class="operator">=</span> TAG + POSTFIX_FOCUS;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_PAUSE</span> <span class="operator">=</span> TAG + POSTFIX_PAUSE;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_RESULTS</span> <span class="operator">=</span> TAG + POSTFIX_RESULTS;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_SAVED_STATE</span> <span class="operator">=</span> TAG + POSTFIX_SAVED_STATE;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_STATES</span> <span class="operator">=</span> TAG + POSTFIX_STATES;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_SWITCH</span> <span class="operator">=</span> TAG + POSTFIX_SWITCH;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_TRANSITION</span> <span class="operator">=</span> TAG + POSTFIX_TRANSITION;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_USER_LEAVING</span> <span class="operator">=</span> TAG + POSTFIX_USER_LEAVING;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_VISIBILITY</span> <span class="operator">=</span> TAG + POSTFIX_VISIBILITY;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_ID</span> <span class="operator">=</span> <span class="string">&quot;id&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_INTENT</span> <span class="operator">=</span> <span class="string">&quot;intent&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_USERID</span> <span class="operator">=</span> <span class="string">&quot;user_id&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG_PERSISTABLEBUNDLE</span> <span class="operator">=</span> <span class="string">&quot;persistable_bundle&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_LAUNCHEDFROMUID</span> <span class="operator">=</span> <span class="string">&quot;launched_from_uid&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_LAUNCHEDFROMPACKAGE</span> <span class="operator">=</span> <span class="string">&quot;launched_from_package&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_LAUNCHEDFROMFEATURE</span> <span class="operator">=</span> <span class="string">&quot;launched_from_feature&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_RESOLVEDTYPE</span> <span class="operator">=</span> <span class="string">&quot;resolved_type&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ATTR_COMPONENTSPECIFIED</span> <span class="operator">=</span> <span class="string">&quot;component_specified&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ACTIVITY_ICON_SUFFIX</span> <span class="operator">=</span> <span class="string">&quot;_activity_icon_&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// How many activities have to be scheduled to stop to force a stop pass.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_STOPPING_TO_FORCE</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STARTING_WINDOW_TYPE_NONE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STARTING_WINDOW_TYPE_SNAPSHOT</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STARTING_WINDOW_TYPE_SPLASH_SCREEN</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">INVALID_PID</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// How long we wait until giving up on the last activity to pause.  This</span></span><br><span class="line">    <span class="comment">// is short because it directly impacts the responsiveness of starting the</span></span><br><span class="line">    <span class="comment">// next activity.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">PAUSE_TIMEOUT</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Ticks during which we check progress while waiting for an app to launch.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LAUNCH_TICK</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// How long we wait for the activity to tell us it has stopped before</span></span><br><span class="line">    <span class="comment">// giving up.  This is a good amount of time because we really need this</span></span><br><span class="line">    <span class="comment">// from the application in order to get its saved state. Once the stop</span></span><br><span class="line">    <span class="comment">// is complete we may start destroying client resources triggering</span></span><br><span class="line">    <span class="comment">// crashes if the UI thread was hung. We put this timeout one second behind</span></span><br><span class="line">    <span class="comment">// the ANR timeout so these situations will generate ANR instead of</span></span><br><span class="line">    <span class="comment">// Surface lost or other errors.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STOP_TIMEOUT</span> <span class="operator">=</span> <span class="number">11</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// How long we wait until giving up on an activity telling us it has</span></span><br><span class="line">    <span class="comment">// finished destroying itself.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DESTROY_TIMEOUT</span> <span class="operator">=</span> <span class="number">10</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Rounding tolerance to be used in aspect ratio computations</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">ASPECT_RATIO_ROUNDING_TOLERANCE</span> <span class="operator">=</span> <span class="number">0.005f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> ActivityTaskManagerService mAtmService;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">final</span> ActivityInfo info; <span class="comment">// activity info provided by developer in AndroidManifest</span></span><br><span class="line">    <span class="comment">// Which user is this running for?</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> mUserId;</span><br><span class="line">    <span class="comment">// The package implementing intent&#x27;s component</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> rename to mPackageName</span></span><br><span class="line">    <span class="keyword">final</span> String packageName;</span><br><span class="line">    <span class="comment">// the intent component, or target of an alias.</span></span><br><span class="line">    <span class="keyword">final</span> ComponentName mActivityComponent;</span><br><span class="line">    <span class="comment">// Input application handle used by the input dispatcher.</span></span><br><span class="line">    <span class="keyword">private</span> InputApplicationHandle mInputApplicationHandle;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> launchedFromPid; <span class="comment">// always the pid who started the activity.</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> launchedFromUid; <span class="comment">// always the uid who started the activity.</span></span><br><span class="line">    <span class="keyword">final</span> String launchedFromPackage; <span class="comment">// always the package who started the activity.</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">final</span> String launchedFromFeatureId; <span class="comment">// always the feature in launchedFromPackage</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> mLaunchSourceType; <span class="comment">// original launch source type</span></span><br><span class="line">    <span class="keyword">final</span> Intent intent;    <span class="comment">// the original intent that generated us</span></span><br><span class="line">    <span class="keyword">final</span> String shortComponentName; <span class="comment">// the short component name of the intent</span></span><br><span class="line">    <span class="keyword">final</span> String resolvedType; <span class="comment">// as per original caller;</span></span><br><span class="line">    <span class="keyword">final</span> String processName; <span class="comment">// process where this component wants to run</span></span><br><span class="line">    <span class="keyword">final</span> String taskAffinity; <span class="comment">// as per ActivityInfo.taskAffinity</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">boolean</span> stateNotNeeded; <span class="comment">// As per ActivityInfo.flags</span></span><br><span class="line">    <span class="meta">@VisibleForTesting</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">mHandoverLaunchDisplayId</span> <span class="operator">=</span> INVALID_DISPLAY; <span class="comment">// Handover launch display id to next activity.</span></span><br><span class="line">    <span class="meta">@VisibleForTesting</span></span><br><span class="line">    TaskDisplayArea mHandoverTaskDisplayArea; <span class="comment">// Handover launch task display area.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> componentSpecified;  <span class="comment">// did caller specify an explicit component?</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">boolean</span> rootVoiceInteraction;  <span class="comment">// was this the root activity of a voice interaction?</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CharSequence nonLocalizedLabel;  <span class="comment">// the label information from the package mgr.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> labelRes;           <span class="comment">// the label information from the package mgr.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> icon;               <span class="comment">// resource identifier of activity&#x27;s icon.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> theme;              <span class="comment">// resource identifier of activity&#x27;s theme.</span></span><br><span class="line">    <span class="keyword">private</span> Task task;              <span class="comment">// the task this is in.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">createTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    <span class="type">long</span> lastVisibleTime;         <span class="comment">// last time this activity became visible</span></span><br><span class="line">    <span class="type">long</span> pauseTime;               <span class="comment">// last time we started pausing the activity</span></span><br><span class="line">    <span class="type">long</span> launchTickTime;          <span class="comment">// base time for launch tick messages</span></span><br><span class="line">    <span class="type">long</span> topResumedStateLossTime; <span class="comment">// last time we reported top resumed state loss to an activity</span></span><br><span class="line">    <span class="comment">// Last configuration reported to the activity in the client process.</span></span><br><span class="line">    <span class="keyword">private</span> MergedConfiguration mLastReportedConfiguration;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mLastReportedDisplayId;</span><br><span class="line">    <span class="type">boolean</span> mLastReportedMultiWindowMode;</span><br><span class="line">    <span class="type">boolean</span> mLastReportedPictureInPictureMode;</span><br><span class="line">    ActivityRecord resultTo; <span class="comment">// who started this entry, so will get our reply</span></span><br><span class="line">    <span class="keyword">final</span> String resultWho; <span class="comment">// additional identifier for use by resultTo.</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> requestCode;  <span class="comment">// code given by requester (resultTo)</span></span><br><span class="line">    ArrayList&lt;ResultInfo&gt; results; <span class="comment">// pending ActivityResult objs we have received</span></span><br><span class="line">    HashSet&lt;WeakReference&lt;PendingIntentRecord&gt;&gt; pendingResults; <span class="comment">// all pending intents for this act</span></span><br><span class="line">    ArrayList&lt;ReferrerIntent&gt; newIntents; <span class="comment">// any pending new intents for single-top mode</span></span><br><span class="line">    Intent mLastNewIntent;  <span class="comment">// the last new intent we delivered to client</span></span><br><span class="line">    <span class="comment">/** The most recently given options. */</span></span><br><span class="line">    <span class="keyword">private</span> ActivityOptions mPendingOptions;</span><br><span class="line">    <span class="comment">/** Non-null if &#123;<span class="doctag">@link</span> #mPendingOptions&#125; specifies the remote animation. */</span></span><br><span class="line">    RemoteAnimationAdapter mPendingRemoteAnimation;</span><br><span class="line">    <span class="keyword">private</span> RemoteTransition mPendingRemoteTransition;</span><br><span class="line">    ActivityOptions returningOptions; <span class="comment">// options that are coming back via convertToTranslucent</span></span><br><span class="line">    AppTimeTracker appTimeTracker; <span class="comment">// set if we are tracking the time in this app/task/activity</span></span><br><span class="line">    <span class="meta">@GuardedBy(&quot;this&quot;)</span></span><br><span class="line">    ActivityServiceConnectionsHolder mServiceConnectionsHolder; <span class="comment">// Service connections.</span></span><br><span class="line">    <span class="comment">/** <span class="doctag">@see</span> android.content.Context#BIND_ADJUST_WITH_ACTIVITY */</span></span><br><span class="line">    <span class="keyword">volatile</span> <span class="type">boolean</span> mVisibleForServiceConnection;</span><br><span class="line">    UriPermissionOwner uriPermissions; <span class="comment">// current special URI access perms.</span></span><br><span class="line">    WindowProcessController app;      <span class="comment">// if non-null, hosting application</span></span><br><span class="line">    <span class="keyword">private</span> State mState;    <span class="comment">// current state we are in</span></span><br><span class="line">    <span class="keyword">private</span> Bundle mIcicle;         <span class="comment">// last saved activity state</span></span><br><span class="line">    <span class="keyword">private</span> PersistableBundle mPersistentState; <span class="comment">// last persistently saved activity state</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">mHaveState</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">// Indicates whether the last saved state of activity is</span></span><br><span class="line">                                       <span class="comment">// preserved. This starts out &#x27;true&#x27;, since the initial state</span></span><br><span class="line">                                       <span class="comment">// of an activity is that we have everything, and we should</span></span><br><span class="line">                                       <span class="comment">// never consider it lacking in state to be removed if it</span></span><br><span class="line">                                       <span class="comment">// dies. After an activity is launched it follows the value</span></span><br><span class="line">                                       <span class="comment">// of #mIcicle.</span></span><br><span class="line">    <span class="type">boolean</span> launchFailed;   <span class="comment">// set if a launched failed, to abort on 2nd try</span></span><br><span class="line">    <span class="type">boolean</span> delayedResume;  <span class="comment">// not yet resumed because of stopped app switches?</span></span><br><span class="line">    <span class="type">boolean</span> finishing;      <span class="comment">// activity in pending finish list?</span></span><br><span class="line">    <span class="type">boolean</span> deferRelaunchUntilPaused;   <span class="comment">// relaunch of activity is being deferred until pause is</span></span><br><span class="line">                                        <span class="comment">// completed</span></span><br><span class="line">    <span class="type">boolean</span> preserveWindowOnDeferredRelaunch; <span class="comment">// activity windows are preserved on deferred relaunch</span></span><br><span class="line">    <span class="type">int</span> configChangeFlags;  <span class="comment">// which config values have changed</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> keysPaused;     <span class="comment">// has key dispatching been paused for it?</span></span><br><span class="line">    <span class="type">int</span> launchMode;         <span class="comment">// the launch mode activity attribute.</span></span><br><span class="line">    <span class="type">int</span> lockTaskLaunchMode; <span class="comment">// the lockTaskMode manifest attribute, subject to override</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mVisible;        <span class="comment">// Should this token&#x27;s windows be visible?</span></span><br><span class="line">    <span class="type">boolean</span> visibleIgnoringKeyguard; <span class="comment">// is this activity visible, ignoring the fact that Keyguard</span></span><br><span class="line">                                     <span class="comment">// might hide this activity?</span></span><br><span class="line">    <span class="comment">// True if the visible state of this token was forced to true due to a transferred starting</span></span><br><span class="line">    <span class="comment">// window.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mVisibleSetFromTransferredStartingWindow;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> figure out how to consolidate with the same variable in ActivityRecord.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mDeferHidingClient; <span class="comment">// If true we told WM to defer reporting to the client</span></span><br><span class="line">                                        <span class="comment">// process that it is hidden.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> mLastDeferHidingClient; <span class="comment">// If true we will defer setting mClientVisible to false</span></span><br><span class="line">                                           <span class="comment">// and reporting to the client that it is hidden.</span></span><br><span class="line">    <span class="type">boolean</span> nowVisible;     <span class="comment">// is this activity&#x27;s window visible?</span></span><br><span class="line">    <span class="type">boolean</span> mClientVisibilityDeferred;<span class="comment">// was the visibility change message to client deferred?</span></span><br><span class="line">    <span class="type">boolean</span> idle;           <span class="comment">// has the activity gone idle?</span></span><br><span class="line">    <span class="type">boolean</span> hasBeenLaunched;<span class="comment">// has this activity ever been launched?</span></span><br><span class="line">    <span class="type">boolean</span> frozenBeforeDestroy;<span class="comment">// has been frozen but not yet destroyed.</span></span><br><span class="line">    <span class="type">boolean</span> immersive;      <span class="comment">// immersive mode (don&#x27;t interrupt if possible)</span></span><br><span class="line">    <span class="type">boolean</span> forceNewConfig; <span class="comment">// force re-create with new config next time</span></span><br><span class="line">    <span class="type">boolean</span> supportsEnterPipOnTaskSwitch;  <span class="comment">// This flag is set by the system to indicate that the</span></span><br><span class="line">        <span class="comment">// activity can enter picture in picture while pausing (only when switching to another task)</span></span><br><span class="line">    <span class="type">PictureInPictureParams</span> <span class="variable">pictureInPictureArgs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PictureInPictureParams</span>.Builder().build();</span><br><span class="line">        <span class="comment">// The PiP params used when deferring the entering of picture-in-picture.</span></span><br><span class="line">    <span class="type">boolean</span> shouldDockBigOverlays;</span><br><span class="line">    <span class="type">int</span> launchCount;        <span class="comment">// count of launches since last state</span></span><br><span class="line">    <span class="type">long</span> lastLaunchTime;    <span class="comment">// time of last launch of this activity</span></span><br><span class="line">    ComponentName requestedVrComponent; <span class="comment">// the requested component for handling VR mode.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Whether this activity is reachable from hierarchy. */</span></span><br><span class="line">    <span class="keyword">volatile</span> <span class="type">boolean</span> inHistory;</span><br><span class="line">    <span class="keyword">final</span> ActivityTaskSupervisor mTaskSupervisor;</span><br><span class="line">    <span class="keyword">final</span> RootWindowContainer mRootWindowContainer;</span><br><span class="line">    <span class="comment">// The token of the TaskFragment that this activity was requested to be launched into.</span></span><br><span class="line">    IBinder mRequestedLaunchingTaskFragmentToken;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Tracking splash screen status from previous activity</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">mSplashScreenStyleSolidColor</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    Drawable mEnterpriseThumbnailDrawable;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">mPauseSchedulePendingForPip</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Gets set to indicate that the activity is currently being auto-pipped.</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">mAutoEnteringPip</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateEnterpriseThumbnailDrawable</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">DevicePolicyManager</span> <span class="variable">dpm</span> <span class="operator">=</span> context.getSystemService(DevicePolicyManager.class);</span><br><span class="line">        mEnterpriseThumbnailDrawable = dpm.getResources().getDrawable(</span><br><span class="line">                WORK_PROFILE_ICON, OUTLINE, PROFILE_SWITCH_ANIMATION,</span><br><span class="line">                () -&gt; context.getDrawable(R.drawable.ic_corp_badge));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LAUNCH_SOURCE_TYPE_SYSTEM</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LAUNCH_SOURCE_TYPE_HOME</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LAUNCH_SOURCE_TYPE_SYSTEMUI</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LAUNCH_SOURCE_TYPE_APPLICATION</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> <span class="title class_">State</span> &#123;</span><br><span class="line">        INITIALIZING,</span><br><span class="line">        STARTED,</span><br><span class="line">        RESUMED,</span><br><span class="line">        PAUSING,</span><br><span class="line">        PAUSED,</span><br><span class="line">        STOPPING,</span><br><span class="line">        STOPPED,</span><br><span class="line">        FINISHING,</span><br><span class="line">        DESTROYING,</span><br><span class="line">        DESTROYED,</span><br><span class="line">        RESTARTING_PROCESS</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//more ....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><tbody><tr><td align="center">mAtmService</td><td align="center">ActivityTaskManagerService</td><td align="center">ATMS的引用</td></tr><tr><td align="center">appToken</td><td align="center">Token（IBinder）</td><td align="center">IBinder对象，用于WMS关联Window与Activity</td></tr><tr><td align="center">launchedFromPackage</td><td align="center">String</td><td align="center">启动Activity的包名</td></tr><tr><td align="center">taskAffinity</td><td align="center">String</td><td align="center">Activity希望归属的栈</td></tr><tr><td align="center">intent</td><td align="center">Intent</td><td align="center">当前启动Activity的Intent对象</td></tr><tr><td align="center">aInfo</td><td align="center">ActivityInfo</td><td align="center">由AndroidManifest解析出来的Activity信息，包括launchMode、icon、theme、taskAffinity等</td></tr><tr><td align="center">task</td><td align="center">TaskRecord</td><td align="center">当前所属TaskRecord对象</td></tr><tr><td align="center">appInfo</td><td align="center">ApplicationInfo</td><td align="center">当前所属Application信息</td></tr><tr><td align="center">state</td><td align="center">ActivityState</td><td align="center">当前 Activity 的状态</td></tr><tr><td align="center">supervisor</td><td align="center">ActivityStackSupervisor</td><td align="center">Android中管理Display与ActivityStack的类</td></tr><tr><td align="center">icon</td><td align="center">int</td><td align="center">Activity的图标资源标识符，随ActivityInfo传入</td></tr><tr><td align="center">theme</td><td align="center">int</td><td align="center">Activity的主题资源标识符，随ActivityInfo传入</td></tr></tbody><thead><tr><th align="center">名    称</th><th align="center">类    型</th><th align="center">说    明</th></tr></thead></table><p>&emsp;&emsp;可以看到，TaskRecord内部存储了任务栈的所有信息，包括任务栈的唯一标识符、任务栈的倾向性、任务栈中的ActivityRecord、ActivityStack和ATMS应用等。从mActivities集合中了解TaskRecord与ActivityRecord是包含与被包含的关系，这里TaskRecord又持有一个ActivityStack的引用，通常在开发App中必然会用到启动模式和Flag,其中singleInstance启动模式或者FLAG_ACTIVITY_NEW_TASK都可以在启动Activity时创建一个新的任务栈。而一个任务栈就对应一个TaskRecord对象，那么存在一个问题就是如何管理这么多TaskRecoed?ActivityStack就是TaskRecord的管理者。</p><h3 id="Launch-Mode"><a href="#Launch-Mode" class="headerlink" title="Launch Mode"></a>Launch Mode</h3><ul><li>standerd：默认模式，每次启动Activity都会创建一个新的Activity实例</li><li>singleTop：如果要启动的Activity已经在栈顶，则不会重新创建Activity,同时该Activity的onNewIntent方法会被调用(如果需要传递新的intent必须使用setIntent进行更新)</li><li>singleTask：如果要启动的Activity已经存在于它想要归属的栈中，那么不会创建该Activity实例，将栈中位于该Activity上的所有的Activity出栈，同时该Activity的onNewIntent方法会被调用。如果要启动的Activity不存在于它想要归属的栈中，并且该栈存在，则会重新创建该Activity的实例。如果要启动的Activity想要归属的栈不存在，则首先要创建一个新栈，然后创建该Activity实例并压入到新栈中。</li><li>singleInstancee：和singleTask基本类似，不同的是启动Activity时，首先要创建一个新栈，然后创建该Activity实例并压入到新栈中，此栈只会存在这一个Activity实例</li></ul><h3 id="Intent的FLAG"><a href="#Intent的FLAG" class="headerlink" title="Intent的FLAG"></a>Intent的FLAG</h3><p>&emsp;&emsp;<font color=red>如果FLAG和App的LaunchMode冲突，会执行Flag</font>，对生命周期和Task&#x2F;Back Stack有影响的Intent Flag主要有</p><ul><li><p>FLAG_ACTIVITY_NEW_TASK</p><ul><li>会产生与“singleTask”相同的行为</li><li>在新任务中启动Activity。如果已有包含该Activity的任务，则该任务会转到前台并恢复其最后状态，同时该Activity会在onNewIntent()中收到新Intent</li></ul></li><li><p>FLAG_ACTIVITY_SINGLE_TOP</p><ul><li>会产生与“singleTop”相同的行为</li><li>如果正在启动的Activity是当前Activity(位于返回栈的顶部)，则现有实例会接收对onNewIntent()的调用，而不是创建Activity的新实例</li></ul></li><li><p>FLAG_ACTIVITY_CLEAR_TOP</p><ul><li>如果正在启动的Activity已经在担负前任务中运行，则会销毁当前任务顶部的所有Activity,并通过onNewIntent()将此Intent传递Activity已恢复的实例(现在位于顶部)，而不是启动该Activity的新实例</li><li>如果指定Activity的启动模式为“standard”，则该Activity也会从堆栈中删除，并在其位置启动一个新实例，以便处理传入的Intent。这是因为启动模式为“standard”时，将始终为新Intent创建新实例。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android_14_源码分析之启动流程</title>
      <link href="/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
      <url>/2023/12/13/Android-14-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>前序</li></ul><p>&emsp;&emsp;时间从来不语，却回答了所有问题，岁月从来不言，却见证了所有努力，愿大家遇到困难时都能换乘机遇，踏歌而行时一往无前。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>Android Framework 开发揭秘</li></ul><p>&emsp;&emsp;<font color=red>本文中的所有内容大部分来源于网络资料，如有侵权请联系本人修改或删除，请大家多多支持原创!非常感谢！</font></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>&emsp;&emsp;Android 是一种基于 Linux 的开放源代码软件栈，为各类设备和机型而创建。</p><p><img src="https://developer.android.google.cn/static/guide/platform/images/android-stack_2x.png?hl=zh-cn" alt="平台架构.png"></p><p>&emsp;&emsp;Android 平台的基础是Linux内核。例如，Android Runtime(ART)依靠Linux内核来执行底层功能，例如线程和底层内存管理。</p><h2 id="Linux-内核"><a href="#Linux-内核" class="headerlink" title="Linux 内核"></a>Linux 内核</h2><ul><li><p>硬件抽象层(HAL)</p><ul><li>HAL提供标准界面，向更高级的Java API 框架显示设备硬件功能。</li></ul></li><li><p>Android Runtime</p><ul><li>对于运行在Android 5.5(API 21)以上的设备，每个应用都有自己的ART实例并在其自己的进程中运行。</li><li>ART编写为通过执行DEX文件在低内存上运行多个虚拟机。</li><li>ART的功能包括<ul><li>预先AOT和及时JIT，编译优化而垃圾回收GC</li><li>在API 28以上，支持将应用软件包中的Dalvik Executable格式(DEX)文件转换为更紧凑的机器代码。</li></ul></li></ul></li><li><p>原生C&#x2F;C++库</p></li><li><p>Java API框架</p></li></ul><h2 id="Android-系统启动的大概流程"><a href="#Android-系统启动的大概流程" class="headerlink" title="Android 系统启动的大概流程"></a>Android 系统启动的大概流程</h2><ol><li>启动电源以及系统启动：当电源按下，引导芯片代码开始从预定义的地方(固化在ROM硬盘)开始执行。加载引导程序到RAM内存。<font color=red>Boot ROM</font></li><li>引导程序：引导程序是在Android操作系统开始运行前的程序，针对特定主板和芯片。比如redboot、uboot、qibootloader或者其他。android引导程序可以在.&#x2F;bootable找到。</li><li>内核：Android内核与桌面linux内核启动方式差不多。内核启动时读取配置文件，设置缓存，被保护存储器、计划列表，加载驱动，当内核完成系统设置，它首先在系统文件中找”init”文件，然后启动root进程或者系统的第一个进程。</li><li>init进程：init进程是系统所有进程的起点，进程号固定为1。Kernel启动后，在用户空间启动init进程，并调用init中的main()方法进行init进程的职责。</li><li>启动Lancher App</li></ol><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TB    Boot[Boot ROM] --&gt; Lader[Boot Loader]    Lader --&gt; Kernel[Kernel]    Kernel --&gt; init[init进程pid&#x3D;1]    init --&gt; Zygote[Zygote进程_Android Runtime_C++Framework Native]    Zygote --&gt; Server[启动必要的System Server]    Server --&gt; launcher[桌面应用Launcher]  </pre></div><h3 id="init进程分析"><a href="#init进程分析" class="headerlink" title="init进程分析"></a>init进程分析</h3><p>&emsp;&emsp;init进程是Android 系统中及其重要的第一个进程</p><ol><li>创建和挂载启动所需要的文件目录</li><li>初始化和启动属性服务</li><li>解析init.rc配置文件并启动Zygote进程</li></ol><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TB    init[init] --&gt; zygote[zygote]    init --&gt; servicemanager[servicemanager]    zygote -..-&gt; system_server[system_servre]      servicemanager -..-&gt; system_server      system_server -..-&gt; app[app]  </pre></div><ul><li>system&#x2F;core&#x2F;init&#x2F;main.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果编译时开启了 AddressSanitizer，则设置地址检测器错误报告回调函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __has_feature(address_sanitizer)</span></span><br><span class="line">    __asan_set_error_report_callback(AsanReportCallback);</span><br><span class="line"><span class="comment">// 如果编译时开启了 HardwareAddressSanitizer，则设置硬件地址检测器错误报告回调函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> __has_feature(hwaddress_sanitizer)</span></span><br><span class="line">    __hwasan_set_error_report_callback(AsanReportCallback);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提高进程优先级，稍后会恢复</span></span><br><span class="line">    setpriority(PRIO_PROCESS, <span class="number">0</span>, <span class="number">-20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果可执行文件的基本名称（去掉路径部分）是 &quot;ueventd&quot;，则调用 ueventd_main 函数</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(basename(argv[<span class="number">0</span>]), <span class="string">&quot;ueventd&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> ueventd_main(argc, argv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果命令行参数个数大于 1</span></span><br><span class="line">    <span class="keyword">if</span> (argc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果第一个参数是 &quot;subcontext&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;subcontext&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// 初始化日志系统，并调用 SubcontextMain 函数</span></span><br><span class="line">            android::base::InitLogging(argv, &amp;android::base::KernelLogger);</span><br><span class="line">            <span class="type">const</span> BuiltinFunctionMap&amp; function_map = GetBuiltinFunctionMap();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> SubcontextMain(argc, argv, &amp;function_map);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果第一个参数是 &quot;selinux_setup&quot;，则调用 SetupSelinux 函数</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;selinux_setup&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> SetupSelinux(argv);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果第一个参数是 &quot;second_stage&quot;，则调用 SecondStageMain 函数</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;second_stage&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> SecondStageMain(argc, argv);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认情况下调用 FirstStageMain 函数</span></span><br><span class="line">    <span class="keyword">return</span> FirstStageMain(argc, argv);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;后续在FirstStageMain()函数中mount挂载文件系统，创建一系列文件，以及初始化目录的读写权限，并创建设备文件，位于.&#x2F;first_stage_main.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">FirstStageMain</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> &#123;</span><br><span class="line"><span class="comment">// InstallRebootSignalHandlers 用于在发生 panic 时重新启动到 bootloader，如果已配置。</span></span><br><span class="line"><span class="keyword">if</span> (REBOOT_BOOTLOADER_ON_PANIC) &#123;</span><br><span class="line">    InstallRebootSignalHandlers();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 记录启动时间，使用 boot_clock。</span></span><br><span class="line">boot_clock::time_point start_time = boot_clock::now();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储初始化过程中遇到的错误的向量。</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">pair</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="type">int</span>&gt;&gt; errors;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CHECKCALL 宏用于检查系统调用的结果，并将任何错误添加到 &#x27;errors&#x27; 向量中。</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHECKCALL(x) \</span></span><br><span class="line"><span class="meta">    <span class="keyword">if</span> ((x) != 0) errors.emplace_back(#x <span class="string">&quot; 失败&quot;</span>, errno);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 umask 设置为 0。</span></span><br><span class="line">umask(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除环境变量。</span></span><br><span class="line">CHECKCALL(clearenv());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 PATH 环境变量设置为默认路径。</span></span><br><span class="line">CHECKCALL(setenv(<span class="string">&quot;PATH&quot;</span>, _PATH_DEFPATH, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 挂载必要的文件系统并创建基本目录。</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 为 vold 管理的设备挂载分区的暂存区域。</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">CHECKCALL(mount(<span class="string">&quot;tmpfs&quot;</span>, kSecondStageRes, <span class="string">&quot;tmpfs&quot;</span>, MS_NOEXEC | MS_NOSUID | MS_NODEV,</span><br><span class="line">                <span class="string">&quot;mode=0755,uid=0,gid=0&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置错误检查宏。</span></span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> CHECKCALL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将标准输入、输出和错误重定向到 /dev/null。</span></span><br><span class="line">SetStdioToDevNull(argv);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化内核日志。</span></span><br><span class="line">InitKernelLogging(argv);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果初始化过程中遇到错误，记录错误信息。</span></span><br><span class="line"><span class="keyword">if</span> (!errors.empty()) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; [error_string, error_errno] : errors) &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; error_string &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; strerror(error_errno);</span><br><span class="line">    &#125;</span><br><span class="line">    LOG(FATAL) &lt;&lt; <span class="string">&quot;Init 在启动第一阶段时遇到错误，中止&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 记录第一阶段启动的消息。</span></span><br><span class="line">LOG(INFO) &lt;&lt; <span class="string">&quot;init 第一阶段启动！&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果需要，释放 ramdisk。</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 确定是否启用 console，并检查是否请求并行模块加载。</span></span><br><span class="line"><span class="keyword">auto</span> want_console = ALLOW_FIRST_STAGE_CONSOLE ? FirstStageConsole(cmdline, bootconfig) : <span class="number">0</span>;</span><br><span class="line"><span class="keyword">auto</span> want_parallel = bootconfig.find(<span class="string">&quot;androidboot.load_modules_parallel = \&quot;true\&quot;&quot;</span>) != <span class="built_in">std</span>::<span class="built_in">string</span>::npos;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载内核模块。</span></span><br><span class="line"><span class="type">int</span> module_count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">LoadKernelModules(IsRecoveryMode() &amp;&amp; !ForceNormalBoot(cmdline, bootconfig), want_console,</span><br><span class="line">                  want_parallel, module_count);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印有关加载的内核模块的信息。</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果启用失败时的 console，创建设备。</span></span><br><span class="line"><span class="type">bool</span> created_devices = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (want_console == FirstStageConsoleParam::CONSOLE_ON_FAILURE) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!IsRecoveryMode()) &#123;</span><br><span class="line">        created_devices = DoCreateDevices();</span><br><span class="line">        <span class="keyword">if</span> (!created_devices) &#123;</span><br><span class="line">            LOG(ERROR) &lt;&lt; <span class="string">&quot;无法提前创建设备节点&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    StartConsole(cmdline);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果存在 ramdisk prop，则复制。</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置环境变量，以便第二阶段 init 读取调试文件。</span></span><br><span class="line">setenv(<span class="string">&quot;INIT_FORCE_DEBUGGABLE&quot;</span>, <span class="string">&quot;true&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果强制正常启动，则切换根目录。</span></span><br><span class="line"><span class="keyword">if</span> (ForceNormalBoot(cmdline, bootconfig)) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    SwitchRoot(<span class="string">&quot;/first_stage_ramdisk&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行第一阶段挂载。</span></span><br><span class="line"><span class="keyword">if</span> (!DoFirstStageMount(!created_devices)) &#123;</span><br><span class="line">    LOG(FATAL) &lt;&lt; <span class="string">&quot;无法提前挂载所需的分区...&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果存在旧的 ramdisk，则释放它。</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果需要，在 recovery 中设置 AVB 版本。</span></span><br><span class="line">SetInitAvbVersionInRecovery();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置环境变量以记录启动时间。</span></span><br><span class="line">setenv(kEnvFirstStageStartedAt, <span class="built_in">std</span>::to_string(start_time.time_since_epoch().count()).c_str(), <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 execv() 替换当前进程为第二阶段 init。</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* path = <span class="string">&quot;/system/bin/init&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* args[] = &#123;path, <span class="string">&quot;selinux_setup&quot;</span>, nullptr&#125;;</span><br><span class="line"><span class="keyword">auto</span> fd = open(<span class="string">&quot;/dev/kmsg&quot;</span>, O_WRONLY | O_CLOEXEC);</span><br><span class="line">dup2(fd, STDOUT_FILENO);</span><br><span class="line">dup2(fd, STDERR_FILENO);</span><br><span class="line">close(fd);</span><br><span class="line">execv(path, const_cast&lt;<span class="type">char</span>**&gt;(args));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果发生错误，execv() 只有在发生错误时才返回。</span></span><br><span class="line">PLOG(FATAL) &lt;&lt; <span class="string">&quot;execv(\&quot;&quot;</span> &lt;&lt; path &lt;&lt; <span class="string">&quot;\&quot;) 失败&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="init-rc-解析"><a href="#init-rc-解析" class="headerlink" title="init.rc 解析"></a>init.rc 解析</h3><ul><li>路径:system&#x2F;core&#x2F;rootdir&#x2F;init.rc</li></ul><p>&emsp;&emsp;init.rc 是一个非常重要的配置文件，由Android初始化语言(Android Init Language)编写的脚本，它主要包含五种类型语句：Action(Action中包含了一系列的Command)、Commands(init语言中的命令)、Service(由init进程启动的服务)、Options(对服务进行配置的选项)和Import(引入其他配置文件)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## line 490</span><br><span class="line">on property:apexd.status=ready &amp;&amp; property:ro.product.cpu.abilist64=*</span><br><span class="line">    exec_start boringssl_self_test_apex64</span><br><span class="line"></span><br><span class="line">service boringssl_self_test32 /system/bin/boringssl_self_test32</span><br><span class="line">    reboot_on_failure reboot,boringssl-self-check-failed</span><br><span class="line">    stdio_to_kmsg</span><br><span class="line">    # Explicitly specify that boringssl_self_test32 doesn&#x27;t require any capabilities</span><br><span class="line">    capabilities</span><br><span class="line">    user nobody</span><br><span class="line"># ...</span><br></pre></td></tr></table></figure><ul><li>语法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">on  &lt;trigger&gt; [&amp;&amp; &lt;trigger&gt;]* //设置触发器</span><br><span class="line">    &lt;command&gt;</span><br><span class="line">    &lt;command&gt; //动作触发之后要执行的命令</span><br><span class="line"></span><br><span class="line">service &lt;name&gt; &lt;pathname&gt; [&lt;argument&gt;]* //&lt;service的名字&gt;&lt;执行程序路径&gt;&lt;传递参数&gt;</span><br><span class="line">    &lt;option&gt; //options是services的参数配置，它们影响Service如何运行及运行时机</span><br><span class="line">    group &lt;groupname&gt; [&lt;groupname&gt;\*] //在启动Service前将group改为第一个groupname,第一个groupname是必须有的</span><br><span class="line">    //默认值是root，第二各groupname可以不设置，用于追加组(通过setgroups)</span><br><span class="line">    priority &lt;proiority&gt; //设置进程优先级，在-20~19之间，默认值是0,通过setpriority实现</span><br><span class="line">    socket &lt;name&gt; &lt;type&gt; &lt;perm&gt; [&lt;user&gt; [&lt;group&gt; [&lt;seclabel&gt;]]] //创建一个unix域的socket,名字叫/dev/socket/name,并将fd返回给Service,type只能是dgram,stream,swqpacket</span><br></pre></td></tr></table></figure><h4 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h4><p>&emsp;&emsp;Action通过触发器trigger，即以on开头的语句来决定执行相应的service的时机。具体有如下时机：</p><ul><li>on early-init：在初始化早期阶段触发</li><li>on init：在初始化阶段触发</li><li>on late-init：在初始化晚期阶段触发</li><li>on boot&#x2F;charger：当系统启动&#x2F;充电时触发</li><li>on property：&#x3D;：当属性值满足条件时触发</li></ul><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><p>&emsp;&emsp;服务Service，以service开头，由init进程启动，一般运行在init的一个子进程，所以启动service前需要判断对应的可执行文件是否存在。init生成的子进程，定义在rc文件，其中每一个service在启动时会通过fork方式生成子进程。例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service boringssl_self_test32 /system/bin/boringssl_self_test32</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;代表的是服务名为boringssl_self_test32，服务执行的路径为&#x2F;system&#x2F;bin&#x2F;boringssl_self_test32</p><h4 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h4><ul><li>class_start <service_class_name>: 启动属于同一个class的所有服务</li><li>start <service_name>：启动指定的服务，若已启动则跳过</li><li>stop <service_name>：停止正在运行的服务</li><li>setprop：设置属性值</li><li>mkdir：创建指定目录</li><li>symlink <sym_link>：创建连接到的<sym_link>符号链接</li><li>write：向文件path中写入字符串</li><li>exec：fork并执行，会阻塞init进程直到程序完毕</li><li>exprot：设定环境变量</li><li>loglevel：设定log级别</li></ul><h4 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h4><p>&emsp;&emsp;Options是Service的可选项，与service配合使用</p><ul><li><p>disabled：不随class自动启动，只有根据Service名才启动</p></li><li><p>oneshot：service退出后不再重启</p></li><li><p>user&#x2F;group：设置执行服务的用户&#x2F;用户组，默认都是root；</p></li><li><p>class：设置所属的类名，当所属类启动&#x2F;退出时，服务也启动&#x2F;停止，默认为default;onrestart：当服务重启时执行相应命令</p></li><li><p>socket：创建名为&#x2F;dev&#x2F;socket&#x2F;<name>的socket,critical：在规定时间内该Service不断重启，则系统会重启并进入恢复模式 default:意味着disabled&#x3D;flase,oneshot&#x3D;false,critical&#x3D;false</p></li><li><p>system&#x2F;core&#x2F;rootdir&#x2F;init.zygote64.rc</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server --socket-name=zygote</span><br><span class="line">    class main</span><br><span class="line">    priority -20</span><br><span class="line">    user root</span><br><span class="line">    group root readproc reserved_disk</span><br><span class="line">    socket zygote stream 660 root system</span><br><span class="line">    socket usap_pool_primary stream 660 root system</span><br><span class="line">    onrestart exec_background - system system -- /system/bin/vdc volume abort_fuse</span><br><span class="line">    onrestart write /sys/power/state on</span><br><span class="line">    # NOTE: If the wakelock name here is changed, then also</span><br><span class="line">    # update it in SystemSuspend.cpp</span><br><span class="line">    onrestart write /sys/power/wake_lock zygote_kwl</span><br><span class="line">    onrestart restart audioserver</span><br><span class="line">    onrestart restart cameraserver</span><br><span class="line">    onrestart restart media</span><br><span class="line">    onrestart restart media.tuner</span><br><span class="line">    onrestart restart netd</span><br><span class="line">    onrestart restart wificond</span><br><span class="line">    task_profiles ProcessCapacityHigh MaxPerformance</span><br><span class="line">    critical window=$&#123;zygote.critical_window.minute:-off&#125; target=zygote-fatal</span><br></pre></td></tr></table></figure><h4 id="service解析流程"><a href="#service解析流程" class="headerlink" title="service解析流程"></a>service解析流程</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 337</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">LoadBootScripts</span><span class="params">(ActionManager&amp; action_manager, ServiceList&amp; service_list)</span> &#123;</span><br><span class="line">    Parser parser = CreateParser(action_manager, service_list);<span class="comment">//创建解析器</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> bootscript = GetProperty(<span class="string">&quot;ro.boot.init_rc&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (bootscript.empty()) &#123;</span><br><span class="line">        parser.ParseConfig(<span class="string">&quot;/system/etc/init/hw/init.rc&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/system/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/system/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// late_import is available only in Q and earlier release. As we don&#x27;t</span></span><br><span class="line">        <span class="comment">// have system_ext in those versions, skip late_import for system_ext.</span></span><br><span class="line">        parser.ParseConfig(<span class="string">&quot;/system_ext/etc/init&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/vendor/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/vendor/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/odm/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/odm/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!parser.ParseConfig(<span class="string">&quot;/product/etc/init&quot;</span>)) &#123;</span><br><span class="line">            late_import_paths.emplace_back(<span class="string">&quot;/product/etc/init&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        parser.ParseConfig(bootscript);<span class="comment">//开始解析</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Line 270</span></span><br><span class="line"></span><br><span class="line">Parser <span class="title function_">CreateParser</span><span class="params">(ActionManager&amp; action_manager, ServiceList&amp; service_list)</span> &#123;</span><br><span class="line">    Parser parser;</span><br><span class="line"></span><br><span class="line">    parser.AddSectionParser(<span class="string">&quot;service&quot;</span>, <span class="built_in">std</span>::make_unique&lt;ServiceParser&gt;(</span><br><span class="line">                                               &amp;service_list, GetSubcontext(), <span class="built_in">std</span>::nullopt));<span class="comment">//service解析</span></span><br><span class="line">    parser.AddSectionParser(<span class="string">&quot;on&quot;</span>, <span class="built_in">std</span>::make_unique&lt;ActionParser&gt;(&amp;action_manager, GetSubcontext()));</span><br><span class="line">    parser.AddSectionParser(<span class="string">&quot;import&quot;</span>, <span class="built_in">std</span>::make_unique&lt;ImportParser&gt;(&amp;parser));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>system&#x2F;core&#x2F;init&#x2F;parser.cpp</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">void Parser::ParseData(const std::string&amp; filename, std::string* data) &#123;</span><br><span class="line">    data-&gt;push_back(&#x27;\n&#x27;);</span><br><span class="line">    data-&gt;push_back(&#x27;\0&#x27;);</span><br><span class="line"></span><br><span class="line">    parse_state state;</span><br><span class="line">    state.line = 0;</span><br><span class="line">    state.ptr = data-&gt;data();</span><br><span class="line">    state.nexttoken = 0;</span><br><span class="line"></span><br><span class="line">    SectionParser* section_parser = nullptr;</span><br><span class="line">    int section_start_line = -1;</span><br><span class="line">    std::vector&lt;std::string&gt; args;</span><br><span class="line"></span><br><span class="line">    // If we encounter a bad section start, there is no valid parser object to parse the subsequent</span><br><span class="line">    // sections, so we must suppress errors until the next valid section is found.</span><br><span class="line">    bool bad_section_found = false;</span><br><span class="line"></span><br><span class="line">    auto end_section = [&amp;] &#123;</span><br><span class="line">        bad_section_found = false;</span><br><span class="line">        if (section_parser == nullptr) return;</span><br><span class="line"></span><br><span class="line">        if (auto result = section_parser-&gt;EndSection(); !result.ok()) &#123;</span><br><span class="line">            parse_error_count_++;</span><br><span class="line">            LOG(ERROR) &lt;&lt; filename &lt;&lt; &quot;: &quot; &lt;&lt; section_start_line &lt;&lt; &quot;: &quot; &lt;&lt; result.error();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        section_parser = nullptr;</span><br><span class="line">        section_start_line = -1;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    for (;;) &#123;</span><br><span class="line">        switch (next_token(&amp;state)) &#123;</span><br><span class="line">            case T_EOF:</span><br><span class="line">                end_section();</span><br><span class="line"></span><br><span class="line">                for (const auto&amp; [section_name, section_parser] : section_parsers_) &#123;</span><br><span class="line">                    section_parser-&gt;EndFile();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return;</span><br><span class="line">            case T_NEWLINE: &#123;</span><br><span class="line">                state.line++;</span><br><span class="line">                if (args.empty()) break;</span><br><span class="line">                // If we have a line matching a prefix we recognize, call its callback and unset any</span><br><span class="line">                // current section parsers.  This is meant for /sys/ and /dev/ line entries for</span><br><span class="line">                // uevent.</span><br><span class="line">                auto line_callback = std::find_if(</span><br><span class="line">                    line_callbacks_.begin(), line_callbacks_.end(),</span><br><span class="line">                    [&amp;args](const auto&amp; c) &#123; return android::base::StartsWith(args[0], c.first); &#125;);</span><br><span class="line">                if (line_callback != line_callbacks_.end()) &#123;</span><br><span class="line">                    end_section();</span><br><span class="line"></span><br><span class="line">                    if (auto result = line_callback-&gt;second(std::move(args)); !result.ok()) &#123;</span><br><span class="line">                        parse_error_count_++;</span><br><span class="line">                        LOG(ERROR) &lt;&lt; filename &lt;&lt; &quot;: &quot; &lt;&lt; state.line &lt;&lt; &quot;: &quot; &lt;&lt; result.error();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (section_parsers_.count(args[0])) &#123;</span><br><span class="line">                    end_section();</span><br><span class="line">                    section_parser = section_parsers_[args[0]].get();</span><br><span class="line">                    section_start_line = state.line;</span><br><span class="line">                    if (auto result =</span><br><span class="line">                                section_parser-&gt;ParseSection(std::move(args), filename, state.line);</span><br><span class="line">                        !result.ok()) &#123;</span><br><span class="line">                        parse_error_count_++;</span><br><span class="line">                        LOG(ERROR) &lt;&lt; filename &lt;&lt; &quot;: &quot; &lt;&lt; state.line &lt;&lt; &quot;: &quot; &lt;&lt; result.error();</span><br><span class="line">                        section_parser = nullptr;</span><br><span class="line">                        bad_section_found = true;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (section_parser) &#123;</span><br><span class="line">                    if (auto result = section_parser-&gt;ParseLineSection(std::move(args), state.line);</span><br><span class="line">                        !result.ok()) &#123;</span><br><span class="line">                        parse_error_count_++;</span><br><span class="line">                        LOG(ERROR) &lt;&lt; filename &lt;&lt; &quot;: &quot; &lt;&lt; state.line &lt;&lt; &quot;: &quot; &lt;&lt; result.error();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (!bad_section_found) &#123;</span><br><span class="line">                    parse_error_count_++;</span><br><span class="line">                    LOG(ERROR) &lt;&lt; filename &lt;&lt; &quot;: &quot; &lt;&lt; state.line</span><br><span class="line">                               &lt;&lt; &quot;: Invalid section keyword found&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                args.clear();</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            case T_TEXT:</span><br><span class="line">                args.emplace_back(state.text);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>system&#x2F;core&#x2F;init&#x2F;service.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;<span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;Service&gt;&gt; Service::MakeTemporaryOneshotService(</span><br><span class="line">        <span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; args) &#123;</span><br><span class="line">    <span class="comment">// Parse the arguments: exec [SECLABEL [UID [GID]*] --] COMMAND ARGS...</span></span><br><span class="line">    <span class="comment">// SECLABEL can be a - to denote default</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="type">size_t</span> command_arg = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">std</span>::<span class="type">size_t</span> i = <span class="number">1</span>; i &lt; args.size(); ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (args[i] == <span class="string">&quot;--&quot;</span>) &#123;</span><br><span class="line">            command_arg = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (command_arg &gt; <span class="number">4</span> + NR_SVC_SUPP_GIDS) &#123;</span><br><span class="line">        <span class="keyword">return</span> Error() &lt;&lt; <span class="string">&quot;exec called with too many supplementary group ids&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (command_arg &gt;= args.size()) &#123;</span><br><span class="line">        <span class="keyword">return</span> Error() &lt;&lt; <span class="string">&quot;exec called without command&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; <span class="title function_">str_args</span><span class="params">(args.begin() + command_arg, args.end())</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">size_t</span> exec_count = <span class="number">0</span>;</span><br><span class="line">    exec_count++;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> name = <span class="string">&quot;exec &quot;</span> + <span class="built_in">std</span>::to_string(exec_count) + <span class="string">&quot; (&quot;</span> + Join(str_args, <span class="string">&quot; &quot;</span>) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> flags = SVC_ONESHOT | SVC_TEMPORARY;</span><br><span class="line">    <span class="type">unsigned</span> namespace_flags = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> seclabel = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (command_arg &gt; <span class="number">2</span> &amp;&amp; args[<span class="number">1</span>] != <span class="string">&quot;-&quot;</span>) &#123;</span><br><span class="line">        seclabel = args[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    Result&lt;<span class="type">uid_t</span>&gt; uid = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (command_arg &gt; <span class="number">3</span>) &#123;</span><br><span class="line">        uid = DecodeUid(args[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!uid.ok()) &#123;</span><br><span class="line">            <span class="keyword">return</span> Error() &lt;&lt; <span class="string">&quot;Unable to decode UID for &#x27;&quot;</span> &lt;&lt; args[<span class="number">2</span>] &lt;&lt; <span class="string">&quot;&#x27;: &quot;</span> &lt;&lt; uid.error();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Result&lt;<span class="type">gid_t</span>&gt; gid = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="type">gid_t</span>&gt; supp_gids;</span><br><span class="line">    <span class="keyword">if</span> (command_arg &gt; <span class="number">4</span>) &#123;</span><br><span class="line">        gid = DecodeUid(args[<span class="number">3</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!gid.ok()) &#123;</span><br><span class="line">            <span class="keyword">return</span> Error() &lt;&lt; <span class="string">&quot;Unable to decode GID for &#x27;&quot;</span> &lt;&lt; args[<span class="number">3</span>] &lt;&lt; <span class="string">&quot;&#x27;: &quot;</span> &lt;&lt; gid.error();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">std</span>::<span class="type">size_t</span> nr_supp_gids = command_arg - <span class="number">1</span> <span class="comment">/* -- */</span> - <span class="number">4</span> <span class="comment">/* exec SECLABEL UID GID */</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; nr_supp_gids; ++i) &#123;</span><br><span class="line">            <span class="keyword">auto</span> supp_gid = DecodeUid(args[<span class="number">4</span> + i]);</span><br><span class="line">            <span class="keyword">if</span> (!supp_gid.ok()) &#123;</span><br><span class="line">                <span class="keyword">return</span> Error() &lt;&lt; <span class="string">&quot;Unable to decode GID for &#x27;&quot;</span> &lt;&lt; args[<span class="number">4</span> + i]</span><br><span class="line">                               &lt;&lt; <span class="string">&quot;&#x27;: &quot;</span> &lt;&lt; supp_gid.error();</span><br><span class="line">            &#125;</span><br><span class="line">            supp_gids.push_back(*supp_gid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">std</span>::make_unique&lt;Service&gt;(name, flags, *uid, *gid, supp_gids, namespace_flags, seclabel,</span><br><span class="line">                                     nullptr, <span class="comment">/*filename=*/</span><span class="string">&quot;&quot;</span>, str_args);<span class="comment">//构建一个service对象</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;解析完成后，就是启动service,以启动Zygote为例</p><ul><li>system&#x2F;core&#x2F;init&#x2F;builtins.cpp<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">static Result&lt;void&gt; do_class_start(const BuiltinArguments&amp; args) &#123;</span><br><span class="line">    // Do not start a class if it has a property persist.dont_start_class.CLASS set to 1.</span><br><span class="line">    if (android::base::GetBoolProperty(&quot;persist.init.dont_start_class.&quot; + args[1], false))</span><br><span class="line">        return &#123;&#125;;</span><br><span class="line">    // Starting a class does not start services which are explicitly disabled.</span><br><span class="line">    // They must  be started individually.</span><br><span class="line">    for (const auto&amp; service : ServiceList::GetInstance()) &#123;</span><br><span class="line">        if (service-&gt;classnames().count(args[1])) &#123;</span><br><span class="line">            if (auto result = service-&gt;StartIfNotDisabled(); !result.ok()) &#123;</span><br><span class="line">                LOG(ERROR) &lt;&lt; &quot;Could not start service &#x27;&quot; &lt;&lt; service-&gt;name()</span><br><span class="line">                           &lt;&lt; &quot;&#x27; as part of class &#x27;&quot; &lt;&lt; args[1] &lt;&lt; &quot;&#x27;: &quot; &lt;&lt; result.error();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>system&#x2F;core&#x2F;init&#x2F;service.cpp<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;void&gt; Service::Start() &#123;</span><br><span class="line">    auto reboot_on_failure = make_scope_guard([this] &#123;</span><br><span class="line">        if (on_failure_reboot_target_) &#123;</span><br><span class="line">            trigger_shutdown(*on_failure_reboot_target_);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    if (is_updatable() &amp;&amp; !ServiceList::GetInstance().IsServicesUpdated()) &#123;</span><br><span class="line">        ServiceList::GetInstance().DelayService(*this);</span><br><span class="line">        return Error() &lt;&lt; &quot;Cannot start an updatable service &#x27;&quot; &lt;&lt; name_</span><br><span class="line">                       &lt;&lt; &quot;&#x27; before configs from APEXes are all loaded. &quot;</span><br><span class="line">                       &lt;&lt; &quot;Queued for execution.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bool disabled = (flags_ &amp; (SVC_DISABLED | SVC_RESET));</span><br><span class="line">    ResetFlagsForStart();</span><br><span class="line"></span><br><span class="line">    // Running processes require no additional work --- if they&#x27;re in the</span><br><span class="line">    // process of exiting, we&#x27;ve ensured that they will immediately restart</span><br><span class="line">    // on exit, unless they are ONESHOT. For ONESHOT service, if it&#x27;s in</span><br><span class="line">    // stopping status, we just set SVC_RESTART flag so it will get restarted</span><br><span class="line">    // in Reap().</span><br><span class="line">    //如果service已经运行，则不启动</span><br><span class="line">    if (flags_ &amp; SVC_RUNNING) &#123;</span><br><span class="line">        if ((flags_ &amp; SVC_ONESHOT) &amp;&amp; disabled) &#123;</span><br><span class="line">            flags_ |= SVC_RESTART;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LOG(INFO) &lt;&lt; &quot;service &#x27;&quot; &lt;&lt; name_</span><br><span class="line">                  &lt;&lt; &quot;&#x27; requested start, but it is already running (flags: &quot; &lt;&lt; flags_ &lt;&lt; &quot;)&quot;;</span><br><span class="line"></span><br><span class="line">        // It is not an error to try to start a service that is already running.</span><br><span class="line">        reboot_on_failure.Disable();</span><br><span class="line">        return &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // cgroups_activated is used for communication from the parent to the child</span><br><span class="line">    // while setsid_finished is used for communication from the child process to</span><br><span class="line">    // the parent process. These two communication channels are separate because</span><br><span class="line">    // combining these into a single communication channel would introduce a</span><br><span class="line">    // race between the Write() calls by the parent and by the child.</span><br><span class="line">    InterprocessFifo cgroups_activated, setsid_finished;</span><br><span class="line">    OR_RETURN(cgroups_activated.Initialize());</span><br><span class="line">    OR_RETURN(setsid_finished.Initialize());</span><br><span class="line"></span><br><span class="line">    if (Result&lt;void&gt; result = CheckConsole(); !result.ok()) &#123;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">    //判断需要启动的service的对应执行文件是否存在，不存在就不启动service struct</span><br><span class="line">    struct stat sb;</span><br><span class="line">    if (stat(args_[0].c_str(), &amp;sb) == -1) &#123;</span><br><span class="line">        flags_ |= SVC_DISABLED;</span><br><span class="line">        return ErrnoError() &lt;&lt; &quot;Cannot find &#x27;&quot; &lt;&lt; args_[0] &lt;&lt; &quot;&#x27;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::string scon;</span><br><span class="line">    if (!seclabel_.empty()) &#123;</span><br><span class="line">        scon = seclabel_;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        auto result = ComputeContextFromExecutable(args_[0]);</span><br><span class="line">        if (!result.ok()) &#123;</span><br><span class="line">            return result.error();</span><br><span class="line">        &#125;</span><br><span class="line">        scon = *result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!mount_namespace_.has_value()) &#123;</span><br><span class="line">        // remember from which mount namespace the service should start</span><br><span class="line">        SetMountNamespace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    post_data_ = ServiceList::GetInstance().IsPostData();</span><br><span class="line"></span><br><span class="line">    LOG(INFO) &lt;&lt; &quot;starting service &#x27;&quot; &lt;&lt; name_ &lt;&lt; &quot;&#x27;...&quot;;</span><br><span class="line"></span><br><span class="line">    std::vector&lt;Descriptor&gt; descriptors;</span><br><span class="line">    for (const auto&amp; socket : sockets_) &#123;</span><br><span class="line">        if (auto result = socket.Create(scon); result.ok()) &#123;</span><br><span class="line">            descriptors.emplace_back(std::move(*result));</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            LOG(INFO) &lt;&lt; &quot;Could not create socket &#x27;&quot; &lt;&lt; socket.name &lt;&lt; &quot;&#x27;: &quot; &lt;&lt; result.error();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for (const auto&amp; file : files_) &#123;</span><br><span class="line">        if (auto result = file.Create(); result.ok()) &#123;</span><br><span class="line">            descriptors.emplace_back(std::move(*result));</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            LOG(INFO) &lt;&lt; &quot;Could not open file &#x27;&quot; &lt;&lt; file.name &lt;&lt; &quot;&#x27;: &quot; &lt;&lt; result.error();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //如果子进程没有启动，则调用fork()函数创建子进程</span><br><span class="line">    pid_t pid = -1;</span><br><span class="line">    if (namespaces_.flags) &#123;</span><br><span class="line">        pid = clone(nullptr, nullptr, namespaces_.flags | SIGCHLD, nullptr);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        pid = fork();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (pid == 0) &#123;//当前代码逻辑在子进程中运行</span><br><span class="line">        umask(077);</span><br><span class="line">        cgroups_activated.CloseWriteFd();</span><br><span class="line">        setsid_finished.CloseReadFd();</span><br><span class="line">        RunService(descriptors, std::move(cgroups_activated), std::move(setsid_finished));</span><br><span class="line">        _exit(127);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        cgroups_activated.CloseReadFd();</span><br><span class="line">        setsid_finished.CloseWriteFd();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (pid &lt; 0) &#123;</span><br><span class="line">        pid_ = 0;</span><br><span class="line">        return ErrnoError() &lt;&lt; &quot;Failed to fork&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    once_environment_vars_.clear();</span><br><span class="line"></span><br><span class="line">    if (oom_score_adjust_ != DEFAULT_OOM_SCORE_ADJUST) &#123;</span><br><span class="line">        std::string oom_str = std::to_string(oom_score_adjust_);</span><br><span class="line">        std::string oom_file = StringPrintf(&quot;/proc/%d/oom_score_adj&quot;, pid);</span><br><span class="line">        if (!WriteStringToFile(oom_str, oom_file)) &#123;</span><br><span class="line">            PLOG(ERROR) &lt;&lt; &quot;couldn&#x27;t write oom_score_adj&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    time_started_ = boot_clock::now();</span><br><span class="line">    pid_ = pid;</span><br><span class="line">    flags_ |= SVC_RUNNING;</span><br><span class="line">    start_order_ = next_start_order_++;</span><br><span class="line">    process_cgroup_empty_ = false;</span><br><span class="line"></span><br><span class="line">    if (CgroupsAvailable()) &#123;</span><br><span class="line">        bool use_memcg = swappiness_ != -1 || soft_limit_in_bytes_ != -1 || limit_in_bytes_ != -1 ||</span><br><span class="line">                         limit_percent_ != -1 || !limit_property_.empty();</span><br><span class="line">        errno = -createProcessGroup(proc_attr_.uid, pid_, use_memcg);</span><br><span class="line">        if (errno != 0) &#123;</span><br><span class="line">            Result&lt;void&gt; result = cgroups_activated.Write(kActivatingCgroupsFailed);</span><br><span class="line">            if (!result.ok()) &#123;</span><br><span class="line">                return Error() &lt;&lt; &quot;Sending notification failed: &quot; &lt;&lt; result.error();</span><br><span class="line">            &#125;</span><br><span class="line">            return Error() &lt;&lt; &quot;createProcessGroup(&quot; &lt;&lt; proc_attr_.uid &lt;&lt; &quot;, &quot; &lt;&lt; pid_ &lt;&lt; &quot;, &quot;</span><br><span class="line">                           &lt;&lt; use_memcg &lt;&lt; &quot;) failed for service &#x27;&quot; &lt;&lt; name_</span><br><span class="line">                           &lt;&lt; &quot;&#x27;: &quot; &lt;&lt; strerror(errno);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // When the blkio controller is mounted in the v1 hierarchy, NormalIoPriority is</span><br><span class="line">        // the default (/dev/blkio). When the blkio controller is mounted in the v2 hierarchy, the</span><br><span class="line">        // NormalIoPriority profile has to be applied explicitly.</span><br><span class="line">        SetProcessProfiles(proc_attr_.uid, pid_, &#123;&quot;NormalIoPriority&quot;&#125;);</span><br><span class="line"></span><br><span class="line">        if (use_memcg) &#123;</span><br><span class="line">            ConfigureMemcg();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (oom_score_adjust_ != DEFAULT_OOM_SCORE_ADJUST) &#123;</span><br><span class="line">        LmkdRegister(name_, proc_attr_.uid, pid_, oom_score_adjust_);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (Result&lt;void&gt; result = cgroups_activated.Write(kCgroupsActivated); !result.ok()) &#123;</span><br><span class="line">        return Error() &lt;&lt; &quot;Sending cgroups activated notification failed: &quot; &lt;&lt; result.error();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cgroups_activated.Close();</span><br><span class="line"></span><br><span class="line">    // Call setpgid() from the parent process to make sure that this call has</span><br><span class="line">    // finished before the parent process calls kill(-pgid, ...).</span><br><span class="line">    if (!RequiresConsole(proc_attr_)) &#123;</span><br><span class="line">        if (setpgid(pid, pid) &lt; 0) &#123;</span><br><span class="line">            switch (errno) &#123;</span><br><span class="line">                case EACCES:  // Child has already performed setpgid() followed by execve().</span><br><span class="line">                case ESRCH:   // Child process no longer exists.</span><br><span class="line">                    break;</span><br><span class="line">                default:</span><br><span class="line">                    PLOG(ERROR) &lt;&lt; &quot;setpgid() from parent failed&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // The Read() call below will return an error if the child is killed.</span><br><span class="line">        if (Result&lt;uint8_t&gt; result = setsid_finished.Read();</span><br><span class="line">            !result.ok() || *result != kSetSidFinished) &#123;</span><br><span class="line">            if (!result.ok()) &#123;</span><br><span class="line">                return Error() &lt;&lt; &quot;Waiting for setsid() failed: &quot; &lt;&lt; result.error();</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                return Error() &lt;&lt; &quot;Waiting for setsid() failed: &quot; &lt;&lt; static_cast&lt;uint32_t&gt;(*result)</span><br><span class="line">                               &lt;&lt; &quot; &lt;&gt; &quot; &lt;&lt; static_cast&lt;uint32_t&gt;(kSetSidFinished);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setsid_finished.Close();</span><br><span class="line"></span><br><span class="line">    NotifyStateChange(&quot;running&quot;);</span><br><span class="line">    reboot_on_failure.Disable();</span><br><span class="line"></span><br><span class="line">    LOG(INFO) &lt;&lt; &quot;... started service &#x27;&quot; &lt;&lt; name_ &lt;&lt; &quot;&#x27; has pid &quot; &lt;&lt; pid_;</span><br><span class="line"></span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="Zygote"><a href="#Zygote" class="headerlink" title="Zygote"></a>Zygote</h3><p>&emsp;&emsp;Zygote中文翻译是“受精卵“，正如其名，它主要用于孵化子进程。在Android系统中有两种程序:</p><ul><li>java应用程序，主要基于ART虚拟机，所有的应用程序apk都属于这类native程序，也就是利用C或C++语言开发的程序，如Bootanimation。所有的Java应用程序进程及系统服务SystemServer进程都由Zygote进程通过Linux的fork()函数孵化出来的，而native程序则由init程序创建启动。最初的名字是app_process。Zygote是Android中的第一个art虚拟机，通过socket的方式与其他进程进行通信。Zygote是一个C&#x2F;S模型，Zygote进程作为服务端，它主要负责创建Java虚拟机，加载系统资源，启动SystemServer进程，以及在后续运行过程中启动普通的应用程序，其他进程作为客户端向它发出“孵化”请求，而Zygote接收到这个请求后就“孵化”出一个新的进程。比如，当点击Launcher里的应用图标去启动一个新的应用程序时，这个请求会到达框架层的核心服务ActivityMangerService中，当AMS受到这个请求后，它通过调用Process类发出一个“孵化”子进程的Socket请求，而Zygote监听到这个请求后就立刻fork一个新的进程出来。</li></ul><h4 id="Zygote触发过程"><a href="#Zygote触发过程" class="headerlink" title="Zygote触发过程"></a>Zygote触发过程</h4><ol><li>init.zygoteXX.rc</li></ol><blockquote><p>import &#x2F;init.${ro.zygote}.rc</p></blockquote><p>&emsp;&emsp;${ro.zygote}会被替换成ro.zygote的属性值，这个是由不同的硬件厂商自己定制，有4个值</p><ul><li>zygote32：zygote进程对应的执行程序是app_process(纯32bit模式)</li><li>zygote64：zygote进程对应的执行程序是app_process64(纯64bit模式)</li><li>zygote32_64：启动两个zygote进程(名为zygote和zygote_secondary)，对应的执行程序，对应的执行程序app_process32(主模式)</li><li>zygote64_32：启动两个zygote进程(名为zygote和zygote_secondary)，对应的执行程序分别是app_process64(主模式)、app_process32</li></ul><ol start="2"><li>start zygote</li></ol><ul><li>system&#x2F;core&#x2F;rootdir&#x2F;init.rc</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># Line 1070</span><br><span class="line"># It is recommended to put unnecessary data/ initialization from post-fs-data</span><br><span class="line"># to start-zygote in device&#x27;s init.rc to unblock zygote start.</span><br><span class="line">on zygote-start &amp;&amp; property:ro.crypto.state=unencrypted</span><br><span class="line">    wait_for_prop odsign.verification.done 1</span><br><span class="line">    # A/B update verifier that marks a successful boot.</span><br><span class="line">    exec_start update_verifier_nonencrypted</span><br><span class="line">    start statsd</span><br><span class="line">    start netd</span><br><span class="line">    start zygote</span><br><span class="line">    start zygote_secondary</span><br><span class="line"></span><br><span class="line">on zygote-start &amp;&amp; property:ro.crypto.state=unsupported</span><br><span class="line">    wait_for_prop odsign.verification.done 1</span><br><span class="line">    # A/B update verifier that marks a successful boot.</span><br><span class="line">    exec_start update_verifier_nonencrypted</span><br><span class="line">    start statsd</span><br><span class="line">    start netd</span><br><span class="line">    start zygote</span><br><span class="line">    start zygote_secondary</span><br><span class="line"></span><br><span class="line">on zygote-start &amp;&amp; property:ro.crypto.state=encrypted &amp;&amp; property:ro.crypto.type=file</span><br><span class="line">    wait_for_prop odsign.verification.done 1</span><br><span class="line">    # A/B update verifier that marks a successful boot.</span><br><span class="line">    exec_start update_verifier_nonencrypted</span><br><span class="line">    start statsd</span><br><span class="line">    start netd</span><br><span class="line">    start zygote</span><br><span class="line">    start zygote_secondary</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;zygote-start是在on late-init触发的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">## line 532</span><br><span class="line"></span><br><span class="line">on late-init</span><br><span class="line">    trigger early-fs</span><br><span class="line"></span><br><span class="line">    # Mount fstab in init.&#123;$device&#125;.rc by mount_all command. Optional parameter</span><br><span class="line">    # &#x27;--early&#x27; can be specified to skip entries with &#x27;latemount&#x27;.</span><br><span class="line">    # /system and /vendor must be mounted by the end of the fs stage,</span><br><span class="line">    # while /data is optional.</span><br><span class="line">    trigger fs</span><br><span class="line">    trigger post-fs</span><br><span class="line"></span><br><span class="line">    # Mount fstab in init.&#123;$device&#125;.rc by mount_all with &#x27;--late&#x27; parameter</span><br><span class="line">    # to only mount entries with &#x27;latemount&#x27;. This is needed if &#x27;--early&#x27; is</span><br><span class="line">    # specified in the previous mount_all command on the fs stage.</span><br><span class="line">    # With /system mounted and properties form /system + /factory available,</span><br><span class="line">    # some services can be started.</span><br><span class="line">    trigger late-fs</span><br><span class="line"></span><br><span class="line">    # Now we can mount /data. File encryption requires keymaster to decrypt</span><br><span class="line">    # /data, which in turn can only be loaded when system properties are present.</span><br><span class="line">    trigger post-fs-data</span><br><span class="line"></span><br><span class="line">    # Should be before netd, but after apex, properties and logging is available.</span><br><span class="line">    trigger load_bpf_programs</span><br><span class="line"></span><br><span class="line">    # Now we can start zygote for devices with file based encryption</span><br><span class="line">    trigger zygote-start</span><br><span class="line"></span><br><span class="line">    # Remove a file to wake up anything waiting for firmware.</span><br><span class="line">    trigger firmware_mounts_complete</span><br><span class="line"></span><br><span class="line">    trigger early-boot</span><br><span class="line">    trigger boot</span><br><span class="line"></span><br><span class="line"># Line 1346</span><br><span class="line">on userspace-reboot-resume</span><br><span class="line">  trigger userspace-reboot-fs-remount</span><br><span class="line">  trigger post-fs-data</span><br><span class="line">  trigger zygote-start</span><br><span class="line">  trigger early-boot</span><br><span class="line">  trigger boot</span><br></pre></td></tr></table></figure><h4 id="Zygote启动过程"><a href="#Zygote启动过程" class="headerlink" title="Zygote启动过程"></a>Zygote启动过程</h4><ul><li>frameworks&#x2F;base&#x2F;cmds&#x2F;app_process&#x2F;app_main.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* <span class="type">const</span> argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...Line 264</span></span><br><span class="line"> <span class="keyword">while</span> (i &lt; argc) &#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span>* arg = argv[i++];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arg, <span class="string">&quot;--zygote&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            zygote = <span class="literal">true</span>;</span><br><span class="line">            niceName = ZYGOTE_NICE_NAME;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arg, <span class="string">&quot;--start-system-server&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            startSystemServer = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arg, <span class="string">&quot;--application&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            application = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strncmp</span>(arg, <span class="string">&quot;--nice-name=&quot;</span>, <span class="number">12</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            niceName.setTo(arg + <span class="number">12</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strncmp</span>(arg, <span class="string">&quot;--&quot;</span>, <span class="number">2</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            className.setTo(arg);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            --i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">    <span class="keyword">if</span> (zygote) &#123;</span><br><span class="line">        <span class="comment">//这些Java的应用都是通过AppRuntime.start(className)开始的</span></span><br><span class="line">        <span class="comment">//其实AppRuntime是AndroidRuntime的子类，它主要实现了几个回调函数，而start()方法是实现在AndroidRutime这个方法类里</span></span><br><span class="line">        runtime.start(<span class="string">&quot;com.android.internal.os.ZygoteInit&quot;</span>, args, zygote);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!className.isEmpty()) &#123;</span><br><span class="line">        runtime.start(<span class="string">&quot;com.android.internal.os.RuntimeInit&quot;</span>, args, zygote);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error: no class name or --zygote supplied.\n&quot;</span>);</span><br><span class="line">        app_usage();</span><br><span class="line">        LOG_ALWAYS_FATAL(<span class="string">&quot;app_process: no class name or --zygote supplied.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在app_main.cpp的main函数中，主要做的事情就是参数解析，这个函数有两种启动模式:</p><ol><li>一种zygote模式，也就是初始化zygote进程，传递的参数有–start-system-server –socket- name&#x3D;zygote，前者表示启动SystemServer，后者指定socket的名称</li><li>一种是application模式，也就是启动普通应用程序，传递的参数有class名字以及class带的参数两者最终都是调用AppRuntime对象的start函数，加载ZygoteInit或RuntimeInit两个Java类，并将之前整理的参数传入进去。</li></ol><p>&emsp;&emsp;app_process里面定义了三种应用程序类型:</p><ul><li>Zygote：com.android.internal.os.ZygoteInit</li><li>System Server，不单独启动，而是由Zygote启动</li><li>其他指定类名的Java程序</li></ul><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TB    main[App_main.main] --&gt; androidRuntime[AndroidRuntime.start]    androidRuntime --&gt; startVm[startVm]    startVm --&gt; startReg[startReg]      startReg --&gt; zygoteinit_main[ZygoteInit.main]      zygoteinit_main --&gt; registerZygoteSocket[registerZygoteSocket]    registerZygoteSocket --&gt; preload[preload]    preload --&gt; startSystemServer[startSystemServer]    startSystemServer --&gt; runSelectLoop[runSelectLoop]   </pre></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">class AppRuntime : public AndroidRuntime</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    AppRuntime(char* argBlockStart, const size_t argBlockLength)</span><br><span class="line">        : AndroidRuntime(argBlockStart, argBlockLength)</span><br><span class="line">        , mClass(NULL)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void setClassNameAndArgs(const String8&amp; className, int argc, char * const *argv) &#123;</span><br><span class="line">        mClassName = className;</span><br><span class="line">        for (int i = 0; i &lt; argc; ++i) &#123;</span><br><span class="line">             mArgs.add(String8(argv[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual void onVmCreated(JNIEnv* env)</span><br><span class="line">    &#123;</span><br><span class="line">        if (mClassName.isEmpty()) &#123;</span><br><span class="line">            return; // Zygote. Nothing to do here.</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line">         * This is a little awkward because the JNI FindClass call uses the</span><br><span class="line">         * class loader associated with the native method we&#x27;re executing in.</span><br><span class="line">         * If called in onStarted (from RuntimeInit.finishInit because we&#x27;re</span><br><span class="line">         * launching &quot;am&quot;, for example), FindClass would see that we&#x27;re calling</span><br><span class="line">         * from a boot class&#x27; native method, and so wouldn&#x27;t look for the class</span><br><span class="line">         * we&#x27;re trying to look up in CLASSPATH. Unfortunately it needs to,</span><br><span class="line">         * because the &quot;am&quot; classes are not boot classes.</span><br><span class="line">         *</span><br><span class="line">         * The easiest fix is to call FindClass here, early on before we start</span><br><span class="line">         * executing boot class Java code and thereby deny ourselves access to</span><br><span class="line">         * non-boot classes.</span><br><span class="line">         */</span><br><span class="line">        char* slashClassName = toSlashClassName(mClassName.string());</span><br><span class="line">        mClass = env-&gt;FindClass(slashClassName);</span><br><span class="line">        if (mClass == NULL) &#123;</span><br><span class="line">            ALOGE(&quot;ERROR: could not find class &#x27;%s&#x27;\n&quot;, mClassName.string());</span><br><span class="line">        &#125;</span><br><span class="line">        free(slashClassName);</span><br><span class="line"></span><br><span class="line">        mClass = reinterpret_cast&lt;jclass&gt;(env-&gt;NewGlobalRef(mClass));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual void onStarted()</span><br><span class="line">    &#123;</span><br><span class="line">        sp&lt;ProcessState&gt; proc = ProcessState::self();</span><br><span class="line">        ALOGV(&quot;App process: starting thread pool.\n&quot;);</span><br><span class="line">        proc-&gt;startThreadPool();</span><br><span class="line"></span><br><span class="line">        AndroidRuntime* ar = AndroidRuntime::getRuntime();</span><br><span class="line">        ar-&gt;callMain(mClassName, mClass, mArgs);</span><br><span class="line"></span><br><span class="line">        IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">        hardware::IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual void onZygoteInit()</span><br><span class="line">    &#123;</span><br><span class="line">        sp&lt;ProcessState&gt; proc = ProcessState::self();</span><br><span class="line">        ALOGV(&quot;App process: starting thread pool.\n&quot;);</span><br><span class="line">        proc-&gt;startThreadPool();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual void onExit(int code)</span><br><span class="line">    &#123;</span><br><span class="line">        if (mClassName.isEmpty()) &#123;</span><br><span class="line">            // if zygote</span><br><span class="line">            IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">            hardware::IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        AndroidRuntime::onExit(code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String8 mClassName;</span><br><span class="line">    Vector&lt;String8&gt; mArgs;</span><br><span class="line">    jclass mClass;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>什么是Runtime?</p><ul><li>Runtime是支撑程序运行的基础库，它与语言绑定在一起。</li><li>C Runtime:就是C standard lib也就是常说的libc(有趣的是Wiki自动将“C runtime”重定向到”C Standard Library)</li><li>Java Runtime: 同样，Wiki将其重定向到“Java Virtual Machine”，这里当然包括Java的支撑类库</li><li>AndroidRuntime:显而易见，就是为Android应用运行所需的运行时环境。这个环境包括一下东西。<ul><li>Dalvik VM:Android 的Java VM,解释运行Dex格式Java程序。每个进程运行一个虚拟机(什么叫运行虚拟机？就是一些C代码，不停的去解释Dex格式的二进制码(Bytecode)，把他们转换称机器码Machine code,现在大多数java虚拟机都支持JIT，bytecode可能在运行前就已经被转换成机器码，从而大大提高了性能。在某些情况下，Java甚至可以比C&#x2F;C++跑得更快，同时又兼具平台无关的特性)。</li><li>Android的Java类库，大部分来自于Apache Hamony,开源的Java API实现，如java.lang,java.util,java.net,但去除了AWT,Swing等部件</li><li>JNI: C和Java互调的接口</li><li>Libc: Android也有很多C代码，自然少不了libc,注意的是，Android的libc叫bionic C.</li></ul></li></ul></li><li><p>frameworks&#x2F;base&#x2F;core&#x2F;jni&#x2F;AndroidRuntime.cpp</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Line 1175</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Start the Android runtime.  This involves starting the virtual machine</span></span><br><span class="line"><span class="comment"> * and calling the &quot;static void main(String[] args)&quot; method in the class</span></span><br><span class="line"><span class="comment"> * named by &quot;className&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Passes the main function two arguments, the class name and the specified</span></span><br><span class="line"><span class="comment"> * options string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AndroidRuntime::start</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* className, <span class="type">const</span> Vector&lt;String8&gt;&amp; options, <span class="type">bool</span> zygote)</span></span><br><span class="line">&#123;</span><br><span class="line">    ALOGD(<span class="string">&quot;&gt;&gt;&gt;&gt;&gt;&gt; START %s uid %d &lt;&lt;&lt;&lt;&lt;&lt;\n&quot;</span>,</span><br><span class="line">            className != <span class="literal">NULL</span> ? className : <span class="string">&quot;(unknown)&quot;</span>, getuid());</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> String8 <span class="title function_">startSystemServer</span><span class="params">(<span class="string">&quot;start-system-server&quot;</span>)</span>;</span><br><span class="line">    <span class="comment">// Whether this is the primary zygote, meaning the zygote which will fork system server.</span></span><br><span class="line">    <span class="type">bool</span> primary_zygote = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * &#x27;startSystemServer == true&#x27; means runtime is obsolete and not run from</span></span><br><span class="line"><span class="comment">     * init.rc anymore, so we print out the boot start event here.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; options.size(); ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (options[i] == startSystemServer) &#123;</span><br><span class="line">            primary_zygote = <span class="literal">true</span>;</span><br><span class="line">           <span class="comment">/* track our progress through the boot sequence */</span></span><br><span class="line">           <span class="type">const</span> <span class="type">int</span> LOG_BOOT_PROGRESS_START = <span class="number">3000</span>;</span><br><span class="line">           LOG_EVENT_LONG(LOG_BOOT_PROGRESS_START,  ns2ms(systemTime(SYSTEM_TIME_MONOTONIC)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* rootDir = getenv(<span class="string">&quot;ANDROID_ROOT&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (rootDir == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        rootDir = <span class="string">&quot;/system&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!hasDir(<span class="string">&quot;/system&quot;</span>)) &#123;</span><br><span class="line">            LOG_FATAL(<span class="string">&quot;No root directory specified, and /system does not exist.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        setenv(<span class="string">&quot;ANDROID_ROOT&quot;</span>, rootDir, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* artRootDir = getenv(<span class="string">&quot;ANDROID_ART_ROOT&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (artRootDir == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        LOG_FATAL(<span class="string">&quot;No ART directory specified with ANDROID_ART_ROOT environment variable.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* i18nRootDir = getenv(<span class="string">&quot;ANDROID_I18N_ROOT&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (i18nRootDir == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        LOG_FATAL(<span class="string">&quot;No runtime directory specified with ANDROID_I18N_ROOT environment variable.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* tzdataRootDir = getenv(<span class="string">&quot;ANDROID_TZDATA_ROOT&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (tzdataRootDir == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        LOG_FATAL(<span class="string">&quot;No tz data directory specified with ANDROID_TZDATA_ROOT environment variable.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//const char* kernelHack = getenv(&quot;LD_ASSUME_KERNEL&quot;);</span></span><br><span class="line">    <span class="comment">//ALOGD(&quot;Found LD_ASSUME_KERNEL=&#x27;%s&#x27;\n&quot;, kernelHack);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* start the virtual machine */</span></span><br><span class="line">    JniInvocation jni_invocation;</span><br><span class="line">    jni_invocation.Init(<span class="literal">NULL</span>);</span><br><span class="line">    JNIEnv* env;</span><br><span class="line">    <span class="keyword">if</span> (startVm(&amp;mJavaVM, &amp;env, zygote, primary_zygote) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    onVmCreated(env);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Register android functions.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (startReg(env) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ALOGE(<span class="string">&quot;Unable to register all android natives\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * We want to call main() with a String array with arguments in it.</span></span><br><span class="line"><span class="comment">     * At present we have two arguments, the class name and an option string.</span></span><br><span class="line"><span class="comment">     * Create an array to hold them.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    jclass stringClass;</span><br><span class="line">    jobjectArray strArray;</span><br><span class="line">    jstring classNameStr;</span><br><span class="line"></span><br><span class="line">    stringClass = env-&gt;FindClass(<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">    assert(stringClass != <span class="literal">NULL</span>);</span><br><span class="line">    strArray = env-&gt;NewObjectArray(options.size() + <span class="number">1</span>, stringClass, <span class="literal">NULL</span>);</span><br><span class="line">    assert(strArray != <span class="literal">NULL</span>);</span><br><span class="line">    classNameStr = env-&gt;NewStringUTF(className);</span><br><span class="line">    assert(classNameStr != <span class="literal">NULL</span>);</span><br><span class="line">    env-&gt;SetObjectArrayElement(strArray, <span class="number">0</span>, classNameStr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; options.size(); ++i) &#123;</span><br><span class="line">        jstring optionsStr = env-&gt;NewStringUTF(options.itemAt(i).<span class="built_in">string</span>());</span><br><span class="line">        assert(optionsStr != <span class="literal">NULL</span>);</span><br><span class="line">        env-&gt;SetObjectArrayElement(strArray, i + <span class="number">1</span>, optionsStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Start VM.  This thread becomes the main thread of the VM, and will</span></span><br><span class="line"><span class="comment">     * not return until the VM exits.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">char</span>* slashClassName = toSlashClassName(className != <span class="literal">NULL</span> ? className : <span class="string">&quot;&quot;</span>);</span><br><span class="line">    jclass startClass = env-&gt;FindClass(slashClassName);</span><br><span class="line">    <span class="keyword">if</span> (startClass == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        ALOGE(<span class="string">&quot;JavaVM unable to locate class &#x27;%s&#x27;\n&quot;</span>, slashClassName);</span><br><span class="line">        <span class="comment">/* keep going */</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        jmethodID startMeth = env-&gt;GetStaticMethodID(startClass, <span class="string">&quot;main&quot;</span>,</span><br><span class="line">            <span class="string">&quot;([Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (startMeth == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            ALOGE(<span class="string">&quot;JavaVM unable to find main() in &#x27;%s&#x27;\n&quot;</span>, className);</span><br><span class="line">            <span class="comment">/* keep going */</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            env-&gt;CallStaticVoidMethod(startClass, startMeth, strArray);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line">            <span class="keyword">if</span> (env-&gt;ExceptionCheck())</span><br><span class="line">                threadExitUncaughtException(env);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(slashClassName);</span><br><span class="line"></span><br><span class="line">    ALOGD(<span class="string">&quot;Shutting down VM\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mJavaVM-&gt;DetachCurrentThread() != JNI_OK)</span><br><span class="line">        ALOGW(<span class="string">&quot;Warning: unable to detach main thread\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (mJavaVM-&gt;DestroyJavaVM() != <span class="number">0</span>)</span><br><span class="line">        ALOGW(<span class="string">&quot;Warning: VM did not shut down cleanly\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Java虚拟机的启动大致做了如下事情</li></ul><ol><li><p>从property读取一系列启动参数</p></li><li><p>创建和初始化结构体全局对象(每个进程)gDVM,及对应与JavaVM和JNIEnv的内部结构体JavaVMExt,JNIEnvExt</p></li><li><p>初始化java虚拟机，并创建虚拟机线程</p></li><li><p>注册系统的JNI,Java程序通过这些JNI接口来访问底层的资源。</p><ul><li>loadJniLibrary(“javacode”); loadJniLibrary(“nativehelper”);</li></ul></li><li><p>为Zygote的启动做最后的准备，包括设置SID&#x2F;UID,以及mount 文件系统</p></li><li><p>返回JavaVM给Native代码，这样它就可以向上访问Java的接口</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 634</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">AndroidRuntime::startVm</span><span class="params">(JavaVM** pJavaVM, JNIEnv** pEnv, <span class="type">bool</span> zygote, <span class="type">bool</span> primary_zygote)</span></span><br><span class="line">&#123;</span><br><span class="line">    JavaVMInitArgs initArgs;</span><br><span class="line">    <span class="type">char</span> propBuf[PROPERTY_VALUE_MAX];</span><br><span class="line">    <span class="type">char</span> jniOptsBuf[<span class="keyword">sizeof</span>(<span class="string">&quot;-Xjniopts:&quot;</span>)<span class="number">-1</span> + PROPERTY_VALUE_MAX];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//more....</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Initialize the VM.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The JavaVM* is essentially per-process, and the JNIEnv* is per-thread.</span></span><br><span class="line"><span class="comment">     * If this call succeeds, the VM is ready, and we can start issuing</span></span><br><span class="line"><span class="comment">     * JNI calls.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="comment">//startVM的前半部分是在处理虚拟机的启动参数，处理完配置参数后，会调用libart.so提供的一个接口JNI_CreateJavaVM函数</span></span><br><span class="line">    <span class="keyword">if</span> (JNI_CreateJavaVM(pJavaVM, pEnv, &amp;initArgs) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ALOGE(<span class="string">&quot;JNI_CreateJavaVM failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>art&#x2F;runtime&#x2F;jni&#x2F;java_vm_ext.cc</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> jint <span class="title function_">JNI_CreateJavaVM</span><span class="params">(JavaVM** p_vm, JNIEnv** p_env, <span class="type">void</span>* vm_args)</span> &#123;</span><br><span class="line">  ScopedTrace <span class="title function_">trace</span><span class="params">(__FUNCTION__)</span>;</span><br><span class="line">  <span class="type">const</span> JavaVMInitArgs* args = static_cast&lt;JavaVMInitArgs*&gt;(vm_args);</span><br><span class="line">  <span class="keyword">if</span> (JavaVMExt::IsBadJniVersion(args-&gt;version)) &#123;</span><br><span class="line">    LOG(ERROR) &lt;&lt; <span class="string">&quot;Bad JNI version passed to CreateJavaVM: &quot;</span> &lt;&lt; args-&gt;version;</span><br><span class="line">    <span class="keyword">return</span> JNI_EVERSION;</span><br><span class="line">  &#125;</span><br><span class="line">  RuntimeOptions options;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; args-&gt;nOptions; ++i) &#123;</span><br><span class="line">    JavaVMOption* option = &amp;args-&gt;options[i];</span><br><span class="line">    options.push_back(<span class="built_in">std</span>::<span class="built_in">make_pair</span>(<span class="built_in">std</span>::<span class="built_in">string</span>(option-&gt;optionString), option-&gt;extraInfo));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">bool</span> ignore_unrecognized = args-&gt;ignoreUnrecognized;</span><br><span class="line">  <span class="comment">//通过Runtime的create方法创建单例的Runtime对象</span></span><br><span class="line">  <span class="keyword">if</span> (!Runtime::Create(options, ignore_unrecognized)) &#123;</span><br><span class="line">    <span class="keyword">return</span> JNI_ERR;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// When `ART_CRASH_RUNTIME_DELIBERATELY` is defined (which happens only in the</span></span><br><span class="line">  <span class="comment">// case of a test APEX), we crash the runtime here on purpose, to test the</span></span><br><span class="line">  <span class="comment">// behavior of rollbacks following a failed ART Mainline Module update.</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ART_CRASH_RUNTIME_DELIBERATELY</span></span><br><span class="line">  LOG(FATAL) &lt;&lt; <span class="string">&quot;Runtime crashing deliberately for testing purposes.&quot;</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Initialize native loader. This step makes sure we have</span></span><br><span class="line">  <span class="comment">// everything set up before we start using JNI.</span></span><br><span class="line">  android::InitializeNativeLoader();</span><br><span class="line"></span><br><span class="line">  Runtime* runtime = Runtime::Current();</span><br><span class="line">  <span class="type">bool</span> started = runtime-&gt;Start();</span><br><span class="line">  <span class="keyword">if</span> (!started) &#123;</span><br><span class="line">    delete <span class="title function_">Thread::Current</span><span class="params">()</span>-&gt;<span class="title function_">GetJniEnv</span><span class="params">()</span>;</span><br><span class="line">    delete runtime-&gt;GetJavaVM();</span><br><span class="line">    LOG(WARNING) &lt;&lt; <span class="string">&quot;CreateJavaVM failed&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> JNI_ERR;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  *p_env = Thread::Current()-&gt;GetJniEnv();</span><br><span class="line">  *p_vm = runtime-&gt;GetJavaVM();</span><br><span class="line">  <span class="keyword">return</span> JNI_OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;首先通过Runtime的create方法创建单例的Runtime对象，runtime负责提供art虚拟机的运行时环境，然后调用其init方法来初始化虚拟机</p><ul><li>art&#x2F;runtime&#x2F;runtime.cc</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">Runtime::Init</span><span class="params">(RuntimeArgumentMap&amp;&amp; runtime_options_in)</span> &#123;</span><br><span class="line">  <span class="comment">//more ....</span></span><br><span class="line">  <span class="comment">//创建堆管理对象</span></span><br><span class="line">  heap_ = new gc::Heap(runtime_options.GetOrDefault(Opt::MemoryInitialSize),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::HeapGrowthLimit),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::HeapMinFree),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::HeapMaxFree),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::HeapTargetUtilization),</span><br><span class="line">                       foreground_heap_growth_multiplier,</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::StopForNativeAllocs),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::MemoryMaximumSize),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::NonMovingSpaceCapacity),</span><br><span class="line">                       GetBootClassPath(),</span><br><span class="line">                       GetBootClassPathLocations(),</span><br><span class="line">                       GetBootClassPathFds(),</span><br><span class="line">                       GetBootClassPathImageFds(),</span><br><span class="line">                       GetBootClassPathVdexFds(),</span><br><span class="line">                       GetBootClassPathOatFds(),</span><br><span class="line">                       image_locations_,</span><br><span class="line">                       instruction_set_,</span><br><span class="line">                       <span class="comment">// Override the collector type to CC if the read barrier config.</span></span><br><span class="line">                       gUseReadBarrier ? gc::kCollectorTypeCC : xgc_option.collector_type_,</span><br><span class="line">                       background_gc,</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::LargeObjectSpace),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::LargeObjectThreshold),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::ParallelGCThreads),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::ConcGCThreads),</span><br><span class="line">                       runtime_options.Exists(Opt::LowMemoryMode),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::LongPauseLogThreshold),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::LongGCLogThreshold),</span><br><span class="line">                       runtime_options.Exists(Opt::IgnoreMaxFootprint),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::AlwaysLogExplicitGcs),</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::UseTLAB),</span><br><span class="line">                       xgc_option.verify_pre_gc_heap_,</span><br><span class="line">                       xgc_option.verify_pre_sweeping_heap_,</span><br><span class="line">                       xgc_option.verify_post_gc_heap_,</span><br><span class="line">                       xgc_option.verify_pre_gc_rosalloc_,</span><br><span class="line">                       xgc_option.verify_pre_sweeping_rosalloc_,</span><br><span class="line">                       xgc_option.verify_post_gc_rosalloc_,</span><br><span class="line">                       xgc_option.gcstress_,</span><br><span class="line">                       xgc_option.measure_,</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::EnableHSpaceCompactForOOM),</span><br><span class="line">                       use_generational_cc,</span><br><span class="line">                       runtime_options.GetOrDefault(Opt::HSpaceCompactForOOMMinIntervalsMs),</span><br><span class="line">                       runtime_options.Exists(Opt::DumpRegionInfoBeforeGC),</span><br><span class="line">                       runtime_options.Exists(Opt::DumpRegionInfoAfterGC));</span><br><span class="line"></span><br><span class="line">  <span class="comment">//more ....</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//创建java虚拟机对象</span></span><br><span class="line">  java_vm_ = JavaVMExt::Create(this, runtime_options, &amp;error_msg);</span><br><span class="line">  <span class="keyword">if</span> (java_vm_.get() == nullptr) &#123;</span><br><span class="line">    LOG(ERROR) &lt;&lt; <span class="string">&quot;Could not initialize JavaVMExt: &quot;</span> &lt;&lt; error_msg;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add the JniEnv handler.</span></span><br><span class="line">  <span class="comment">// TODO Refactor this stuff.</span></span><br><span class="line">  java_vm_-&gt;AddEnvironmentHook(JNIEnvExt::GetEnvHandler);</span><br><span class="line"></span><br><span class="line">  Thread::Startup();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ClassLinker needs an attached thread, but we can&#x27;t fully attach a thread without creating</span></span><br><span class="line">  <span class="comment">// objects. We can&#x27;t supply a thread group yet; it will be fixed later. Since we are the main</span></span><br><span class="line">  <span class="comment">// thread, we do not get a java peer.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//连接主线程</span></span><br><span class="line">  Thread* self = Thread::Attach(<span class="string">&quot;main&quot;</span>, <span class="literal">false</span>, nullptr, <span class="literal">false</span>, <span class="comment">/* should_run_callbacks= */</span> <span class="literal">true</span>);</span><br><span class="line">  CHECK_EQ(self-&gt;GetThreadId(), ThreadList::kMainThreadId);</span><br><span class="line">  CHECK(self != nullptr);</span><br><span class="line"></span><br><span class="line">  self-&gt;SetIsRuntimeThread(IsAotCompiler());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Set us to runnable so tools using a runtime can allocate and GC by default</span></span><br><span class="line">  self-&gt;TransitionFromSuspendedToRunnable();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Now we&#x27;re attached, we can take the heap locks and validate the heap.</span></span><br><span class="line">  GetHeap()-&gt;EnableObjectValidation();</span><br><span class="line"></span><br><span class="line">  CHECK_GE(GetHeap()-&gt;GetContinuousSpaces().size(), <span class="number">1U</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//创建类连接器</span></span><br><span class="line">  <span class="keyword">if</span> (UNLIKELY(IsAotCompiler())) &#123;</span><br><span class="line">    class_linker_ = new AotClassLinker(intern_table_);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    class_linker_ = new ClassLinker(</span><br><span class="line">        intern_table_,</span><br><span class="line">        runtime_options.GetOrDefault(Opt::FastClassNotFoundException));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (GetHeap()-&gt;HasBootImageSpace()) &#123;</span><br><span class="line">    <span class="comment">//初始化类连接器</span></span><br><span class="line">    <span class="type">bool</span> result = class_linker_-&gt;InitFromBootImage(&amp;error_msg);</span><br><span class="line">    <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">      LOG(ERROR) &lt;&lt; <span class="string">&quot;Could not initialize from image: &quot;</span> &lt;&lt; error_msg;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (kIsDebugBuild) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">auto</span> image_space : GetHeap()-&gt;GetBootImageSpaces()) &#123;</span><br><span class="line">        image_space-&gt;VerifyImageAllocations();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">      ScopedTrace <span class="title function_">trace2</span><span class="params">(<span class="string">&quot;AddImageStringsToTable&quot;</span>)</span>;</span><br><span class="line">      <span class="keyword">for</span> (gc::space::ImageSpace* image_space : heap_-&gt;GetBootImageSpaces()) &#123;</span><br><span class="line">        GetInternTable()-&gt;AddImageStringsToTable(image_space, VoidFunctor());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> total_components = gc::space::ImageSpace::GetNumberOfComponents(</span><br><span class="line">        ArrayRef&lt;gc::space::ImageSpace* <span class="type">const</span>&gt;(heap_-&gt;GetBootImageSpaces()));</span><br><span class="line">    <span class="keyword">if</span> (total_components != GetBootClassPath().size()) &#123;</span><br><span class="line">      <span class="comment">// The boot image did not contain all boot class path components. Load the rest.</span></span><br><span class="line">      CHECK_LT(total_components, GetBootClassPath().size());</span><br><span class="line">      <span class="type">size_t</span> start = total_components;</span><br><span class="line">      DCHECK_LT(start, GetBootClassPath().size());</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;<span class="type">const</span> DexFile&gt;&gt; extra_boot_class_path;</span><br><span class="line">      <span class="keyword">if</span> (runtime_options.Exists(Opt::BootClassPathDexList)) &#123;</span><br><span class="line">        extra_boot_class_path.swap(*runtime_options.GetOrDefault(Opt::BootClassPathDexList));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ArrayRef&lt;<span class="type">const</span> <span class="type">int</span>&gt; bcp_fds = start &lt; GetBootClassPathFds().size()</span><br><span class="line">            ? ArrayRef&lt;<span class="type">const</span> <span class="type">int</span>&gt;(GetBootClassPathFds()).SubArray(start)</span><br><span class="line">            : ArrayRef&lt;<span class="type">const</span> <span class="type">int</span>&gt;();</span><br><span class="line">        OpenBootDexFiles(ArrayRef&lt;<span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&gt;(GetBootClassPath()).SubArray(start),</span><br><span class="line">                         ArrayRef&lt;<span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&gt;(GetBootClassPathLocations()).SubArray(start),</span><br><span class="line">                         bcp_fds,</span><br><span class="line">                         &amp;extra_boot_class_path);</span><br><span class="line">      &#125;</span><br><span class="line">      class_linker_-&gt;AddExtraBootDexFiles(self, <span class="built_in">std</span>::move(extra_boot_class_path));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (IsJavaDebuggable() || jit_options_-&gt;GetProfileSaverOptions().GetProfileBootClassPath()) &#123;</span><br><span class="line">      <span class="comment">// Deoptimize the boot image if debuggable  as the code may have been compiled non-debuggable.</span></span><br><span class="line">      <span class="comment">// Also deoptimize if we are profiling the boot class path.</span></span><br><span class="line">      ScopedThreadSuspension <span class="title function_">sts</span><span class="params">(self, ThreadState::kNative)</span>;</span><br><span class="line">      ScopedSuspendAll <span class="title function_">ssa</span><span class="params">(__FUNCTION__)</span>;</span><br><span class="line">      DeoptimizeBootImage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;<span class="type">const</span> DexFile&gt;&gt; boot_class_path;</span><br><span class="line">    <span class="keyword">if</span> (runtime_options.Exists(Opt::BootClassPathDexList)) &#123;</span><br><span class="line">      boot_class_path.swap(*runtime_options.GetOrDefault(Opt::BootClassPathDexList));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      OpenBootDexFiles(ArrayRef&lt;<span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&gt;(GetBootClassPath()),</span><br><span class="line">                       ArrayRef&lt;<span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&gt;(GetBootClassPathLocations()),</span><br><span class="line">                       ArrayRef&lt;<span class="type">const</span> <span class="type">int</span>&gt;(GetBootClassPathFds()),</span><br><span class="line">                       &amp;boot_class_path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!class_linker_-&gt;InitWithoutImage(<span class="built_in">std</span>::move(boot_class_path), &amp;error_msg)) &#123;</span><br><span class="line">      LOG(ERROR) &lt;&lt; <span class="string">&quot;Could not initialize without image: &quot;</span> &lt;&lt; error_msg;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Should we move the following to InitWithoutImage?</span></span><br><span class="line">    SetInstructionSet(instruction_set_);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">uint32_t</span> i = <span class="number">0</span>; i &lt; kCalleeSaveSize; i++) &#123;</span><br><span class="line">      CalleeSaveType type = CalleeSaveType(i);</span><br><span class="line">      <span class="keyword">if</span> (!HasCalleeSaveMethod(type)) &#123;</span><br><span class="line">        SetCalleeSaveMethod(CreateCalleeSaveMethod(), type);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Now that the boot image space is set, cache the boot classpath checksums,</span></span><br><span class="line">  <span class="comment">// to be used when validating oat files.</span></span><br><span class="line">  ArrayRef&lt;gc::space::ImageSpace* <span class="type">const</span>&gt; <span class="title function_">image_spaces</span><span class="params">(GetHeap()-&gt;GetBootImageSpaces())</span>;</span><br><span class="line">  ArrayRef&lt;<span class="type">const</span> DexFile* <span class="type">const</span>&gt; <span class="title function_">bcp_dex_files</span><span class="params">(GetClassLinker()-&gt;GetBootClassPath())</span>;</span><br><span class="line">  boot_class_path_checksums_ = gc::space::ImageSpace::GetBootClassPathChecksums(image_spaces,</span><br><span class="line">                                                                                bcp_dex_files);</span><br><span class="line"></span><br><span class="line">  CHECK(class_linker_ != nullptr);</span><br><span class="line"></span><br><span class="line">  verifier::ClassVerifier::Init(class_linker_);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (runtime_options.Exists(Opt::MethodTrace)) &#123;</span><br><span class="line">    trace_config_.reset(new TraceConfig());</span><br><span class="line">    trace_config_-&gt;trace_file = runtime_options.ReleaseOrDefault(Opt::MethodTraceFile);</span><br><span class="line">    trace_config_-&gt;trace_file_size = runtime_options.ReleaseOrDefault(Opt::MethodTraceFileSize);</span><br><span class="line">    trace_config_-&gt;trace_mode = Trace::TraceMode::kMethodTracing;</span><br><span class="line">    trace_config_-&gt;trace_output_mode = runtime_options.Exists(Opt::MethodTraceStreaming) ?</span><br><span class="line">        Trace::TraceOutputMode::kStreaming :</span><br><span class="line">        Trace::TraceOutputMode::kFile;</span><br><span class="line">    trace_config_-&gt;clock_source = runtime_options.GetOrDefault(Opt::MethodTraceClock);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> Remove this in a follow up CL. This isn&#x27;t used anywhere.</span></span><br><span class="line">  Trace::SetDefaultClockSource(runtime_options.GetOrDefault(Opt::ProfileClock));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (GetHeap()-&gt;HasBootImageSpace()) &#123;</span><br><span class="line">    <span class="type">const</span> ImageHeader&amp; image_header = GetHeap()-&gt;GetBootImageSpaces()[<span class="number">0</span>]-&gt;GetImageHeader();</span><br><span class="line">    ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt; boot_image_live_objects =</span><br><span class="line">        ObjPtr&lt;mirror::ObjectArray&lt;mirror::Object&gt;&gt;::DownCast(</span><br><span class="line">            image_header.GetImageRoot(ImageHeader::kBootImageLiveObjects));</span><br><span class="line">    pre_allocated_OutOfMemoryError_when_throwing_exception_ = GcRoot&lt;mirror::Throwable&gt;(</span><br><span class="line">        boot_image_live_objects-&gt;Get(ImageHeader::kOomeWhenThrowingException)-&gt;AsThrowable());</span><br><span class="line">    DCHECK(pre_allocated_OutOfMemoryError_when_throwing_exception_.Read()-&gt;GetClass()</span><br><span class="line">               -&gt;DescriptorEquals(<span class="string">&quot;Ljava/lang/OutOfMemoryError;&quot;</span>));</span><br><span class="line">    pre_allocated_OutOfMemoryError_when_throwing_oome_ = GcRoot&lt;mirror::Throwable&gt;(</span><br><span class="line">        boot_image_live_objects-&gt;Get(ImageHeader::kOomeWhenThrowingOome)-&gt;AsThrowable());</span><br><span class="line">    DCHECK(pre_allocated_OutOfMemoryError_when_throwing_oome_.Read()-&gt;GetClass()</span><br><span class="line">               -&gt;DescriptorEquals(<span class="string">&quot;Ljava/lang/OutOfMemoryError;&quot;</span>));</span><br><span class="line">    pre_allocated_OutOfMemoryError_when_handling_stack_overflow_ = GcRoot&lt;mirror::Throwable&gt;(</span><br><span class="line">        boot_image_live_objects-&gt;Get(ImageHeader::kOomeWhenHandlingStackOverflow)-&gt;AsThrowable());</span><br><span class="line">    DCHECK(pre_allocated_OutOfMemoryError_when_handling_stack_overflow_.Read()-&gt;GetClass()</span><br><span class="line">               -&gt;DescriptorEquals(<span class="string">&quot;Ljava/lang/OutOfMemoryError;&quot;</span>));</span><br><span class="line">    pre_allocated_NoClassDefFoundError_ = GcRoot&lt;mirror::Throwable&gt;(</span><br><span class="line">        boot_image_live_objects-&gt;Get(ImageHeader::kNoClassDefFoundError)-&gt;AsThrowable());</span><br><span class="line">    DCHECK(pre_allocated_NoClassDefFoundError_.Read()-&gt;GetClass()</span><br><span class="line">               -&gt;DescriptorEquals(<span class="string">&quot;Ljava/lang/NoClassDefFoundError;&quot;</span>));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// Pre-allocate an OutOfMemoryError for the case when we fail to</span></span><br><span class="line">    <span class="comment">// allocate the exception to be thrown.</span></span><br><span class="line">    CreatePreAllocatedException(self,</span><br><span class="line">                                this,</span><br><span class="line">                                &amp;pre_allocated_OutOfMemoryError_when_throwing_exception_,</span><br><span class="line">                                <span class="string">&quot;Ljava/lang/OutOfMemoryError;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;OutOfMemoryError thrown while trying to throw an exception; &quot;</span></span><br><span class="line">                                    <span class="string">&quot;no stack trace available&quot;</span>);</span><br><span class="line">    <span class="comment">// Pre-allocate an OutOfMemoryError for the double-OOME case.</span></span><br><span class="line">    CreatePreAllocatedException(self,</span><br><span class="line">                                this,</span><br><span class="line">                                &amp;pre_allocated_OutOfMemoryError_when_throwing_oome_,</span><br><span class="line">                                <span class="string">&quot;Ljava/lang/OutOfMemoryError;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;OutOfMemoryError thrown while trying to throw OutOfMemoryError; &quot;</span></span><br><span class="line">                                    <span class="string">&quot;no stack trace available&quot;</span>);</span><br><span class="line">    <span class="comment">// Pre-allocate an OutOfMemoryError for the case when we fail to</span></span><br><span class="line">    <span class="comment">// allocate while handling a stack overflow.</span></span><br><span class="line">    CreatePreAllocatedException(self,</span><br><span class="line">                                this,</span><br><span class="line">                                &amp;pre_allocated_OutOfMemoryError_when_handling_stack_overflow_,</span><br><span class="line">                                <span class="string">&quot;Ljava/lang/OutOfMemoryError;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;OutOfMemoryError thrown while trying to handle a stack overflow; &quot;</span></span><br><span class="line">                                    <span class="string">&quot;no stack trace available&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Pre-allocate a NoClassDefFoundError for the common case of failing to find a system class</span></span><br><span class="line">    <span class="comment">// ahead of checking the application&#x27;s class loader.</span></span><br><span class="line">    CreatePreAllocatedException(self,</span><br><span class="line">                                this,</span><br><span class="line">                                &amp;pre_allocated_NoClassDefFoundError_,</span><br><span class="line">                                <span class="string">&quot;Ljava/lang/NoClassDefFoundError;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;Class not found using the boot class loader; &quot;</span></span><br><span class="line">                                    <span class="string">&quot;no stack trace available&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Class-roots are setup, we can now finish initializing the JniIdManager.</span></span><br><span class="line">  GetJniIdManager()-&gt;Init(self);</span><br><span class="line"></span><br><span class="line">  InitMetrics();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Runtime initialization is largely done now.</span></span><br><span class="line">  <span class="comment">// We load plugins first since that can modify the runtime state slightly.</span></span><br><span class="line">  <span class="comment">// Load all plugins</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// The init method of plugins expect the state of the thread to be non runnable.</span></span><br><span class="line">    ScopedThreadSuspension <span class="title function_">sts</span><span class="params">(self, ThreadState::kNative)</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; plugin : plugins_) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">string</span> err;</span><br><span class="line">      <span class="keyword">if</span> (!plugin.Load(&amp;err)) &#123;</span><br><span class="line">        LOG(FATAL) &lt;&lt; plugin &lt;&lt; <span class="string">&quot; failed to load: &quot;</span> &lt;&lt; err;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>new gc::Heap(),创建Heap对象，这是虚拟机管理对内存的起点</li><li>new JavaVmExt()，创建Java虚拟机实例</li><li>Thread::attach(),attach主线程</li><li>创建ClassLinker </li><li>初始化Classlinker,成功attach到runtime环境后，创建ClassLinker实例负责管理java class</li></ol><ul><li>art&#x2F;runtime&#x2F;thread.cc</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 1009</span></span><br><span class="line">template &lt;typename PeerAction&gt;</span><br><span class="line">Thread* <span class="title function_">Thread::Attach</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* thread_name,</span></span><br><span class="line"><span class="params">                       <span class="type">bool</span> as_daemon,</span></span><br><span class="line"><span class="params">                       PeerAction peer_action,</span></span><br><span class="line"><span class="params">                       <span class="type">bool</span> should_run_callbacks)</span> &#123;</span><br><span class="line">  Runtime* runtime = Runtime::Current();</span><br><span class="line">  ScopedTrace <span class="title function_">trace</span><span class="params">(<span class="string">&quot;Thread::Attach&quot;</span>)</span>;</span><br><span class="line">  <span class="keyword">if</span> (runtime == nullptr) &#123;</span><br><span class="line">    LOG(ERROR) &lt;&lt; <span class="string">&quot;Thread attaching to non-existent runtime: &quot;</span> &lt;&lt;</span><br><span class="line">        ((thread_name != nullptr) ? thread_name : <span class="string">&quot;(Unnamed)&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> nullptr;</span><br><span class="line">  &#125;</span><br><span class="line">  Thread* self;</span><br><span class="line">  &#123;</span><br><span class="line">    ScopedTrace <span class="title function_">trace2</span><span class="params">(<span class="string">&quot;Thread birth&quot;</span>)</span>;</span><br><span class="line">    MutexLock <span class="title function_">mu</span><span class="params">(nullptr, *Locks::runtime_shutdown_lock_)</span>;</span><br><span class="line">    <span class="keyword">if</span> (runtime-&gt;IsShuttingDownLocked()) &#123;</span><br><span class="line">      LOG(WARNING) &lt;&lt; <span class="string">&quot;Thread attaching while runtime is shutting down: &quot;</span> &lt;&lt;</span><br><span class="line">          ((thread_name != nullptr) ? thread_name : <span class="string">&quot;(Unnamed)&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> nullptr;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Runtime::Current()-&gt;StartThreadBirth();</span><br><span class="line">      self = new Thread(as_daemon);</span><br><span class="line">      <span class="type">bool</span> init_success = self-&gt;Init(runtime-&gt;GetThreadList(), runtime-&gt;GetJavaVM());</span><br><span class="line">      Runtime::Current()-&gt;EndThreadBirth();</span><br><span class="line">      <span class="keyword">if</span> (!init_success) &#123;</span><br><span class="line">        delete self;</span><br><span class="line">        <span class="keyword">return</span> nullptr;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  self-&gt;InitStringEntryPoints();</span><br><span class="line"></span><br><span class="line">  CHECK_NE(self-&gt;GetState(), ThreadState::kRunnable);</span><br><span class="line">  self-&gt;SetState(ThreadState::kNative);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Run the action that is acting on the peer.</span></span><br><span class="line">  <span class="keyword">if</span> (!peer_action(self)) &#123;</span><br><span class="line">    runtime-&gt;GetThreadList()-&gt;Unregister(self, should_run_callbacks);</span><br><span class="line">    <span class="comment">// Unregister deletes self, no need to do this here.</span></span><br><span class="line">    <span class="keyword">return</span> nullptr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (VLOG_IS_ON(threads)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (thread_name != nullptr) &#123;</span><br><span class="line">      VLOG(threads) &lt;&lt; <span class="string">&quot;Attaching thread &quot;</span> &lt;&lt; thread_name;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      VLOG(threads) &lt;&lt; <span class="string">&quot;Attaching unnamed thread.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ScopedObjectAccess <span class="title function_">soa</span><span class="params">(self)</span>;</span><br><span class="line">    self-&gt;Dump(LOG_STREAM(INFO));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (should_run_callbacks) &#123;</span><br><span class="line">    ScopedObjectAccess <span class="title function_">soa</span><span class="params">(self)</span>;</span><br><span class="line">    runtime-&gt;GetRuntimeCallbacks()-&gt;ThreadStart(self);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> self;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;除了系统的JNI接口(“javacore”,”nativehelper”),android framework还有大量的Native实现，Android将所有这些接口一次性通过startReg()来完成</p><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;jni&#x2F;AndroidRuntime.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Register android native functions with the VM.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*static*/</span> <span class="type">int</span> <span class="title function_">AndroidRuntime::startReg</span><span class="params">(JNIEnv* env)</span></span><br><span class="line">&#123;</span><br><span class="line">    ATRACE_NAME(<span class="string">&quot;RegisterAndroidNatives&quot;</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * This hook causes all future threads created in this process to be</span></span><br><span class="line"><span class="comment">     * attached to the JavaVM.  (This needs to go away in favor of JNI</span></span><br><span class="line"><span class="comment">     * Attach calls.)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    androidSetCreateThreadFunc((android_create_thread_fn) javaCreateThreadEtc);</span><br><span class="line"></span><br><span class="line">    ALOGV(<span class="string">&quot;--- registering native functions ---\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Every &quot;register&quot; function calls one or more things that return</span></span><br><span class="line"><span class="comment">     * a local reference (e.g. FindClass).  Because we haven&#x27;t really</span></span><br><span class="line"><span class="comment">     * started the VM yet, they&#x27;re all getting stored in the base frame</span></span><br><span class="line"><span class="comment">     * and never released.  Use Push/Pop to manage the storage.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    env-&gt;PushLocalFrame(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (register_jni_procs(gRegJNI, NELEM(gRegJNI), env) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        env-&gt;PopLocalFrame(<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    env-&gt;PopLocalFrame(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//createJavaThread(&quot;fubar&quot;, quickTest, (void*) &quot;hello&quot;);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>system&#x2F;core&#x2F;libutils&#x2F;Threads.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 658</span></span><br><span class="line"><span class="type">status_t</span> <span class="title function_">Thread::run</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* name, <span class="type">int32_t</span> priority, <span class="type">size_t</span> <span class="built_in">stack</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    LOG_ALWAYS_FATAL_IF(name == nullptr, <span class="string">&quot;thread name not provided to Thread::run&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Mutex::Autolock _l(mLock);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mRunning) &#123;</span><br><span class="line">        <span class="comment">// thread already started</span></span><br><span class="line">        <span class="keyword">return</span> INVALID_OPERATION;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// reset status and exitPending to their default value, so we can</span></span><br><span class="line">    <span class="comment">// try again after an error happened (either below, or in readyToRun())</span></span><br><span class="line">    mStatus = OK;</span><br><span class="line">    mExitPending = <span class="literal">false</span>;</span><br><span class="line">    mThread = <span class="type">thread_id_t</span>(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// hold a strong reference on ourself</span></span><br><span class="line">    mHoldSelf = sp&lt;Thread&gt;::fromExisting(this);</span><br><span class="line"></span><br><span class="line">    mRunning = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> res;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//android native层有两种Thread的创建方式</span></span><br><span class="line">    <span class="keyword">if</span> (mCanCallJava) &#123;</span><br><span class="line">        res = createThreadEtc(_threadLoop,</span><br><span class="line">                this, name, priority, <span class="built_in">stack</span>, &amp;mThread);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res = androidCreateRawThreadEtc(_threadLoop,</span><br><span class="line">                this, name, priority, <span class="built_in">stack</span>, &amp;mThread);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res == <span class="literal">false</span>) &#123;</span><br><span class="line">        mStatus = UNKNOWN_ERROR;   <span class="comment">// something happened!</span></span><br><span class="line">        mRunning = <span class="literal">false</span>;</span><br><span class="line">        mThread = <span class="type">thread_id_t</span>(<span class="number">-1</span>);</span><br><span class="line">        mHoldSelf.clear();  <span class="comment">// &quot;this&quot; may have gone away after this.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> UNKNOWN_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do not refer to mStatus here: The thread is already running (may, in fact</span></span><br><span class="line">    <span class="comment">// already have exited with a valid mStatus result). The OK indication</span></span><br><span class="line">    <span class="comment">// here merely indicates successfully starting the thread and does not</span></span><br><span class="line">    <span class="comment">// imply successful termination/execution.</span></span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Exiting scope of mLock is a memory barrier and allows new thread to run</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//line 117</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">androidCreateRawThreadEtc</span><span class="params">(<span class="type">android_thread_func_t</span> entryFunction,</span></span><br><span class="line"><span class="params">                               <span class="type">void</span> *userData,</span></span><br><span class="line"><span class="params">                               <span class="type">const</span> <span class="type">char</span>* threadName __android_unused,</span></span><br><span class="line"><span class="params">                               <span class="type">int32_t</span> threadPriority,</span></span><br><span class="line"><span class="params">                               <span class="type">size_t</span> threadStackSize,</span></span><br><span class="line"><span class="params">                               <span class="type">android_thread_id_t</span> *threadId)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pthread_attr_t</span> attr;</span><br><span class="line">    pthread_attr_init(&amp;attr);</span><br><span class="line">    pthread_attr_setdetachstate(&amp;attr, PTHREAD_CREATE_DETACHED);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(__ANDROID__)  <span class="comment">/* valgrind is rejecting RT-priority create reqs */</span></span></span><br><span class="line">    <span class="keyword">if</span> (threadPriority != PRIORITY_DEFAULT || threadName != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// Now that the pthread_t has a method to find the associated</span></span><br><span class="line">        <span class="comment">// android_thread_id_t (pid) from pthread_t, it would be possible to avoid</span></span><br><span class="line">        <span class="comment">// this trampoline in some cases as the parent could set the properties</span></span><br><span class="line">        <span class="comment">// for the child.  However, there would be a race condition because the</span></span><br><span class="line">        <span class="comment">// child becomes ready immediately, and it doesn&#x27;t work for the name.</span></span><br><span class="line">        <span class="comment">// prctl(PR_SET_NAME) only works for self; prctl(PR_SET_THREAD_NAME) was</span></span><br><span class="line">        <span class="comment">// proposed but not yet accepted.</span></span><br><span class="line">        <span class="type">thread_data_t</span>* t = new <span class="type">thread_data_t</span>;</span><br><span class="line">        t-&gt;priority = threadPriority;</span><br><span class="line">        t-&gt;threadName = threadName ? strdup(threadName) : <span class="literal">NULL</span>;</span><br><span class="line">        t-&gt;entryFunction = entryFunction;</span><br><span class="line">        t-&gt;userData = userData;</span><br><span class="line">        entryFunction = (<span class="type">android_thread_func_t</span>)&amp;<span class="type">thread_data_t</span>::trampoline;</span><br><span class="line">        userData = t;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (threadStackSize) &#123;</span><br><span class="line">        pthread_attr_setstacksize(&amp;attr, threadStackSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    errno = <span class="number">0</span>;</span><br><span class="line">    <span class="type">pthread_t</span> thread;</span><br><span class="line">    <span class="type">int</span> resulcreateJavaThreadt = pthread_create(&amp;thread, &amp;attr,</span><br><span class="line">                    (android_pthread_entry)entryFunction, userData);</span><br><span class="line">    pthread_attr_destroy(&amp;attr);</span><br><span class="line">    <span class="keyword">if</span> (result != <span class="number">0</span>) &#123;</span><br><span class="line">        ALOGE(<span class="string">&quot;androidCreateRawThreadEtc failed (entry=%p, res=%d, %s)\n&quot;</span></span><br><span class="line">             <span class="string">&quot;(android threadPriority=%d)&quot;</span>,</span><br><span class="line">            entryFunction, result, strerror(errno), threadPriority);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Note that *threadID is directly available to the parent only, as it is</span></span><br><span class="line">    <span class="comment">// assigned after the child starts.  Use memory barrier / lock if the child</span></span><br><span class="line">    <span class="comment">// or other threads also need access.</span></span><br><span class="line">    <span class="keyword">if</span> (threadId != nullptr) &#123;</span><br><span class="line">        *threadId = (<span class="type">android_thread_id_t</span>)thread; <span class="comment">// <span class="doctag">XXX:</span> this is not portable</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;android native层有两种Thread的创建方式，它们的区别在是是否能够调用Java端函数，createThreadEtc做了封装。在Android 10上面，这两种方法做了区别，Android 14上面最终都调用了androidCreateRawThreadEtc函数。另外一种方式是javaCreateThreadEtc函数。接着来到java层。</p><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;internal&#x2F;os&#x2F;RuntimeInit.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] argv)</span> &#123;</span><br><span class="line">        preForkInit();</span><br><span class="line">        <span class="keyword">if</span> (argv.length == <span class="number">2</span> &amp;&amp; argv[<span class="number">1</span>].equals(<span class="string">&quot;application&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Slog.d(TAG, <span class="string">&quot;RuntimeInit: Starting application&quot;</span>);</span><br><span class="line">            <span class="comment">//将System.out和System.err输出重定向到Android的Log系统(定义在android.util.Log)</span></span><br><span class="line">            redirectLogStreams();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Slog.d(TAG, <span class="string">&quot;RuntimeInit: Starting tool&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//commonInit():初始化了一下系统属性，其中最重要的一点就是设置了一个未捕捉异常的handler,当代码有任何未知异常，就会执行它。</span></span><br><span class="line">        commonInit();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Now that we&#x27;re running in interpreted code, call back into native code</span></span><br><span class="line"><span class="comment">         * to run the system.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        nativeFinishInit();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (DEBUG) Slog.d(TAG, <span class="string">&quot;Leaving RuntimeInit!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;jni&#x2F;AndroidRuntime.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  Line 255 nativeFinishInit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Code written in the Java Programming Language calls here from main().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">com_android_internal_os_RuntimeInit_nativeFinishInit</span><span class="params">(JNIEnv* env, jobject clazz)</span></span><br><span class="line">&#123;</span><br><span class="line">    gCurRuntime-&gt;onStarted();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//line 271</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JNI registration.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">register_com_android_internal_os_RuntimeInit</span><span class="params">(JNIEnv* env)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> JNINativeMethod methods[] = &#123;</span><br><span class="line">            &#123;<span class="string">&quot;nativeFinishInit&quot;</span>, <span class="string">&quot;()V&quot;</span>,</span><br><span class="line">             (<span class="type">void</span>*)com_android_internal_os_RuntimeInit_nativeFinishInit&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;nativeSetExitWithoutCleanup&quot;</span>, <span class="string">&quot;(Z)V&quot;</span>,</span><br><span class="line">             (<span class="type">void</span>*)com_android_internal_os_RuntimeInit_nativeSetExitWithoutCleanup&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> jniRegisterNativeMethods(env, <span class="string">&quot;com/android/internal/os/RuntimeInit&quot;</span>,</span><br><span class="line">        methods, NELEM(methods));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>frameworks&#x2F;base&#x2F;cmds&#x2F;app_process&#x2F;app_main.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 79 ---&gt;  gCurRuntime-&gt;onStarted();</span></span><br><span class="line">    virtual <span class="type">void</span> <span class="title function_">onStarted</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sp&lt;ProcessState&gt; proc = ProcessState::self();</span><br><span class="line">        ALOGV(<span class="string">&quot;App process: starting thread pool.\n&quot;</span>);</span><br><span class="line">        proc-&gt;startThreadPool();</span><br><span class="line"></span><br><span class="line">        AndroidRuntime* ar = AndroidRuntime::getRuntime();</span><br><span class="line">        ar-&gt;callMain(mClassName, mClass, mArgs);</span><br><span class="line"></span><br><span class="line">        IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">        hardware::IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>ZygoteInit</p></li><li><p>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;internal&#x2F;os&#x2F;ZygoteInit.java</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * This is the entry point for a Zygote process.  It creates the Zygote server, loads resources,</span></span><br><span class="line"><span class="comment">     * and handles other tasks related to preparing the process for forking into applications.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * This process is started with a nice value of -20 (highest priority).  All paths that flow</span></span><br><span class="line"><span class="comment">     * into new processes are required to either set the priority to the default value or terminate</span></span><br><span class="line"><span class="comment">     * before executing any non-system code.  The native side of this occurs in SpecializeCommon,</span></span><br><span class="line"><span class="comment">     * while the Java Language priority is changed in ZygoteInit.handleSystemServerProcess,</span></span><br><span class="line"><span class="comment">     * ZygoteConnection.handleChildProc, and Zygote.childMain.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> argv  Command line arguments used to specify the Zygote&#x27;s configuration.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] argv)</span> &#123;</span><br><span class="line">        <span class="type">ZygoteServer</span> <span class="variable">zygoteServer</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Mark zygote start. This ensures that thread creation will throw</span></span><br><span class="line">        <span class="comment">// an error.</span></span><br><span class="line">        ZygoteHooks.startZygoteNoThreadCreation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Zygote goes into its own process group.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Os.setpgid(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ErrnoException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to setpgid(0,0)&quot;</span>, ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Runnable caller;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// Store now for StatsLogging later.</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> SystemClock.elapsedRealtime();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">isRuntimeRestarted</span> <span class="operator">=</span> <span class="string">&quot;1&quot;</span>.equals(</span><br><span class="line">                    SystemProperties.get(<span class="string">&quot;sys.boot_completed&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">bootTimeTag</span> <span class="operator">=</span> Process.is64Bit() ? <span class="string">&quot;Zygote64Timing&quot;</span> : <span class="string">&quot;Zygote32Timing&quot;</span>;</span><br><span class="line">            <span class="type">TimingsTraceLog</span> <span class="variable">bootTimingsTraceLog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TimingsTraceLog</span>(bootTimeTag,</span><br><span class="line">                    Trace.TRACE_TAG_DALVIK);</span><br><span class="line">            bootTimingsTraceLog.traceBegin(<span class="string">&quot;ZygoteInit&quot;</span>);</span><br><span class="line">            RuntimeInit.preForkInit();</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">startSystemServer</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">zygoteSocketName</span> <span class="operator">=</span> <span class="string">&quot;zygote&quot;</span>;<span class="comment">//Dalvik VM进程系统</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">abiList</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">enableLazyPreload</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; argv.length; i++) &#123;</span><br><span class="line">                <span class="comment">//这里是app_main.cpp中传递的start-system-server参数</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;start-system-server&quot;</span>.equals(argv[i])) &#123;</span><br><span class="line">                    startSystemServer = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;--enable-lazy-preload&quot;</span>.equals(argv[i])) &#123;</span><br><span class="line">                    enableLazyPreload = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argv[i].startsWith(ABI_LIST_ARG)) &#123;</span><br><span class="line">                    abiList = argv[i].substring(ABI_LIST_ARG.length());</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argv[i].startsWith(SOCKET_NAME_ARG)) &#123;</span><br><span class="line">                    zygoteSocketName = argv[i].substring(SOCKET_NAME_ARG.length());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Unknown command line argument: &quot;</span> + argv[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">isPrimaryZygote</span> <span class="operator">=</span> zygoteSocketName.equals(Zygote.PRIMARY_SOCKET_NAME);</span><br><span class="line">            <span class="keyword">if</span> (!isRuntimeRestarted) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isPrimaryZygote) &#123;</span><br><span class="line">                    FrameworkStatsLog.write(FrameworkStatsLog.BOOT_TIME_EVENT_ELAPSED_TIME_REPORTED,</span><br><span class="line">                            BOOT_TIME_EVENT_ELAPSED_TIME__EVENT__ZYGOTE_INIT_START,</span><br><span class="line">                            startTime);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (zygoteSocketName.equals(Zygote.SECONDARY_SOCKET_NAME)) &#123;</span><br><span class="line">                    FrameworkStatsLog.write(FrameworkStatsLog.BOOT_TIME_EVENT_ELAPSED_TIME_REPORTED,</span><br><span class="line">                            BOOT_TIME_EVENT_ELAPSED_TIME__EVENT__SECONDARY_ZYGOTE_INIT_START,</span><br><span class="line">                            startTime);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (abiList == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;No ABI list supplied.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// In some configurations, we avoid preloading resources and classes eagerly.</span></span><br><span class="line">            <span class="comment">// In such cases, we will preload things prior to our first fork.</span></span><br><span class="line">            <span class="comment">// 在有些情况下我们需要在第一个fork之前进行预加载资源</span></span><br><span class="line">            <span class="keyword">if</span> (!enableLazyPreload) &#123;</span><br><span class="line">                bootTimingsTraceLog.traceBegin(<span class="string">&quot;ZygotePreload&quot;</span>);</span><br><span class="line">                EventLog.writeEvent(LOG_BOOT_PROGRESS_PRELOAD_START,</span><br><span class="line">                        SystemClock.uptimeMillis());</span><br><span class="line">                preload(bootTimingsTraceLog);</span><br><span class="line">                EventLog.writeEvent(LOG_BOOT_PROGRESS_PRELOAD_END,</span><br><span class="line">                        SystemClock.uptimeMillis());</span><br><span class="line">                bootTimingsTraceLog.traceEnd(); <span class="comment">// ZygotePreload</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Do an initial gc to clean up after startup</span></span><br><span class="line">            bootTimingsTraceLog.traceBegin(<span class="string">&quot;PostZygoteInitGC&quot;</span>);</span><br><span class="line">            gcAndFinalize();</span><br><span class="line">            bootTimingsTraceLog.traceEnd(); <span class="comment">// PostZygoteInitGC</span></span><br><span class="line"></span><br><span class="line">            bootTimingsTraceLog.traceEnd(); <span class="comment">// ZygoteInit</span></span><br><span class="line"></span><br><span class="line">            Zygote.initNativeState(isPrimaryZygote);</span><br><span class="line"></span><br><span class="line">            ZygoteHooks.stopZygoteNoThreadCreation();</span><br><span class="line"></span><br><span class="line">            zygoteServer = <span class="keyword">new</span> <span class="title class_">ZygoteServer</span>(isPrimaryZygote);<span class="comment">//创建Zygote服务器端</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (startSystemServer) &#123;</span><br><span class="line">                <span class="type">Runnable</span> <span class="variable">r</span> <span class="operator">=</span> forkSystemServer(abiList, zygoteSocketName, zygoteServer);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// &#123;@code r == null&#125; in the parent (zygote) process, and &#123;@code r != null&#125; in the</span></span><br><span class="line">                <span class="comment">// child (system_server) process.</span></span><br><span class="line">                <span class="keyword">if</span> (r != <span class="literal">null</span>) &#123;</span><br><span class="line">                    r.run();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Log.i(TAG, <span class="string">&quot;Accepting command socket connections&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The select loop returns early in the child process after a fork and</span></span><br><span class="line">            <span class="comment">// loops forever in the zygote.</span></span><br><span class="line">            caller = zygoteServer.runSelectLoop(abiList);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;System zygote died with fatal exception&quot;</span>, ex);</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (zygoteServer != <span class="literal">null</span>) &#123;</span><br><span class="line">                zygoteServer.closeServerSocket();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We&#x27;re in the child process and have exited the select loop. Proceed to execute the</span></span><br><span class="line">        <span class="comment">// command.</span></span><br><span class="line">        <span class="keyword">if</span> (caller != <span class="literal">null</span>) &#123;</span><br><span class="line">            caller.run();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// line 137</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">preload</span><span class="params">(TimingsTraceLog bootTimingsTraceLog)</span> &#123;</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;begin preload&quot;</span>);</span><br><span class="line">        bootTimingsTraceLog.traceBegin(<span class="string">&quot;BeginPreload&quot;</span>);</span><br><span class="line">        beginPreload();</span><br><span class="line">        bootTimingsTraceLog.traceEnd(); <span class="comment">// BeginPreload</span></span><br><span class="line">        bootTimingsTraceLog.traceBegin(<span class="string">&quot;PreloadClasses&quot;</span>);</span><br><span class="line">        <span class="comment">//加载指定的类到内存并且初始化，使用的Class.forName(class,ture,null)的方式</span></span><br><span class="line">        preloadClasses();</span><br><span class="line">        bootTimingsTraceLog.traceEnd(); <span class="comment">// PreloadClasses</span></span><br><span class="line">        bootTimingsTraceLog.traceBegin(<span class="string">&quot;CacheNonBootClasspathClassLoaders&quot;</span>);</span><br><span class="line">        cacheNonBootClasspathClassLoaders();</span><br><span class="line">        bootTimingsTraceLog.traceEnd(); <span class="comment">// CacheNonBootClasspathClassLoaders</span></span><br><span class="line">        bootTimingsTraceLog.traceBegin(<span class="string">&quot;PreloadResources&quot;</span>);</span><br><span class="line">        <span class="comment">//加载Android 通用的资源，比如drawable</span></span><br><span class="line">        preloadResources();</span><br><span class="line">        bootTimingsTraceLog.traceEnd(); <span class="comment">// PreloadResources</span></span><br><span class="line">        Trace.traceBegin(Trace.TRACE_TAG_DALVIK, <span class="string">&quot;PreloadAppProcessHALs&quot;</span>);</span><br><span class="line">        nativePreloadAppProcessHALs();</span><br><span class="line">        Trace.traceEnd(Trace.TRACE_TAG_DALVIK);</span><br><span class="line">        Trace.traceBegin(Trace.TRACE_TAG_DALVIK, <span class="string">&quot;PreloadGraphicsDriver&quot;</span>);</span><br><span class="line">        maybePreloadGraphicsDriver();</span><br><span class="line">        Trace.traceEnd(Trace.TRACE_TAG_DALVIK);</span><br><span class="line">        preloadSharedLibraries();</span><br><span class="line">        preloadTextResources();</span><br><span class="line">        <span class="comment">// Ask the WebViewFactory to do any initialization that must run in the zygote process,</span></span><br><span class="line">        <span class="comment">// for memory sharing purposes.</span></span><br><span class="line">        WebViewFactory.prepareWebViewInZygote();</span><br><span class="line">        endPreload();</span><br><span class="line">        warmUpJcaProviders();</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;end preload&quot;</span>);</span><br><span class="line"></span><br><span class="line">        sPreloadComplete = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;preloadClasses将freamwrok.jar里的preloaded-classed定义的所有class load到内存里，preloaded-classes编译Android后可以在framework&#x2F;base下找到。而preloadResource将系统的Resourrce(不是用户apk里定义的resource)load到内存。资源preload到Zygote的进程地址空间，所有fork的子进程将共享这份空间而无需重新load,这大大减少了应用程序的启动时间，但反过来增加了系统的启动时间。通过对preload类和资源数目的进行调整，可以加快系统启动。Preload也是android启动最耗时的部分之一。</p><ul><li>libcore&#x2F;dalvik&#x2F;src&#x2F;main&#x2F;java&#x2F;dalvik&#x2F;system&#x2F;ZygoteHooks.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line 120</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Runs several special GCs to try to clean up a few generations of</span></span><br><span class="line"><span class="comment">     * softly- and final-reachable objects, along with any other garbage.</span></span><br><span class="line"><span class="comment">     * This is only useful just before a fork().</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SystemApi(client = MODULE_LIBRARIES)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">gcAndFinalize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">VMRuntime</span> <span class="variable">runtime</span> <span class="operator">=</span> VMRuntime.getRuntime();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* runFinalizationSync() lets finalizers be called in Zygote,</span></span><br><span class="line"><span class="comment">         * which doesn&#x27;t have a HeapWorker thread.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.gc();</span><br><span class="line">        runtime.runFinalizationSync();</span><br><span class="line">        cleanLocaleCaches();</span><br><span class="line">        System.gc();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;gc()调用只是通知VM进行垃圾回收，是否回收，什么时候回收全由VM内部算法决定。GC的回收有一个复杂的状态机控制，通过多次调用，可以使得尽可能多的资源得到回收。gc()必须在fork之前完成(接下来的StatSystemServer就会有fork操作)，这样将来被复制出来的子进程才能有尽可能少的垃圾内存没有释放。</p><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;internal&#x2F;os&#x2F;ZygoteInit.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Prepare the arguments and forks for the system server process.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A &#123;<span class="doctag">@code</span> Runnable&#125; that provides an entrypoint into system_server code in the child</span></span><br><span class="line"><span class="comment">     * process; &#123;<span class="doctag">@code</span> null&#125; in the parent.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Runnable <span class="title function_">forkSystemServer</span><span class="params">(String abiList, String socketName,</span></span><br><span class="line"><span class="params">            ZygoteServer zygoteServer)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">capabilities</span> <span class="operator">=</span> posixCapabilitiesAsBits(</span><br><span class="line">                OsConstants.CAP_IPC_LOCK,</span><br><span class="line">                OsConstants.CAP_KILL,</span><br><span class="line">                OsConstants.CAP_NET_ADMIN,</span><br><span class="line">                OsConstants.CAP_NET_BIND_SERVICE,</span><br><span class="line">                OsConstants.CAP_NET_BROADCAST,</span><br><span class="line">                OsConstants.CAP_NET_RAW,</span><br><span class="line">                OsConstants.CAP_SYS_MODULE,</span><br><span class="line">                OsConstants.CAP_SYS_NICE,</span><br><span class="line">                OsConstants.CAP_SYS_PTRACE,</span><br><span class="line">                OsConstants.CAP_SYS_TIME,</span><br><span class="line">                OsConstants.CAP_SYS_TTY_CONFIG,</span><br><span class="line">                OsConstants.CAP_WAKE_ALARM,</span><br><span class="line">                OsConstants.CAP_BLOCK_SUSPEND</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">/* Containers run without some capabilities, so drop any caps that are not available. */</span></span><br><span class="line">        <span class="type">StructCapUserHeader</span> <span class="variable">header</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StructCapUserHeader</span>(</span><br><span class="line">                OsConstants._LINUX_CAPABILITY_VERSION_3, <span class="number">0</span>);</span><br><span class="line">        StructCapUserData[] data;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            data = Os.capget(header);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ErrnoException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to capget()&quot;</span>, ex);</span><br><span class="line">        &#125;</span><br><span class="line">        capabilities &amp;= Integer.toUnsignedLong(data[<span class="number">0</span>].effective) |</span><br><span class="line">                (Integer.toUnsignedLong(data[<span class="number">1</span>].effective) &lt;&lt; <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Hardcoded command line to start the system server */</span></span><br><span class="line">        <span class="comment">//启动SystemServer的命令行，部分参数写死</span></span><br><span class="line">        String[] args = &#123;</span><br><span class="line">                <span class="string">&quot;--setuid=1000&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--setgid=1000&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1021,1023,&quot;</span></span><br><span class="line">                        + <span class="string">&quot;1024,1032,1065,3001,3002,3003,3005,3006,3007,3009,3010,3011,3012&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--capabilities=&quot;</span> + capabilities + <span class="string">&quot;,&quot;</span> + capabilities,</span><br><span class="line">                <span class="string">&quot;--nice-name=system_server&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--runtime-args&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--target-sdk-version=&quot;</span> + VMRuntime.SDK_VERSION_CUR_DEVELOPMENT,</span><br><span class="line">                <span class="string">&quot;com.android.server.SystemServer&quot;</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        ZygoteArguments parsedArgs;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> pid;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ZygoteCommandBuffer</span> <span class="variable">commandBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZygoteCommandBuffer</span>(args);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                parsedArgs = ZygoteArguments.getInstance(commandBuffer);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (EOFException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertionError</span>(<span class="string">&quot;Unexpected argument error for forking system server&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            commandBuffer.close();</span><br><span class="line">            Zygote.applyDebuggerSystemProperty(parsedArgs);</span><br><span class="line">            Zygote.applyInvokeWithSystemProperty(parsedArgs);<span class="comment">//会设置InvokeWith参数，这个参数在接下来的初始化逻辑中会有调用</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Zygote.nativeSupportsMemoryTagging()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">mode</span> <span class="operator">=</span> SystemProperties.get(<span class="string">&quot;persist.arm64.memtag.system_server&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (mode.isEmpty()) &#123;</span><br><span class="line">                  <span class="comment">/* The system server has ASYNC MTE by default, in order to allow</span></span><br><span class="line"><span class="comment">                   * system services to specify their own MTE level later, as you</span></span><br><span class="line"><span class="comment">                   * can&#x27;t re-enable MTE once it&#x27;s disabled. */</span></span><br><span class="line">                  mode = SystemProperties.get(<span class="string">&quot;persist.arm64.memtag.default&quot;</span>, <span class="string">&quot;async&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (mode.equals(<span class="string">&quot;async&quot;</span>)) &#123;</span><br><span class="line">                    parsedArgs.mRuntimeFlags |= Zygote.MEMORY_TAG_LEVEL_ASYNC;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mode.equals(<span class="string">&quot;sync&quot;</span>)) &#123;</span><br><span class="line">                    parsedArgs.mRuntimeFlags |= Zygote.MEMORY_TAG_LEVEL_SYNC;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!mode.equals(<span class="string">&quot;off&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">/* When we have an invalid memory tag level, keep the current level. */</span></span><br><span class="line">                    parsedArgs.mRuntimeFlags |= Zygote.nativeCurrentTaggingLevel();</span><br><span class="line">                    Slog.e(TAG, <span class="string">&quot;Unknown memory tag level for the system server: \&quot;&quot;</span> + mode + <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Zygote.nativeSupportsTaggedPointers()) &#123;</span><br><span class="line">                <span class="comment">/* Enable pointer tagging in the system server. Hardware support for this is present</span></span><br><span class="line"><span class="comment">                 * in all ARMv8 CPUs. */</span></span><br><span class="line">                parsedArgs.mRuntimeFlags |= Zygote.MEMORY_TAG_LEVEL_TBI;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* Enable gwp-asan on the system server with a small probability. This is the same</span></span><br><span class="line"><span class="comment">             * policy as applied to native processes and system apps. */</span></span><br><span class="line">            parsedArgs.mRuntimeFlags |= Zygote.GWP_ASAN_LEVEL_LOTTERY;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (shouldProfileSystemServer()) &#123;</span><br><span class="line">                parsedArgs.mRuntimeFlags |= Zygote.PROFILE_SYSTEM_SERVER;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* Request to fork the system server process */</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 创建System server 进程 */</span></span><br><span class="line">            pid = Zygote.forkSystemServer(</span><br><span class="line">                    parsedArgs.mUid, parsedArgs.mGid,</span><br><span class="line">                    parsedArgs.mGids,</span><br><span class="line">                    parsedArgs.mRuntimeFlags,</span><br><span class="line">                    <span class="literal">null</span>,</span><br><span class="line">                    parsedArgs.mPermittedCapabilities,</span><br><span class="line">                    parsedArgs.mEffectiveCapabilities);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* For child process */</span></span><br><span class="line">        <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;<span class="comment">//如果是第一次创建的话 pid == 0</span></span><br><span class="line">            <span class="keyword">if</span> (hasSecondZygote(abiList)) &#123;</span><br><span class="line">                waitForSecondaryZygote(socketName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            zygoteServer.closeServerSocket();</span><br><span class="line">            <span class="keyword">return</span> handleSystemServerProcess(parsedArgs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;ZygoteInit.forkSystemServer()方法fork出SystemServer进程。fork出来的子进程在handleSystemServerProcess里开始初始化工作，主要工作分为：</p><ol><li>prepareSystemServerProfile()方法中将SYSTEMSERVERCLASSPATH中的AppInfo加载到VM中</li><li>判断fork args中是否有invokWith参数，如果有则进行WrapperInit.execApplication</li></ol><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;internal&#x2F;os&#x2F;ZygoteInit.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Line 524</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Finish remaining work for the newly forked system server process.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Runnable <span class="title function_">handleSystemServerProcess</span><span class="params">(ZygoteArguments parsedArgs)</span> &#123;</span><br><span class="line">        <span class="comment">// set umask to 0077 so new files and directories will default to owner-only permissions.</span></span><br><span class="line">        Os.umask(S_IRWXG | S_IRWXO);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parsedArgs.mNiceName != <span class="literal">null</span>) &#123;</span><br><span class="line">            Process.setArgV0(parsedArgs.mNiceName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">systemServerClasspath</span> <span class="operator">=</span> Os.getenv(<span class="string">&quot;SYSTEMSERVERCLASSPATH&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (systemServerClasspath != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// Capturing profiles is only supported for debug or eng builds since selinux normally</span></span><br><span class="line">            <span class="comment">// prevents it.</span></span><br><span class="line">            <span class="keyword">if</span> (shouldProfileSystemServer() &amp;&amp; (Build.IS_USERDEBUG || Build.IS_ENG)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Log.d(TAG, <span class="string">&quot;Preparing system server profile&quot;</span>);</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">standaloneSystemServerJars</span> <span class="operator">=</span></span><br><span class="line">                            Os.getenv(<span class="string">&quot;STANDALONE_SYSTEMSERVER_JARS&quot;</span>);</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">systemServerPaths</span> <span class="operator">=</span> standaloneSystemServerJars != <span class="literal">null</span></span><br><span class="line">                            ? String.join(<span class="string">&quot;:&quot;</span>, systemServerClasspath, standaloneSystemServerJars)</span><br><span class="line">                            : systemServerClasspath;</span><br><span class="line">                    <span class="comment">//将SYSTEMSERVERCLASSPATH中的AppInfo加载到VM中</span></span><br><span class="line">                    prepareSystemServerProfile(systemServerPaths);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    Log.wtf(TAG, <span class="string">&quot;Failed to set up system server profile&quot;</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parsedArgs.mInvokeWith != <span class="literal">null</span>) &#123;</span><br><span class="line">            String[] args = parsedArgs.mRemainingArgs;</span><br><span class="line">            <span class="comment">// If we have a non-null system server class path, we&#x27;ll have to duplicate the</span></span><br><span class="line">            <span class="comment">// existing arguments and append the classpath to it. ART will handle the classpath</span></span><br><span class="line">            <span class="comment">// correctly when we exec a new process.</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断fork args中是否有invokWith参数，如果有则进行WrapperInit.execApplication</span></span><br><span class="line">            <span class="keyword">if</span> (systemServerClasspath != <span class="literal">null</span>) &#123;</span><br><span class="line">                String[] amendedArgs = <span class="keyword">new</span> <span class="title class_">String</span>[args.length + <span class="number">2</span>];</span><br><span class="line">                amendedArgs[<span class="number">0</span>] = <span class="string">&quot;-cp&quot;</span>;</span><br><span class="line">                amendedArgs[<span class="number">1</span>] = systemServerClasspath;</span><br><span class="line">                System.arraycopy(args, <span class="number">0</span>, amendedArgs, <span class="number">2</span>, args.length);</span><br><span class="line">                args = amendedArgs;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            WrapperInit.execApplication(parsedArgs.mInvokeWith,</span><br><span class="line">                    parsedArgs.mNiceName, parsedArgs.mTargetSdkVersion,</span><br><span class="line">                    VMRuntime.getCurrentInstructionSet(), <span class="literal">null</span>, args);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unexpected return from WrapperInit.execApplication&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ClassLoader</span> <span class="variable">cl</span> <span class="operator">=</span> getOrCreateSystemServerClassLoader();</span><br><span class="line">            <span class="keyword">if</span> (cl != <span class="literal">null</span>) &#123;</span><br><span class="line">                Thread.currentThread().setContextClassLoader(cl);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * Pass the remaining arguments to SystemServer.</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">return</span> ZygoteInit.zygoteInit(parsedArgs.mTargetSdkVersion,</span><br><span class="line">                    parsedArgs.mDisabledCompatChanges,</span><br><span class="line">                    parsedArgs.mRemainingArgs, cl);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* should never reach here */</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;internal&#x2F;os&#x2F;RuntimeInit.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//line296</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Invokes a static &quot;main(argv[]) method on class &quot;className&quot;.</span></span><br><span class="line"><span class="comment">     * Converts various failing exceptions into RuntimeExceptions, with</span></span><br><span class="line"><span class="comment">     * the assumption that they will then cause the VM instance to exit.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> className Fully-qualified class name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> argv Argument vector for main()</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> classLoader the classLoader to load &#123;<span class="doctag">@className</span>&#125; with</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> Runnable <span class="title function_">findStaticMain</span><span class="params">(String className, String[] argv,</span></span><br><span class="line"><span class="params">            ClassLoader classLoader)</span> &#123;</span><br><span class="line">        Class&lt;?&gt; cl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cl = Class.forName(className, <span class="literal">true</span>, classLoader);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(</span><br><span class="line">                    <span class="string">&quot;Missing class when invoking static main &quot;</span> + className,</span><br><span class="line">                    ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Method m;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            m = cl.getMethod(<span class="string">&quot;main&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; String[].class &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(</span><br><span class="line">                    <span class="string">&quot;Missing static main on &quot;</span> + className, ex);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SecurityException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(</span><br><span class="line">                    <span class="string">&quot;Problem getting static main on &quot;</span> + className, ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">modifiers</span> <span class="operator">=</span> m.getModifiers();</span><br><span class="line">        <span class="keyword">if</span> (! (Modifier.isStatic(modifiers) &amp;&amp; Modifier.isPublic(modifiers))) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(</span><br><span class="line">                    <span class="string">&quot;Main method is not public and static on &quot;</span> + className);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * This throw gets caught in ZygoteInit.main(), which responds</span></span><br><span class="line"><span class="comment">         * by invoking the exception&#x27;s run() method. This arrangement</span></span><br><span class="line"><span class="comment">         * clears up all the stack frames that were required in setting</span></span><br><span class="line"><span class="comment">         * up the process.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MethodAndArgsCaller</span>(m, argv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Helper class which holds a method and arguments and can call them. This is used as part of</span></span><br><span class="line"><span class="comment">     * a trampoline to get rid of the initial process setup stack frames.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MethodAndArgsCaller</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">        <span class="comment">/** method to call */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Method mMethod;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** argument array */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String[] mArgs;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MethodAndArgsCaller</span><span class="params">(Method method, String[] args)</span> &#123;</span><br><span class="line">            mMethod = method;</span><br><span class="line">            mArgs = args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mMethod.invoke(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; mArgs &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">                <span class="type">Throwable</span> <span class="variable">cause</span> <span class="operator">=</span> ex.getCause();</span><br><span class="line">                <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> RuntimeException) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> (RuntimeException) cause;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> Error) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> (Error) cause;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;很明显这是一个耗时操作所以使用线程来完成</p><h4 id="System-Servver启动流程"><a href="#System-Servver启动流程" class="headerlink" title="System Servver启动流程"></a>System Servver启动流程</h4><p>&emsp;&emsp;System Server是Zygote fork的第一个Java进程，这个进程非常重要，因为他们有很多的系统线程，提供所有和信心的系统服务，比如WindowManager,ActivityManager,它们都是运行在system_server的进程中。还有很多“Binder-x”的线程，它们是各个Service为了响应应用程序远程调用请求而创建的。除此之外，还有很多内部线程，比如”UI thread”, “InputReader”,”InputDispatch”等等。现在着重看System Server是如何创建起来的。</p><p>&emsp;&emsp;分成4部分详细分析SystemServer().run()方法的初始化流程，初始化必要的SystemServer环境参数，比如系统时间、默认时区、语言、Load一些Library等等，初始化Looper,我们在主线程中使用到的looper就是在SystemServer中进行初始化的，初始化Context，只有初始化一个Context才能进行启动Service等操作。</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;SystemServer.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The main entry point from zygote.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SystemServer</span>().run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//line 1044</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">createSystemContext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ActivityThread</span> <span class="variable">activityThread</span> <span class="operator">=</span> ActivityThread.systemMain();</span><br><span class="line">        mSystemContext = activityThread.getSystemContext();</span><br><span class="line">        mSystemContext.setTheme(DEFAULT_SYSTEM_THEME);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Context</span> <span class="variable">systemUiContext</span> <span class="operator">=</span> activityThread.getSystemUiContext();</span><br><span class="line">        systemUiContext.setTheme(DEFAULT_SYSTEM_THEME);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;继续看ActivityThread中如何生成Context:</p><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;android&#x2F;app&#x2F;ActivityThread.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@UnsupportedAppUsage</span></span><br><span class="line"><span class="keyword">public</span> ContextImpl <span class="title function_">getSystemContext</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mSystemContext == <span class="literal">null</span>) &#123;</span><br><span class="line">            mSystemContext = ContextImpl.createSystemContext(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mSystemContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;ContextImpl是Cotext类的具体实现，里面封装完成生成几种常用的createContext的方法:</p><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;android&#x2F;app&#x2F;ContextImpl.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">static</span> ContextImpl <span class="title function_">createSystemContext</span><span class="params">(ActivityThread mainThread)</span> &#123;</span><br><span class="line">        <span class="type">LoadedApk</span> <span class="variable">packageInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LoadedApk</span>(mainThread);</span><br><span class="line">        <span class="type">ContextImpl</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContextImpl</span>(<span class="literal">null</span>, mainThread, packageInfo,</span><br><span class="line">                ContextParams.EMPTY, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="number">0</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        context.setResources(packageInfo.getResources());</span><br><span class="line">        context.mResources.updateConfiguration(context.mResourcesManager.getConfiguration(),</span><br><span class="line">                context.mResourcesManager.getDisplayMetrics());</span><br><span class="line">        context.mContextType = CONTEXT_TYPE_SYSTEM_OR_SYSTEM_UI;</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * System Context to be used for UI. This Context has resources that can be themed.</span></span><br><span class="line"><span class="comment">     * Make sure that the created system UI context shares the same LoadedApk as the system context.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> systemContext The system context which created by</span></span><br><span class="line"><span class="comment">     *                      &#123;<span class="doctag">@link</span> #createSystemContext(ActivityThread)&#125;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> displayId The ID of the display where the UI is shown.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> ContextImpl <span class="title function_">createSystemUiContext</span><span class="params">(ContextImpl systemContext, <span class="type">int</span> displayId)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">WindowTokenClient</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WindowTokenClient</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ContextImpl</span> <span class="variable">context</span> <span class="operator">=</span> systemContext.createWindowContextBase(token, displayId);</span><br><span class="line">        token.attachContext(context);</span><br><span class="line">        token.attachToDisplayContent(displayId);</span><br><span class="line">        context.mContextType = CONTEXT_TYPE_SYSTEM_OR_SYSTEM_UI;</span><br><span class="line">        context.mOwnsToken = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">static</span> ContextImpl <span class="title function_">createAppContext</span><span class="params">(ActivityThread mainThread, LoadedApk packageInfo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createAppContext(mainThread, packageInfo, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> ContextImpl <span class="title function_">createAppContext</span><span class="params">(ActivityThread mainThread, LoadedApk packageInfo,</span></span><br><span class="line"><span class="params">            String opPackageName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (packageInfo == <span class="literal">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;packageInfo&quot;</span>);</span><br><span class="line">        <span class="type">ContextImpl</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContextImpl</span>(<span class="literal">null</span>, mainThread, packageInfo,</span><br><span class="line">            ContextParams.EMPTY, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="number">0</span>, <span class="literal">null</span>, opPackageName);</span><br><span class="line">        context.setResources(packageInfo.getResources());</span><br><span class="line">        context.mContextType = isSystemOrSystemUI(context) ? CONTEXT_TYPE_SYSTEM_OR_SYSTEM_UI</span><br><span class="line">                : CONTEXT_TYPE_NON_UI;</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@UnsupportedAppUsage(maxTargetSdk = Build.VERSION_CODES.R, trackingBug = 170729553)</span></span><br><span class="line">    <span class="keyword">static</span> ContextImpl <span class="title function_">createActivityContext</span><span class="params">(ActivityThread mainThread,</span></span><br><span class="line"><span class="params">            LoadedApk packageInfo, ActivityInfo activityInfo, IBinder activityToken, <span class="type">int</span> displayId,</span></span><br><span class="line"><span class="params">            Configuration overrideConfiguration)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (packageInfo == <span class="literal">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;packageInfo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String[] splitDirs = packageInfo.getSplitResDirs();</span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> packageInfo.getClassLoader();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (packageInfo.getApplicationInfo().requestsIsolatedSplitLoading()) &#123;</span><br><span class="line">            Trace.traceBegin(Trace.TRACE_TAG_RESOURCES, <span class="string">&quot;SplitDependencies&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                classLoader = packageInfo.getSplitClassLoader(activityInfo.splitName);</span><br><span class="line">                splitDirs = packageInfo.getSplitPaths(activityInfo.splitName);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NameNotFoundException e) &#123;</span><br><span class="line">                <span class="comment">// Nothing above us can handle a NameNotFoundException, better crash.</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> String attributionTag;</span><br><span class="line">        <span class="keyword">if</span> (activityInfo.attributionTags != <span class="literal">null</span> &amp;&amp; activityInfo.attributionTags.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            attributionTag = activityInfo.attributionTags[<span class="number">0</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            attributionTag = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">ContextImpl</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContextImpl</span>(<span class="literal">null</span>, mainThread, packageInfo, ContextParams.EMPTY,</span><br><span class="line">                attributionTag, <span class="literal">null</span>, activityInfo.splitName, activityToken, <span class="literal">null</span>, <span class="number">0</span>, classLoader,</span><br><span class="line">                <span class="literal">null</span>);</span><br><span class="line">        context.mContextType = CONTEXT_TYPE_ACTIVITY;</span><br><span class="line">        context.mIsConfigurationBasedContext = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Clamp display ID to DEFAULT_DISPLAY if it is INVALID_DISPLAY.</span></span><br><span class="line">        displayId = (displayId != Display.INVALID_DISPLAY) ? displayId : Display.DEFAULT_DISPLAY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">CompatibilityInfo</span> <span class="variable">compatInfo</span> <span class="operator">=</span> (displayId == Display.DEFAULT_DISPLAY)</span><br><span class="line">                ? packageInfo.getCompatibilityInfo()</span><br><span class="line">                : CompatibilityInfo.DEFAULT_COMPATIBILITY_INFO;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">ResourcesManager</span> <span class="variable">resourcesManager</span> <span class="operator">=</span> ResourcesManager.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create the base resources for which all configuration contexts for this Activity</span></span><br><span class="line">        <span class="comment">// will be rebased upon.</span></span><br><span class="line">        context.setResources(resourcesManager.createBaseTokenResources(activityToken,</span><br><span class="line">                packageInfo.getResDir(),</span><br><span class="line">                splitDirs,</span><br><span class="line">                packageInfo.getOverlayDirs(),</span><br><span class="line">                packageInfo.getOverlayPaths(),</span><br><span class="line">                packageInfo.getApplicationInfo().sharedLibraryFiles,</span><br><span class="line">                displayId,</span><br><span class="line">                overrideConfiguration,</span><br><span class="line">                compatInfo,</span><br><span class="line">                classLoader,</span><br><span class="line">                packageInfo.getApplication() == <span class="literal">null</span> ? <span class="literal">null</span></span><br><span class="line">                        : packageInfo.getApplication().getResources().getLoaders()));</span><br><span class="line">        context.setDisplay(resourcesManager.getAdjustedDisplay(</span><br><span class="line">                displayId, context.getResources()));</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;初始化SystemServiceManager,用来管理启动service,SystemServiceManager中封装了启动Service的startService方法启动系统必要的Service,启动service的流程分为三步：</p><ul><li>frameworks&#x2F;base&#x2F;services&#x2F;java&#x2F;com&#x2F;android&#x2F;server&#x2F;SystemServer.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">TimingsTraceAndSlog</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TimingsTraceAndSlog</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            t.traceBegin(<span class="string">&quot;InitBeforeStartServices&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Record the process start information in sys props.</span></span><br><span class="line">            SystemProperties.set(SYSPROP_START_COUNT, String.valueOf(mStartCount));</span><br><span class="line">            SystemProperties.set(SYSPROP_START_ELAPSED, String.valueOf(mRuntimeStartElapsedTime));</span><br><span class="line">            SystemProperties.set(SYSPROP_START_UPTIME, String.valueOf(mRuntimeStartUptime));</span><br><span class="line"></span><br><span class="line">            EventLog.writeEvent(EventLogTags.SYSTEM_SERVER_START,</span><br><span class="line">                    mStartCount, mRuntimeStartUptime, mRuntimeStartElapsedTime);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set the device&#x27;s time zone (a system property) if it is not set or is invalid.</span></span><br><span class="line">            SystemTimeZone.initializeTimeZoneSettingsIfRequired();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If the system has &quot;persist.sys.language&quot; and friends set, replace them with</span></span><br><span class="line">            <span class="comment">// &quot;persist.sys.locale&quot;. Note that the default locale at this point is calculated</span></span><br><span class="line">            <span class="comment">// using the &quot;-Duser.locale&quot; command line flag. That flag is usually populated by</span></span><br><span class="line">            <span class="comment">// AndroidRuntime using the same set of system properties, but only the system_server</span></span><br><span class="line">            <span class="comment">// and system apps are allowed to set them.</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="comment">// <span class="doctag">NOTE:</span> Most changes made here will need an equivalent change to</span></span><br><span class="line">            <span class="comment">// core/jni/AndroidRuntime.cpp</span></span><br><span class="line">            <span class="keyword">if</span> (!SystemProperties.get(<span class="string">&quot;persist.sys.language&quot;</span>).isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">languageTag</span> <span class="operator">=</span> Locale.getDefault().toLanguageTag();</span><br><span class="line"></span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.locale&quot;</span>, languageTag);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.language&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.country&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                SystemProperties.set(<span class="string">&quot;persist.sys.localevar&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The system server should never make non-oneway calls</span></span><br><span class="line">            Binder.setWarnOnBlocking(<span class="literal">true</span>);</span><br><span class="line">            <span class="comment">// The system server should always load safe labels</span></span><br><span class="line">            PackageItemInfo.forceSafeLabels();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Default to FULL within the system server.</span></span><br><span class="line">            SQLiteGlobal.sDefaultSyncMode = SQLiteGlobal.SYNC_MODE_FULL;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Deactivate SQLiteCompatibilityWalFlags until settings provider is initialized</span></span><br><span class="line">            SQLiteCompatibilityWalFlags.init(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Here we go!</span></span><br><span class="line">            Slog.i(TAG, <span class="string">&quot;Entered the Android system server!&quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">long</span> <span class="variable">uptimeMillis</span> <span class="operator">=</span> SystemClock.elapsedRealtime();</span><br><span class="line">            EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_SYSTEM_RUN, uptimeMillis);</span><br><span class="line">            <span class="keyword">if</span> (!mRuntimeRestart) &#123;</span><br><span class="line">                FrameworkStatsLog.write(FrameworkStatsLog.BOOT_TIME_EVENT_ELAPSED_TIME_REPORTED,</span><br><span class="line">                        FrameworkStatsLog</span><br><span class="line">                                .BOOT_TIME_EVENT_ELAPSED_TIME__EVENT__SYSTEM_SERVER_INIT_START,</span><br><span class="line">                        uptimeMillis);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// In case the runtime switched since last boot (such as when</span></span><br><span class="line">            <span class="comment">// the old runtime was removed in an OTA), set the system</span></span><br><span class="line">            <span class="comment">// property so that it is in sync. We can&#x27;t do this in</span></span><br><span class="line">            <span class="comment">// libnativehelper&#x27;s JniInvocation::Init code where we already</span></span><br><span class="line">            <span class="comment">// had to fallback to a different runtime because it is</span></span><br><span class="line">            <span class="comment">// running as root and we need to be the system user to set</span></span><br><span class="line">            <span class="comment">// the property. http://b/11463182</span></span><br><span class="line">            SystemProperties.set(<span class="string">&quot;persist.sys.dalvik.vm.lib.2&quot;</span>, VMRuntime.getRuntime().vmLibrary());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Mmmmmm... more memory!</span></span><br><span class="line">            VMRuntime.getRuntime().clearGrowthLimit();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Some devices rely on runtime fingerprint generation, so make sure</span></span><br><span class="line">            <span class="comment">// we&#x27;ve defined it before booting further.</span></span><br><span class="line">            Build.ensureFingerprintProperty();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Within the system server, it is an error to access Environment paths without</span></span><br><span class="line">            <span class="comment">// explicitly specifying a user.</span></span><br><span class="line">            Environment.setUserRequired(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Within the system server, any incoming Bundles should be defused</span></span><br><span class="line">            <span class="comment">// to avoid throwing BadParcelableException.</span></span><br><span class="line">            BaseBundle.setShouldDefuse(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Within the system server, when parceling exceptions, include the stack trace</span></span><br><span class="line">            Parcel.setStackTraceParceling(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ensure binder calls into the system always run at foreground priority.</span></span><br><span class="line">            BinderInternal.disableBackgroundScheduling(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Increase the number of binder threads in system_server</span></span><br><span class="line">            BinderInternal.setMaxThreads(sMaxBinderThreads);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Prepare the main looper thread (this thread).</span></span><br><span class="line">            android.os.Process.setThreadPriority(</span><br><span class="line">                    android.os.Process.THREAD_PRIORITY_FOREGROUND);</span><br><span class="line">            android.os.Process.setCanSelfBackground(<span class="literal">false</span>);</span><br><span class="line">            Looper.prepareMainLooper();</span><br><span class="line">            Looper.getMainLooper().setSlowLogThresholdMs(</span><br><span class="line">                    SLOW_DISPATCH_THRESHOLD_MS, SLOW_DELIVERY_THRESHOLD_MS);</span><br><span class="line"></span><br><span class="line">            SystemServiceRegistry.sEnableServiceNotFoundWtf = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Initialize native services.</span></span><br><span class="line">            System.loadLibrary(<span class="string">&quot;android_servers&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Allow heap / perf profiling.</span></span><br><span class="line">            initZygoteChildHeapProfiling();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Debug builds - spawn a thread to monitor for fd leaks.</span></span><br><span class="line">            <span class="keyword">if</span> (Build.IS_DEBUGGABLE) &#123;</span><br><span class="line">                spawnFdLeakCheckThread();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check whether we failed to shut down last time we tried.</span></span><br><span class="line">            <span class="comment">// This call may not return.</span></span><br><span class="line">            performPendingShutdown();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Initialize the system context.</span></span><br><span class="line">            createSystemContext();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Call per-process mainline module initialization.</span></span><br><span class="line">            ActivityThread.initializeMainlineModules();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Sets the dumper service</span></span><br><span class="line">            ServiceManager.addService(<span class="string">&quot;system_server_dumper&quot;</span>, mDumper);</span><br><span class="line">            mDumper.addDumpable(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Create the system service manager.</span></span><br><span class="line">            mSystemServiceManager = <span class="keyword">new</span> <span class="title class_">SystemServiceManager</span>(mSystemContext);</span><br><span class="line">            mSystemServiceManager.setStartInfo(mRuntimeRestart,</span><br><span class="line">                    mRuntimeStartElapsedTime, mRuntimeStartUptime);</span><br><span class="line">            mDumper.addDumpable(mSystemServiceManager);</span><br><span class="line"></span><br><span class="line">            LocalServices.addService(SystemServiceManager.class, mSystemServiceManager);</span><br><span class="line">            <span class="comment">// Prepare the thread pool for init tasks that can be parallelized</span></span><br><span class="line">            <span class="type">SystemServerInitThreadPool</span> <span class="variable">tp</span> <span class="operator">=</span> SystemServerInitThreadPool.start();</span><br><span class="line">            mDumper.addDumpable(tp);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Load preinstalled system fonts for system server, so that WindowManagerService, etc</span></span><br><span class="line">            <span class="comment">// can start using Typeface. Note that fonts are required not only for text rendering,</span></span><br><span class="line">            <span class="comment">// but also for some text operations (e.g. TextUtils.makeSafeForPresentation()).</span></span><br><span class="line">            <span class="keyword">if</span> (Typeface.ENABLE_LAZY_TYPEFACE_INITIALIZATION) &#123;</span><br><span class="line">                Typeface.loadPreinstalledSystemFontMap();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Attach JVMTI agent if this is a debuggable build and the system property is set.</span></span><br><span class="line">            <span class="keyword">if</span> (Build.IS_DEBUGGABLE) &#123;</span><br><span class="line">                <span class="comment">// Property is of the form &quot;library_path=parameters&quot;.</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">jvmtiAgent</span> <span class="operator">=</span> SystemProperties.get(<span class="string">&quot;persist.sys.dalvik.jvmtiagent&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (!jvmtiAgent.isEmpty()) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">equalIndex</span> <span class="operator">=</span> jvmtiAgent.indexOf(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">libraryPath</span> <span class="operator">=</span> jvmtiAgent.substring(<span class="number">0</span>, equalIndex);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">parameterList</span> <span class="operator">=</span></span><br><span class="line">                            jvmtiAgent.substring(equalIndex + <span class="number">1</span>, jvmtiAgent.length());</span><br><span class="line">                    <span class="comment">// Attach the agent.</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Debug.attachJvmtiAgent(libraryPath, parameterList, <span class="literal">null</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;*************************************************&quot;</span>);</span><br><span class="line">                        Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;********** Failed to load jvmti plugin: &quot;</span> + jvmtiAgent);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            t.traceEnd();  <span class="comment">// InitBeforeStartServices</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Setup the default WTF handler</span></span><br><span class="line">        RuntimeInit.setDefaultApplicationWtfHandler(SystemServer::handleEarlySystemWtf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start services.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            t.traceBegin(<span class="string">&quot;StartServices&quot;</span>);</span><br><span class="line">            startBootstrapServices(t);</span><br><span class="line">            startCoreServices(t);</span><br><span class="line">            startOtherServices(t);</span><br><span class="line">            startApexServices(t);</span><br><span class="line">            <span class="comment">// Only update the timeout after starting all the services so that we use</span></span><br><span class="line">            <span class="comment">// the default timeout to start system server.</span></span><br><span class="line">            updateWatchdogTimeout(t);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">            Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;******************************************&quot;</span>);</span><br><span class="line">            Slog.e(<span class="string">&quot;System&quot;</span>, <span class="string">&quot;************ Failure starting system services&quot;</span>, ex);</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            t.traceEnd(); <span class="comment">// StartServices</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StrictMode.initVmDefaults(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mRuntimeRestart &amp;&amp; !isFirstBootOrUpgrade()) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">long</span> <span class="variable">uptimeMillis</span> <span class="operator">=</span> SystemClock.elapsedRealtime();</span><br><span class="line">            FrameworkStatsLog.write(FrameworkStatsLog.BOOT_TIME_EVENT_ELAPSED_TIME_REPORTED,</span><br><span class="line">                    FrameworkStatsLog.BOOT_TIME_EVENT_ELAPSED_TIME__EVENT__SYSTEM_SERVER_READY,</span><br><span class="line">                    uptimeMillis);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">long</span> <span class="variable">maxUptimeMillis</span> <span class="operator">=</span> <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span> (uptimeMillis &gt; maxUptimeMillis) &#123;</span><br><span class="line">                Slog.wtf(SYSTEM_SERVER_TIMING_TAG,</span><br><span class="line">                        <span class="string">&quot;SystemServer init took too long. uptimeMillis=&quot;</span> + uptimeMillis);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Loop forever.</span></span><br><span class="line">        Looper.loop();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Main thread loop unexpectedly exited&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;启动BootstrapServices,就是系统必须需要的服务，这些服务直接耦合性很高，所以干脆就放在一个方法里面一起启动，比如PowerManagerService、RecoverySystemService、DisplayManagerService、UsageStatsService、WebViewUpdateService启动其他需要用到的Service,比如NetworkScoreService、AlarmManagerService。</p><p>&emsp;&emsp;Zygote还有善后工作，一旦发现System Server挂掉了，将其回收，然后将自己杀掉，重新开始新的一生。  </p><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;com&#x2F;android&#x2F;internal&#x2F;os&#x2F;Zygote.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Special method to start the system server process. In addition to the</span></span><br><span class="line"><span class="comment">     * common actions performed in forkAndSpecialize, the pid of the child</span></span><br><span class="line"><span class="comment">     * process is recorded such that the death of the child process will cause</span></span><br><span class="line"><span class="comment">     * zygote to exit.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uid the UNIX uid that the new process should setuid() to after</span></span><br><span class="line"><span class="comment">     * fork()ing and and before spawning any threads.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gid the UNIX gid that the new process should setgid() to after</span></span><br><span class="line"><span class="comment">     * fork()ing and and before spawning any threads.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gids null-ok; a list of UNIX gids that the new process should</span></span><br><span class="line"><span class="comment">     * setgroups() to after fork and before spawning any threads.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> runtimeFlags bit flags that enable ART features.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rlimits null-ok an array of rlimit tuples, with the second</span></span><br><span class="line"><span class="comment">     * dimension having a length of 3 and representing</span></span><br><span class="line"><span class="comment">     * (resource, rlim_cur, rlim_max). These are set via the posix</span></span><br><span class="line"><span class="comment">     * setrlimit(2) call.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> permittedCapabilities argument for setcap()</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> effectiveCapabilities argument for setcap()</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 0 if this is the child, pid of the child</span></span><br><span class="line"><span class="comment">     * if this is the parent, or -1 on error.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">forkSystemServer</span><span class="params">(<span class="type">int</span> uid, <span class="type">int</span> gid, <span class="type">int</span>[] gids, <span class="type">int</span> runtimeFlags,</span></span><br><span class="line"><span class="params">            <span class="type">int</span>[][] rlimits, <span class="type">long</span> permittedCapabilities, <span class="type">long</span> effectiveCapabilities)</span> &#123;</span><br><span class="line">        ZygoteHooks.preFork();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">pid</span> <span class="operator">=</span> nativeForkSystemServer(</span><br><span class="line">                uid, gid, gids, runtimeFlags, rlimits,</span><br><span class="line">                permittedCapabilities, effectiveCapabilities);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the Java Language thread priority to the default value for new apps.</span></span><br><span class="line">        Thread.currentThread().setPriority(Thread.NORM_PRIORITY);</span><br><span class="line"></span><br><span class="line">        ZygoteHooks.postForkCommon();</span><br><span class="line">        <span class="keyword">return</span> pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">nativeForkSystemServer</span><span class="params">(<span class="type">int</span> uid, <span class="type">int</span> gid, <span class="type">int</span>[] gids, <span class="type">int</span> runtimeFlags,</span></span><br><span class="line"><span class="params">            <span class="type">int</span>[][] rlimits, <span class="type">long</span> permittedCapabilities, <span class="type">long</span> effectiveCapabilities)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>frameworks&#x2F;base&#x2F;core&#x2F;jni&#x2F;com_android_internal_os_Zygote.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//line 2405</span></span><br><span class="line"></span><br><span class="line">NO_STACK_PROTECTOR</span><br><span class="line"><span class="type">static</span> jint <span class="title function_">com_android_internal_os_Zygote_nativeForkSystemServer</span><span class="params">(</span></span><br><span class="line"><span class="params">        JNIEnv* env, jclass, <span class="type">uid_t</span> uid, <span class="type">gid_t</span> gid, jintArray gids,</span></span><br><span class="line"><span class="params">        jint runtime_flags, jobjectArray rlimits, jlong permitted_capabilities,</span></span><br><span class="line"><span class="params">        jlong effective_capabilities)</span> &#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">fds_to_close</span><span class="params">(MakeUsapPipeReadFDVector())</span>,</span><br><span class="line">                   <span class="title function_">fds_to_ignore</span><span class="params">(fds_to_close)</span>;</span><br><span class="line"></span><br><span class="line">  fds_to_close.push_back(gUsapPoolSocketFD);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (gUsapPoolEventFD != <span class="number">-1</span>) &#123;</span><br><span class="line">    fds_to_close.push_back(gUsapPoolEventFD);</span><br><span class="line">    fds_to_ignore.push_back(gUsapPoolEventFD);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (gSystemServerSocketFd != <span class="number">-1</span>) &#123;</span><br><span class="line">      fds_to_close.push_back(gSystemServerSocketFd);</span><br><span class="line">      fds_to_ignore.push_back(gSystemServerSocketFd);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="type">pid_t</span> pid = zygote::ForkCommon(env, <span class="literal">true</span>,</span><br><span class="line">                                 fds_to_close,</span><br><span class="line">                                 fds_to_ignore,</span><br><span class="line">                                 <span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// System server prcoess does not need data isolation so no need to</span></span><br><span class="line">      <span class="comment">// know pkg_data_info_list.</span></span><br><span class="line">      SpecializeCommon(env, uid, gid, gids, runtime_flags, rlimits, permitted_capabilities,</span><br><span class="line">                       effective_capabilities, MOUNT_EXTERNAL_DEFAULT, nullptr, nullptr, <span class="literal">true</span>,</span><br><span class="line">                       <span class="literal">false</span>, nullptr, nullptr, <span class="comment">/* is_top_app= */</span> <span class="literal">false</span>,</span><br><span class="line">                       <span class="comment">/* pkg_data_info_list */</span> nullptr,</span><br><span class="line">                       <span class="comment">/* allowlisted_data_info_list */</span> nullptr, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pid &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// The zygote process checks whether the child process has died or not.</span></span><br><span class="line">      ALOGI(<span class="string">&quot;System server process %d has been created&quot;</span>, pid);</span><br><span class="line">      gSystemServerPid = pid;</span><br><span class="line">      <span class="comment">// There is a slight window that the system server process has crashed</span></span><br><span class="line">      <span class="comment">// but it went unnoticed because we haven&#x27;t published its pid yet. So</span></span><br><span class="line">      <span class="comment">// we recheck here just to make sure that all is well.</span></span><br><span class="line">      <span class="comment">// WNOHANG会让waitpid立即返回，这里只是为预防上面的赋值语句没有完成之前SystemServer就crash了</span></span><br><span class="line"></span><br><span class="line">      <span class="type">int</span> status;</span><br><span class="line">      <span class="keyword">if</span> (waitpid(pid, &amp;status, WNOHANG) == pid) &#123;</span><br><span class="line">          ALOGE(<span class="string">&quot;System server process %d has died. Restarting Zygote!&quot;</span>, pid);</span><br><span class="line">          RuntimeAbort(env, __LINE__, <span class="string">&quot;System server process has died. Restarting Zygote!&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (UsePerAppMemcg()) &#123;</span><br><span class="line">          <span class="comment">// Assign system_server to the correct memory cgroup.</span></span><br><span class="line">          <span class="comment">// Not all devices mount memcg so check if it is mounted first</span></span><br><span class="line">          <span class="comment">// to avoid unnecessarily printing errors and denials in the logs.</span></span><br><span class="line">          <span class="keyword">if</span> (!SetTaskProfiles(pid, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;<span class="string">&quot;SystemMemoryProcess&quot;</span>&#125;)) &#123;</span><br><span class="line">              ALOGE(<span class="string">&quot;couldn&#x27;t add process %d into system memcg group&quot;</span>, pid);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// line 2251</span></span><br><span class="line"><span class="comment">// Utility routine to fork a process from the zygote.</span></span><br><span class="line">NO_STACK_PROTECTOR</span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">zygote::ForkCommon</span><span class="params">(JNIEnv* env, <span class="type">bool</span> is_system_server,</span></span><br><span class="line"><span class="params">                         <span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;&amp; fds_to_close,</span></span><br><span class="line"><span class="params">                         <span class="type">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;&amp; fds_to_ignore,</span></span><br><span class="line"><span class="params">                         <span class="type">bool</span> is_priority_fork,</span></span><br><span class="line"><span class="params">                         <span class="type">bool</span> purge)</span> &#123;</span><br><span class="line">  SetSignalHandlers();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Curry a failure function.</span></span><br><span class="line">  <span class="keyword">auto</span> fail_fn = <span class="built_in">std</span>::bind(zygote::ZygoteFailure, env,</span><br><span class="line">                           is_system_server ? <span class="string">&quot;system_server&quot;</span> : <span class="string">&quot;zygote&quot;</span>,</span><br><span class="line">                           nullptr, _1);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Temporarily block SIGCHLD during forks. The SIGCHLD handler might</span></span><br><span class="line">  <span class="comment">// log, which would result in the logging FDs we close being reopened.</span></span><br><span class="line">  <span class="comment">// This would cause failures because the FDs are not allowlisted.</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Note that the zygote process is single threaded at this point.</span></span><br><span class="line">  BlockSignal(SIGCHLD, fail_fn);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Close any logging related FDs before we start evaluating the list of</span></span><br><span class="line">  <span class="comment">// file descriptors.</span></span><br><span class="line">  __android_log_close();</span><br><span class="line">  AStatsSocket_close();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If this is the first fork for this zygote, create the open FD table,</span></span><br><span class="line">  <span class="comment">// verifying that files are of supported type and allowlisted.  Otherwise (not</span></span><br><span class="line">  <span class="comment">// the first fork), check that the open files have not changed.  Newly open</span></span><br><span class="line">  <span class="comment">// files are not expected, and will be disallowed in the future.  Currently</span></span><br><span class="line">  <span class="comment">// they are allowed if they pass the same checks as in the</span></span><br><span class="line">  <span class="comment">// FileDescriptorTable::Create() above.</span></span><br><span class="line">  <span class="keyword">if</span> (gOpenFdTable == nullptr) &#123;</span><br><span class="line">    gOpenFdTable = FileDescriptorTable::Create(fds_to_ignore, fail_fn);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    gOpenFdTable-&gt;Restat(fds_to_ignore, fail_fn);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  android_fdsan_error_level fdsan_error_level = android_fdsan_get_error_level();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (purge) &#123;</span><br><span class="line">    <span class="comment">// Purge unused native memory in an attempt to reduce the amount of false</span></span><br><span class="line">    <span class="comment">// sharing with the child process.  By reducing the size of the libc_malloc</span></span><br><span class="line">    <span class="comment">// region shared with the child process we reduce the number of pages that</span></span><br><span class="line">    <span class="comment">// transition to the private-dirty state when malloc adjusts the meta-data</span></span><br><span class="line">    <span class="comment">// on each of the pages it is managing after the fork.</span></span><br><span class="line">    <span class="keyword">if</span> (mallopt(M_PURGE_ALL, <span class="number">0</span>) != <span class="number">1</span>) &#123;</span><br><span class="line">      mallopt(M_PURGE, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="type">pid_t</span> pid = fork();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_priority_fork) &#123;</span><br><span class="line">      setpriority(PRIO_PROCESS, <span class="number">0</span>, PROCESS_PRIORITY_MAX);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      setpriority(PRIO_PROCESS, <span class="number">0</span>, PROCESS_PRIORITY_MIN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(__BIONIC__) &amp;&amp; !defined(NO_RESET_STACK_PROTECTOR)</span></span><br><span class="line">    <span class="comment">// Reset the stack guard for the new process.</span></span><br><span class="line">    android_reset_stack_guards();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// The child process.</span></span><br><span class="line">    PreApplicationInit();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clean up any descriptors which must be closed immediately</span></span><br><span class="line">    DetachDescriptors(env, fds_to_close, fail_fn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invalidate the entries in the USAP table.</span></span><br><span class="line">    ClearUsapTable();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Re-open all remaining open file descriptors so that they aren&#x27;t shared</span></span><br><span class="line">    <span class="comment">// with the zygote across a fork.</span></span><br><span class="line">    gOpenFdTable-&gt;ReopenOrDetach(fail_fn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Turn fdsan back on.</span></span><br><span class="line">    android_fdsan_set_error_level(fdsan_error_level);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Reset the fd to the unsolicited zygote socket</span></span><br><span class="line">    gSystemServerSocketFd = <span class="number">-1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pid == <span class="number">-1</span>) &#123;</span><br><span class="line">    ALOGE(<span class="string">&quot;Failed to fork child process: %s (%d)&quot;</span>, strerror(errno), errno);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ALOGD(<span class="string">&quot;Forked child process %d&quot;</span>, pid);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// We blocked SIGCHLD prior to a fork, we unblock it here.</span></span><br><span class="line">  UnblockSignal(SIGCHLD, fail_fn);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This signal handler is for zygote mode, since the zygote must reap its children</span></span><br><span class="line">NO_STACK_PROTECTOR</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">SigChldHandler</span><span class="params">(<span class="type">int</span> <span class="comment">/*signal_number*/</span>, <span class="type">siginfo_t</span>* info, <span class="type">void</span>* <span class="comment">/*ucontext*/</span>)</span> &#123;</span><br><span class="line">    <span class="type">pid_t</span> pid;</span><br><span class="line">    <span class="type">int</span> status;</span><br><span class="line">    <span class="type">int64_t</span> usaps_removed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// It&#x27;s necessary to save and restore the errno during this function.</span></span><br><span class="line">    <span class="comment">// Since errno is stored per thread, changing it here modifies the errno</span></span><br><span class="line">    <span class="comment">// on the thread on which this signal handler executes. If a signal occurs</span></span><br><span class="line">    <span class="comment">// between a call and an errno check, it&#x27;s possible to get the errno set</span></span><br><span class="line">    <span class="comment">// here.</span></span><br><span class="line">    <span class="comment">// See b/23572286 for extra information.</span></span><br><span class="line">    <span class="type">int</span> saved_errno = errno;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((pid = waitpid(<span class="number">-1</span>, &amp;status, WNOHANG)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// Notify system_server that we received a SIGCHLD</span></span><br><span class="line">        sendSigChildStatus(pid, info-&gt;si_uid, status);</span><br><span class="line">        <span class="comment">// Log process-death status that we care about.</span></span><br><span class="line">        <span class="keyword">if</span> (WIFEXITED(status)) &#123;</span><br><span class="line">            async_safe_format_log(ANDROID_LOG_INFO, LOG_TAG, <span class="string">&quot;Process %d exited cleanly (%d)&quot;</span>, pid,</span><br><span class="line">                                  WEXITSTATUS(status));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check to see if the PID is in the USAP pool and remove it if it is.</span></span><br><span class="line">            <span class="keyword">if</span> (RemoveUsapTableEntry(pid)) &#123;</span><br><span class="line">                ++usaps_removed;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (WIFSIGNALED(status)) &#123;</span><br><span class="line">            async_safe_format_log(ANDROID_LOG_INFO, LOG_TAG,</span><br><span class="line">                                  <span class="string">&quot;Process %d exited due to signal %d (%s)%s&quot;</span>, pid,</span><br><span class="line">                                  WTERMSIG(status), strsignal(WTERMSIG(status)),</span><br><span class="line">                                  WCOREDUMP(status) ? <span class="string">&quot;; core dumped&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If the process exited due to a signal other than SIGTERM, check to see</span></span><br><span class="line">            <span class="comment">// if the PID is in the USAP pool and remove it if it is.  If the process</span></span><br><span class="line">            <span class="comment">// was closed by the Zygote using SIGTERM then the USAP pool entry will</span></span><br><span class="line">            <span class="comment">// have already been removed (see nativeEmptyUsapPool()).</span></span><br><span class="line">            <span class="keyword">if</span> (WTERMSIG(status) != SIGTERM &amp;&amp; RemoveUsapTableEntry(pid)) &#123;</span><br><span class="line">                ++usaps_removed;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If the just-crashed process is the system_server, bring down zygote</span></span><br><span class="line">        <span class="comment">// so that it is restarted by init and system server will be restarted</span></span><br><span class="line">        <span class="comment">// from there.</span></span><br><span class="line">        <span class="keyword">if</span> (pid == gSystemServerPid) &#123;</span><br><span class="line">            async_safe_format_log(ANDROID_LOG_ERROR, LOG_TAG,</span><br><span class="line">                                  <span class="string">&quot;Exit zygote because system server (pid %d) has terminated&quot;</span>, pid);</span><br><span class="line">            kill(getpid(), SIGKILL);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Note that we shouldn&#x27;t consider ECHILD an error because</span></span><br><span class="line">    <span class="comment">// the secondary zygote might have no children left to wait for.</span></span><br><span class="line">    <span class="keyword">if</span> (pid &lt; <span class="number">0</span> &amp;&amp; errno != ECHILD) &#123;</span><br><span class="line">        async_safe_format_log(ANDROID_LOG_WARN, LOG_TAG, <span class="string">&quot;Zygote SIGCHLD error in waitpid: %s&quot;</span>,</span><br><span class="line">                              strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (usaps_removed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (TEMP_FAILURE_RETRY(write(gUsapPoolEventFD, &amp;usaps_removed, <span class="keyword">sizeof</span>(usaps_removed))) ==</span><br><span class="line">            <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="comment">// If this write fails something went terribly wrong.  We will now kill</span></span><br><span class="line">            <span class="comment">// the zygote and let the system bring it back up.</span></span><br><span class="line">            async_safe_format_log(ANDROID_LOG_ERROR, LOG_TAG,</span><br><span class="line">                                  <span class="string">&quot;Zygote failed to write to USAP pool event FD: %s&quot;</span>,</span><br><span class="line">                                  strerror(errno));</span><br><span class="line">            kill(getpid(), SIGKILL);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    errno = saved_errno;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// line 495</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Configures the SIGCHLD/SIGHUP handlers for the zygote process. This is</span></span><br><span class="line"><span class="comment">// configured very late, because earlier in the runtime we may fork() and</span></span><br><span class="line"><span class="comment">// exec() other processes, and we want to waitpid() for those rather than</span></span><br><span class="line"><span class="comment">// have them be harvested immediately.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Ignore SIGHUP because all processes forked by the zygote are in the same</span></span><br><span class="line"><span class="comment">// process group as the zygote and we don&#x27;t want to be notified if we become</span></span><br><span class="line"><span class="comment">// an orphaned group and have one or more stopped processes. This is not a</span></span><br><span class="line"><span class="comment">// theoretical concern :</span></span><br><span class="line"><span class="comment">// - we can become an orphaned group if one of our direct descendants forks</span></span><br><span class="line"><span class="comment">//   and is subsequently killed before its children.</span></span><br><span class="line"><span class="comment">// - crash_dump routinely STOPs the process it&#x27;s tracing.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// See issues b/71965619 and b/25567761 for further details.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This ends up being called repeatedly before each fork(), but there&#x27;s</span></span><br><span class="line"><span class="comment">// no real harm in that.</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">SetSignalHandlers</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sigaction</span> <span class="title">sig_chld</span> =</span> &#123;.sa_flags = SA_SIGINFO, .sa_sigaction = SigChldHandler&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sigaction(SIGCHLD, &amp;sig_chld, nullptr) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ALOGW(<span class="string">&quot;Error setting SIGCHLD handler: %s&quot;</span>, strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">sigaction</span> <span class="title">sig_hup</span> =</span> &#123;&#125;;</span><br><span class="line">  sig_hup.sa_handler = SIG_IGN;</span><br><span class="line">  <span class="keyword">if</span> (sigaction(SIGHUP, &amp;sig_hup, nullptr) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    ALOGW(<span class="string">&quot;Error setting SIGHUP handler: %s&quot;</span>, strerror(errno));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在Unix系统中，父进程必须用waitpid等待子进程的退出，否则子进程将变成Zombie僵尸进程，不仅系统资源泄露，而且系统将崩溃(没有System Server,所有的Andoid应用程序都无法运行)。但是waitpid()是一个阻塞函数(WNOHANG参数除外)，所以通常做法是在signal处理函数里进行无阻塞的处理，因为每个子进程的时候，系统会发出SIGCHID信号。Zygote会把自己杀掉，那父亲死了，所有的应用程序不就成了孤儿了？不会，因为父进程被杀掉系统会自动给所有的子进程发生SINGUP信号，该信号的默认处理就是杀掉自己退出当前进程。但是一些后台进程(Daemon)可以通过设置SIGING参数来忽略这个信号，从而得以在后台继续运行。</p><ul><li>总结</li></ul><ol><li>init 根据init.rc 运行app_process，并携带’-zygote‘和‘-startSystemServer’参数</li><li>AndroidRuntime.cpp::start()里将启动JavaVM，并且注册所有framework相关的系统JNI接口</li><li>运行ZygoteInit.java::main()函数初始化Zygote，Zygote并创建Socket的Server端</li><li>然后fork一个新的进程并在新进程里初始化SystemServer,Fork之前，Zygote是preload常用的Java类库，以及系统的resource,同时GC()清理内存空间，为子进程省去重复的工作。</li><li>SystemServer丽江所有的系统Service初始化，包括ActivityManager和WindowManager,它们是应用程序运行起来的前提</li><li>同时Zygote监听服务端Socket,等待新的应用启动请求</li><li>ActivityManager ready之后寻找系统的‘Startup’ Application，将请求发给Zygote</li><li>Zygote收到请求后，fork出一个新的进程</li><li>Zygote监听并处理SystemServer的SIGCHID信号，一旦System Server崩溃，立即将自己杀死。init会重启Zygote</li></ol><h3 id="fork函数"><a href="#fork函数" class="headerlink" title="fork函数"></a>fork函数</h3><ul><li>bionic&#x2F;libc&#x2F;bionic&#x2F;fork.cpp</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">pid_t</span> <span class="title function_">fork</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">sigset_t</span> <span class="built_in">set</span>;</span><br><span class="line">__fork_handler(<span class="number">-1</span>);</span><br><span class="line">__block_app_sigs(&amp;<span class="built_in">set</span>);</span><br><span class="line"><span class="type">int</span> need_locks = libc.need_locks &gt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (need_locks) &#123;</span><br><span class="line">__ldso_atfork(<span class="number">-1</span>);</span><br><span class="line">__inhibit_ptc();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span> atfork_locks/<span class="keyword">sizeof</span> *atfork_locks; i++)</span><br><span class="line"><span class="keyword">if</span> (*atfork_locks[i]) LOCK(*atfork_locks[i]);</span><br><span class="line">__malloc_atfork(<span class="number">-1</span>);</span><br><span class="line">__tl_lock();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">pthread_t</span> self=__pthread_self(), next=self-&gt;next;</span><br><span class="line"><span class="type">pid_t</span> ret = _Fork();</span><br><span class="line"><span class="type">int</span> errno_save = errno;</span><br><span class="line"><span class="keyword">if</span> (need_locks) &#123;</span><br><span class="line"><span class="keyword">if</span> (!ret) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">pthread_t</span> td=next; td!=self; td=td-&gt;next)</span><br><span class="line">td-&gt;tid = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (__vmlock_lockptr) &#123;</span><br><span class="line">__vmlock_lockptr[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">__vmlock_lockptr[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">__tl_unlock();</span><br><span class="line">__malloc_atfork(!ret);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">sizeof</span> atfork_locks/<span class="keyword">sizeof</span> *atfork_locks; i++)</span><br><span class="line"><span class="keyword">if</span> (*atfork_locks[i])</span><br><span class="line"><span class="keyword">if</span> (ret) UNLOCK(*atfork_locks[i]);</span><br><span class="line"><span class="keyword">else</span> **atfork_locks[i] = <span class="number">0</span>;</span><br><span class="line">__release_ptc();</span><br><span class="line">__ldso_atfork(!ret);</span><br><span class="line">&#125;</span><br><span class="line">__restore_sigs(&amp;<span class="built_in">set</span>);</span><br><span class="line">__fork_handler(!ret);</span><br><span class="line"><span class="keyword">if</span> (ret&lt;<span class="number">0</span>) errno = errno_save;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>不需要参数</li><li>需要的头文件&lt;sys&#x2F;types.h&gt; 和 &lt;unistd.h&gt;</li><li>返回值分两种情况：<ol><li>返回0表示成功创建子进程，并且接下来进入子进程执行流程</li><li>返回PID(&gt;0)，成功创建子进程，并且继续执行父进程流程代码</li><li>返回非正数(&lt;0)，创建子进程失败，失败的原因主要有进程数超过系统所能创建的上限，ENGAIN系统内存不足</li></ol></li></ol><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TB    init[Initial process] --&gt; fork[Fork]    fork -.Returns a new PID.-&gt; original[Original Process Continues]    fork -.Returns zero .-&gt; new[New Process]  </pre></div><p>&emsp;&emsp;使用fork()函数得到的子进程是父进程的一个复制品，它从父进程处继承了整个进程的地址空间：包括进程上下文(进程执行活动全过程的静态描述)、进程堆栈，打开的文件描述符、信号控制设定、进程优先级、进程组号等。子进程所独有的只有它的进程号，计时器等（只要少量信息）。因此，使用fork()函数的代价是很大的。</p><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ol><li>什么情况下Zygote进程会重启呢？</li></ol><ul><li>servicemanager进程被杀</li><li>(onresart)surfacelinger进程被杀</li><li>(onresart)Zygote进程自己被杀</li><li>(oneshot&#x3D;false)system_server进程被杀(waitpid)</li></ul><ol start="2"><li>子进程与父进程的区别</li></ol><ul><li>除了文件锁以外，其他的锁都会被继承</li><li>各自的进程ID和父进程ID不同</li><li>子进程的未决告警被清除</li><li>子进程的未决信号集设置为空集</li></ul><ol start="3"><li>写时拷贝(copy-on-write)</li></ol><p>&emsp;&emsp;Linux的fork()使用是通过写时拷贝(copy-on-write)实现。写时拷贝是一种可以推迟甚至避免拷贝数据的技术。内核此时并不复制地址空间，从而使各个进行拥有各自的地址空间。资源的复制是在需要写入的时候才会进行，在此之前，只有以读写方式共享</p><ol start="4"><li>孤儿进程、僵尸进程</li></ol><p>&emsp;&emsp;fork系统调用之后，父子进程将交替执行，执行顺序不定。如果父进程先退出，子进程还没退出。那么子进程的父进程将变为init进程(托孤给了init进程)。(注：任何一个进程都必须有父进程)如果子进程先退出，父进程还没退出，那么子进程必须等到父进程捕获到了子进程的退出状态才真正结束，否则这个时候子进程就成为僵尸进程(只保留一些退出信息供父进程查询)</p><ol start="5"><li>多线程进程的Fork调用</li></ol><p>&emsp;&emsp;在POSIX标准中，fork的行为是这样的：复制整个用户空间的数据(通常使用copy-on-write的策略，所以可以实现的速度很快)以及所有系统对象，然后仅复制当前线程到子线程。这里：所有父进程中别的线程，到了子进程中都是突然蒸发掉的。</p><p>&emsp;&emsp;假设这么一个环境，在fork之前，有一个子线程lock了某个锁，获得了对锁的所有权。fork以后，在子进程中，所有的额外线程都人间蒸发了。而锁却被正常复制了，在子进程看来，这个锁没有主人，所以没有任何人可以对它解锁。当子进程想unlock这个锁时，不再有任何手段可以解开。程序发生死锁。</p><h3 id="常见面试题"><a href="#常见面试题" class="headerlink" title="常见面试题"></a>常见面试题</h3><ol><li>你了解Android系统启动流程吗？</li></ol><p>&emsp;&emsp;当按下电源键触发开机，首先会从ROM中预定义的地方加载引导程序BootLoader到RAM中，并执行BootLoader程序启动Linux Kernel，然后启动用户级别的第一个进程:init进程。init进程会解析init.rc脚本做一些初始化工作，包括挂载文件系统、创建工作目录以及启动系统服务进程等，其中系统服务进程包括Zygote、service manager、media等。在Zygote中会进一步去启动system_server进程，然后在system_server进程中会启动AMS、WMS、PMS等服务，这些服务启动之后，AMS中就会打开Launcher应用的home Activity,最终就看到了手机的“桌面”</p><ol start="2"><li>system_server为什么要在Zygote中启动，而不是由Init直接启动呢？</li></ol><p>&emsp;&emsp;Zygote作为一个孵化器，可以提前加载一些资源，这样fork()时基于Copy-On-Write机制创建的其他进程就能直接使用这些资源，而不用重新加载。比如system_server就可以直接使用Zygote中的JNI函数、共享库、常用类以及主题资源。</p><ol start="3"><li>为什么要专门使用Zygote进程去孵化应用进程，而不是让system_server去孵化呢？</li></ol><p>&emsp;&emsp;首先system_server相比Zygote多运行了AMS、WMS等服务，对一些应用程序来说不是必需的。最重要的是进程的fork()对多线程不友好，只会将发起调用的线程拷贝到子进程，可能会导致死锁。</p><ol start="4"><li>能说说具体是怎么导致死锁的吗？</li></ol><p>&emsp;&emsp;在POSIX标准中(可移植操作系统接口Portable Operating System Interface of UNIX)，fork的行为是这样的：复制整个用户空间的数据(通常使用copy-on-write的策略，所以可以实现的速度很快)以及所有系统对象，然后仅复制当前线程到子进程。这里：所有父进程中别的线程，到了子进程中都是突然蒸发掉的。对于锁来说，从OS看，每一个锁都有一个所有着，即最后一次lock它的线程。假设这么一个环境，在fork之前，有一个子线程lock了某个锁，获得了锁的所有权。fork以后，在子进程中，所有的额外线程都人间蒸发了。而锁却被正常复制了，在子进程看来，这个锁没有主任，所有没有任何人可以对它解锁。当子进程想lock这个锁时，不再有任何手段可以解开了。程序发生死锁</p><ol start="5"><li>Zygote为什么不采用Binder机制进行IPC通信？</li></ol><p>&emsp;&emsp;Binder机制中存在Binder线程池，是多线程的，如果Zygote采用Binder的话存在fork()与多线程的问题。严格来说，Binder机制不一定要多线程，所谓的Binder线程只不过是在循环读取Binder驱动的消息而已，只注册一个Binder线程也是可以工作的，比如service manager就是这样的。实际上Zygote尽管没有采取Binder机制，它也不是单线程的，蛋挞在fork前主动停止了其他线程，fork后重新启动了。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AndroidTV遥控以及协议浅析</title>
      <link href="/2023/12/01/AndroidTV%E9%81%A5%E6%8E%A7%E4%BB%A5%E5%8F%8A%E5%8D%8F%E8%AE%AE%E6%B5%85%E6%9E%90/"/>
      <url>/2023/12/01/AndroidTV%E9%81%A5%E6%8E%A7%E4%BB%A5%E5%8F%8A%E5%8D%8F%E8%AE%AE%E6%B5%85%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<ul><li>前言<ul><li>失之东隅，收之桑榆</li></ul></li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/zhanxingshan007/article/details/81096124">android 红外遥控器实现原理</a></li><li><a href="https://blog.csdn.net/shmily_jing/article/details/100881886">Android红外及蓝牙遥控器适配流程</a></li></ul><p>&emsp;&emsp;<font color=red>本文中的所有内容大部分来源于网络资料，如有侵权请联系本人修改或删除，请大家多多支持原创!非常感谢！</font></p><h1 id="1-海思红外遥控"><a href="#1-海思红外遥控" class="headerlink" title="1. 海思红外遥控"></a>1. 海思红外遥控</h1><ul><li>adb 调试相关命令<ul><li>cat &#x2F;proc&#x2F;bus&#x2F;input&#x2F;devices 查看input设备</li><li>dumpsys input 查看input设备</li><li>gatevent -l 查看输入event事件</li></ul></li></ul><h2 id="1-1-遥控器逻辑过程以及源码分析"><a href="#1-1-遥控器逻辑过程以及源码分析" class="headerlink" title="1.1 遥控器逻辑过程以及源码分析"></a>1.1 遥控器逻辑过程以及源码分析</h2><ul><li>逻辑过程<ul><li>从xml中获取物理键值，配对解析</li><li>linux的标准键值</li><li>自定义的字符串</li><li>定义这个字符串</li><li>android标准键值</li><li>android键值上报</li><li>按键事件处理</li></ul></li></ul><h3 id="1-1-1-协议相关"><a href="#1-1-1-协议相关" class="headerlink" title="1.1.1 协议相关"></a>1.1.1 协议相关</h3><ul><li>涉及模块<ul><li>device&#x2F;hisilicon&#x2F;bigfish&#x2F;sdk&#x2F;source&#x2F;msp&#x2F;drv&#x2F;ir&#x2F;ir_s2</li><li>device&#x2F;hisilicon&#x2F;bigfish&#x2F;system&#x2F;ir_user&#x2F;key_pars</li></ul></li></ul><p>&emsp;&emsp;有需求才有产品，有产品才有代码。上一篇文章<a href="https://serendipity.fit/2023/11/27/AndroidTv%E9%81%A5%E6%8E%A7%E6%A8%A1%E6%8B%9F%E5%99%A8app/">遥控模拟App</a>简单的介绍了三种协议，这里我们着重分析一下海思红外协议。主要是我们当前的产品无法配置SONY协议，因为SONY的遥控的遥控器头码有点特殊，按照正常情况下应该要高位补位，将解析出来的数据码进行上报。这里就简单分析一下SONY协议相关源码解析。</p><p>&emsp;&emsp;这里只需要关心几个文件即可(SONY上报的数据位不正确，这里分析SONY协议)</p><ul><li>device&#x2F;hisilicon&#x2F;bigfish&#x2F;sdk&#x2F;source&#x2F;msp&#x2F;drv&#x2F;ir&#x2F;ir_s2&#x2F;drv_ir_protocols_descript.h</li><li>device&#x2F;hisilicon&#x2F;bigfish&#x2F;sdk&#x2F;source&#x2F;msp&#x2F;drv&#x2F;ir&#x2F;ir_s2&#x2F;drv_ir_protocol_entry.c</li><li>device&#x2F;hisilicon&#x2F;bigfish&#x2F;sdk&#x2F;source&#x2F;msp&#x2F;drv&#x2F;ir&#x2F;ir_s2&#x2F;drv_ir_sony.c</li></ul><p>&emsp;&emsp;drv_ir_protocols_descript.h中，定义所有支持的协议，然后根据不同的协议进行解析。以NEC协议为例，在drv_ir_protocols_descript.h中定义了NEC协议的相关属性。比如开始的header，burst，repeat等。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) Huawei Technologies Co., Ltd. 2012-2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">NOTE:</span> When you are adding a protocol to this array,</span></span><br><span class="line"><span class="comment"> * please make sure there are no header phase are simlar</span></span><br><span class="line"><span class="comment"> * and wanna_bits is the same.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If the case descripted before happened,</span></span><br><span class="line"><span class="comment"> * you should consider the two infra code are the same,</span></span><br><span class="line"><span class="comment"> * and its no necessary to add the new code.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * - Becareful to modify the factor of header/burst/repeat header.</span></span><br><span class="line"><span class="comment"> *   The factor of these too large will due to one protocol may</span></span><br><span class="line"><span class="comment"> *   parsed as another.</span></span><br><span class="line"><span class="comment"> * Author: DPT_BSP</span></span><br><span class="line"><span class="comment"> * Create: 2018-12-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IR_PROTOCOLS_DESCRIPT_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IR_PROTOCOLS_DESCRIPT_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_priv.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_protocol.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> <span class="title">g_ir_protocols</span>[] =</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NEC_SUPPORT</span></span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * NEC simple repeate constains</span></span><br><span class="line"><span class="comment">     * uPD6121G/D6121/BU5777/D1913</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,             <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = NEC_SIMPLE_UPD6121G,   <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_COMSIMPLE,                  <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">9000</span>, <span class="number">4500</span>, <span class="number">10</span> &#125;, <span class="comment">/* header phase */</span>  <span class="comment">//维沃遥控反应慢把10 改到50</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;, <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,        <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">560</span>,  <span class="number">560</span>,   <span class="number">50</span> &#125;,   <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">560</span>,  <span class="number">1690</span>,  <span class="number">50</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">560</span>,  <span class="number">48800</span>, <span class="number">50</span> &#125;, <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">9000</span>, <span class="number">2250</span>,  <span class="number">20</span> &#125;, <span class="comment">/* repeate phase */</span>  <span class="comment">//维沃遥控反应慢把20 改到50</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">560</span>,  <span class="number">98500</span>, <span class="number">50</span> &#125;,    <span class="comment">/* repeate burst phase */</span>  </span><br><span class="line">            .wanna_bits = <span class="number">32</span>,              <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">33</span>             <span class="comment">/* burst at */</span>   <span class="comment">//维沃遥控反应慢把33 改到32</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = nec_match,       <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,               <span class="comment">/* private data */</span></span><br><span class="line">        .handle = nec_frame_parse, <span class="comment">/* fram parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">300</span>,    <span class="comment">/* key_hold_timeout_time */</span>   <span class="comment">//维沃遥控反应慢把300 改到120</span></span><br><span class="line">        .disabled = <span class="number">0</span>                   <span class="comment">/* num:0: enable; 1: disable */</span>  <span class="comment">//如果不行尝试把0 改成1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* dezhou */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = NEC_FULL,        <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_COMFULL,        <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;               <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">3500</span>, <span class="number">1700</span>, <span class="number">25</span> &#125;,   <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,      <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,          <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">400</span>, <span class="number">400</span>, <span class="number">50</span> &#125;,     <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">400</span>, <span class="number">1350</span>, <span class="number">50</span> &#125;,    <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">400</span>, <span class="number">100000</span>, <span class="number">25</span> &#125;,   <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">655350</span>, <span class="number">655350</span>, <span class="number">20</span> &#125;, <span class="comment">/* repeate phase: dezhou doesn&#x27;t have it */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">400</span>, <span class="number">100000</span>, <span class="number">50</span>&#125;,         <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">48</span>,         <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">49</span>        <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = nec_match,          <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">4</span>,              <span class="comment">/* private data */</span></span><br><span class="line">        .handle = nec_frame_parse,       <span class="comment">/* frame parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">300</span>,     <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                   <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NECJVC_SUPPORT</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                              <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = NEC_JVC,                   <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_NECJVC,                     <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">8400</span>, <span class="number">4200</span>, <span class="number">10</span> &#125;,  <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,   <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,          <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">526</span>, <span class="number">526</span>,    <span class="number">20</span> &#125;,    <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">526</span>, <span class="number">1574</span>,   <span class="number">20</span> &#125;,   <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">526</span>, <span class="number">655350</span>, <span class="number">50</span> &#125;, <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">526</span>, <span class="number">35900</span>,  <span class="number">20</span> &#125;,  <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">16</span>,                  <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">0</span>                 <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = nec_jvc_match,       <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,                   <span class="comment">/* private data */</span></span><br><span class="line">        .handle = nec_jvc_frame_parse, <span class="comment">/* fram parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">0</span>,       <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                    <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SAMSUNG_SUPPORT</span></span><br><span class="line">    <span class="comment">/* samsung */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                          <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = SAMSUNG,                         <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_SAMSUNG,                 <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">4500</span>, <span class="number">4500</span>, <span class="number">10</span> &#125;, <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,        <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,                  <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">560</span>,  <span class="number">560</span>,   <span class="number">50</span> &#125;,   <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">560</span>,  <span class="number">1690</span>,  <span class="number">50</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">560</span>,  <span class="number">40000</span>, <span class="number">40</span> &#125;, <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">0</span>, <span class="number">0</span>,  <span class="number">0</span> &#125;, <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">32</span>,                 <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">32</span>                  <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = samsung_match,              <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,                         <span class="comment">/* private data */</span></span><br><span class="line">        .handle = samsung_frame_parse, <span class="comment">/* frame parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">300</span>,           <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                          <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SONY_SUPPORT</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* sony d7c5 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                          <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = SONY_D7C5,                      <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_SONY,                   <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">2400</span>, <span class="number">600</span>, <span class="number">20</span> &#125;,  <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,        <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,                  <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">600</span>,  <span class="number">600</span>,   <span class="number">20</span> &#125;,   <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">1200</span>, <span class="number">600</span>,   <span class="number">20</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">600</span>,  <span class="number">25000</span>, <span class="number">20</span> &#125;, <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst =  &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">12</span>,                 <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">12</span>                  <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = sony_match,            <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,                     <span class="comment">/* private data */</span></span><br><span class="line">        .handle = sony_frame_full_parse, <span class="comment">/* frame parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">0</span>,     <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                   <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RC6_SUPPORT</span></span><br><span class="line">    <span class="comment">/* rc62 */</span> <span class="comment">/* philips dvd player */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,       <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = RC6_16BIT,   <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_RC6, <span class="comment">/* protocol */</span></span><br><span class="line">        <span class="comment">//    | INFR_HAS_ERR_HANDLE,    /* flag */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">2666</span>, <span class="number">889</span>, <span class="number">30</span> &#125;, <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,       <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,                 <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">0</span>, <span class="number">0</span>,     <span class="number">0</span> &#125;,       <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">0</span>, <span class="number">0</span>,     <span class="number">0</span> &#125;,       <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">0</span>, <span class="number">40000</span>, <span class="number">50</span> &#125;,  <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">16</span>,                <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">16</span>                 <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = rc6_match, <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,         <span class="comment">/* private data */</span></span><br><span class="line">        .handle = rc6_frame_parse, <span class="comment">/* frame parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">220</span>,       <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>          <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RC5_SUPPORT</span></span><br><span class="line">    <span class="comment">/* rc5 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                         <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = RC5_14BIT,                     <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_RC5,                   <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">889</span>, <span class="number">889</span>, <span class="number">20</span> &#125;,   <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,        <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,                  <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">889</span>, <span class="number">889</span>,   <span class="number">50</span> &#125;,   <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">889</span>, <span class="number">889</span>,   <span class="number">50</span> &#125;,   <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">889</span>, <span class="number">40000</span>, <span class="number">50</span> &#125;, <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst =  &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">14</span>,                 <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">11</span>                  <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = rc5_match,              <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,                      <span class="comment">/* private data */</span></span><br><span class="line">        .handle = rc5_frame_parse,              <span class="comment">/* frame parser */</span></span><br><span class="line">        .key_hold_timeout_time =  <span class="number">0</span>,  <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> KALE_SUPPORT</span></span><br><span class="line">    <span class="comment">/* KALE */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,         <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = KALE,          <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_KALE,  <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">3000</span>, <span class="number">3000</span>, <span class="number">10</span> &#125;, <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">500</span>, <span class="number">4000</span>, <span class="number">10</span> &#125;,  <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">17</span>,             <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">500</span>, <span class="number">1500</span>,  <span class="number">10</span> &#125;,  <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">500</span>, <span class="number">2500</span>,  <span class="number">10</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">500</span>, <span class="number">10000</span>, <span class="number">10</span> &#125;, <span class="comment">/* no use */</span></span><br><span class="line">            .repeat = &#123; <span class="number">0</span>,   <span class="number">0</span>,     <span class="number">0</span> &#125;,        <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst =  &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">16</span>,                 <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">18</span>                  <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = kale_match,       <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,                <span class="comment">/* private data */</span></span><br><span class="line">        .handle = kale_frame_parse, <span class="comment">/* fram parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">0</span>,  <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RCA_SUPPORT</span></span><br><span class="line">    <span class="comment">/* RCA */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                          <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = RCA,                            <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_RCA,                    <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">4000</span>, <span class="number">4000</span>, <span class="number">10</span> &#125;, <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,        <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,                  <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">560</span>, <span class="number">1000</span>, <span class="number">50</span> &#125;,  <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">560</span>, <span class="number">2000</span>, <span class="number">50</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">560</span>, <span class="number">8000</span>, <span class="number">50</span> &#125;,  <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">560</span>, <span class="number">50000</span>, <span class="number">50</span> &#125;,    <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">24</span>,                <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">24</span>              <span class="comment">/* burst at .because no header,so data in 0~14,burst at 15 */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = rca_match,       <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,               <span class="comment">/* private data */</span></span><br><span class="line">        .handle = rca_frame_parse, <span class="comment">/* fram parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">220</span>,  <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                  <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> MITSUBISHI_SUPPORT</span></span><br><span class="line">    <span class="comment">/* MITSUBISHI */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                  <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name = MITSUBISHI,     <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_MITSUBISHI,      <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">8000</span>, <span class="number">4000</span>, <span class="number">10</span> &#125;, <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">500</span>, <span class="number">4000</span>, <span class="number">20</span> &#125;, <span class="comment">/* The first sync bit */</span></span><br><span class="line">            .second_header_at = <span class="number">8</span>,         <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">500</span>, <span class="number">500</span>, <span class="number">20</span> &#125;,  <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">500</span>, <span class="number">1500</span>, <span class="number">20</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">500</span>, <span class="number">18000</span>, <span class="number">20</span> &#125;,  <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">0</span>,   <span class="number">0</span>,    <span class="number">0</span>&#125;,        <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">0</span>,    <span class="number">0</span>,      <span class="number">0</span> &#125;,    <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">16</span>,                 <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">16</span>                  <span class="comment">/* burst at .because no header,so data in 0~14,burst at 15 */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = mitsubishi_match,       <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,               <span class="comment">/* private data */</span></span><br><span class="line">        .handle = mitsubishi_frame_parse, <span class="comment">/* fram parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">300</span>,             <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> TC9012_SUPPORT</span></span><br><span class="line">    <span class="comment">/* tc9012 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .node = &#123; <span class="number">0</span> &#125;,                          <span class="comment">/* list */</span></span><br><span class="line">        .ir_code_name =TC9012,                         <span class="comment">/* protocol name */</span></span><br><span class="line">        .idx = IR_PROT_TC9012,                 <span class="comment">/* protocol */</span></span><br><span class="line">        .attr =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* protocol attr */</span></span><br><span class="line">            .header = &#123; <span class="number">4500</span>, <span class="number">4500</span>, <span class="number">10</span> &#125;, <span class="comment">/* header phase */</span></span><br><span class="line">            .second_header = &#123; <span class="number">560</span>, <span class="number">40000</span>, <span class="number">20</span> &#125;,        <span class="comment">/* second header */</span></span><br><span class="line">            .second_header_at = <span class="number">0</span>,                  <span class="comment">/* second header at */</span></span><br><span class="line">            .b0 = &#123; <span class="number">560</span>,  <span class="number">560</span>,   <span class="number">50</span> &#125;,   <span class="comment">/* b0 phase */</span></span><br><span class="line">            .b1 = &#123; <span class="number">560</span>,  <span class="number">1690</span>,  <span class="number">50</span> &#125;,  <span class="comment">/* b1 phase */</span></span><br><span class="line">            .burst = &#123; <span class="number">560</span>,  <span class="number">59000</span>, <span class="number">40</span> &#125;, <span class="comment">/* burst phase */</span></span><br><span class="line">            .repeat = &#123; <span class="number">4500</span>, <span class="number">4500</span>,  <span class="number">10</span> &#125;, <span class="comment">/* repeate phase */</span></span><br><span class="line">            .repeat_burst = &#123; <span class="number">560</span>,  <span class="number">107000</span>, <span class="number">50</span> &#125;,   <span class="comment">/* repeate burst phase */</span></span><br><span class="line">            .wanna_bits = <span class="number">32</span>,                 <span class="comment">/* wanna bits */</span></span><br><span class="line">            .burst_offset = <span class="number">33</span>                  <span class="comment">/* burst at */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .match = tc9012_match,              <span class="comment">/* phase matcher */</span></span><br><span class="line">        .priv = <span class="number">0</span>,                         <span class="comment">/* private data */</span></span><br><span class="line">        .handle = tc9012_frame_parse, <span class="comment">/* frame parser */</span></span><br><span class="line">        .key_hold_timeout_time = <span class="number">300</span>,     <span class="comment">/* key_hold_timeout_time, 0 means using the default value */</span></span><br><span class="line">        .disabled = <span class="number">0</span>                     <span class="comment">/* num:0: enable; 1: disable */</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SOYBEAN_SUPPORT</span></span><br><span class="line">    <span class="comment">/* SOYBEAN */</span></span><br><span class="line">    &#123;</span><br><span class="line">        .idx = IR_PROT_USER_DEFINED1,</span><br><span class="line">        .ir_code_name = <span class="string">&quot;SOYBEAN&quot;</span>,</span><br><span class="line">        .match = soybean_match,</span><br><span class="line">        .handle = soybean_frame_parse,</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* DO NOT REMOVE THIS. */</span></span><br><span class="line">    &#123; &#123; <span class="number">0</span> &#125;, <span class="literal">NULL</span>, IR_PROT_BUTT, &#123; &#123; <span class="number">0</span> &#125; &#125;, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;drv_ir_protocol_entry.c这里做的一件事就是ir_protocol_init注册协议，然后当按键按下的时候根据波形的结构体，先去匹配头，查看是否有匹配的协议，然后调用对应的解析函数。按下去的一瞬间会产生4-5个波形，所以足够正确解析出对应的协议。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) Huawei Technologies Co., Ltd. 2012-2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> * Description:drv_ir_protocol_entry.c</span></span><br><span class="line"><span class="comment"> * Author: DPT_BSP</span></span><br><span class="line"><span class="comment"> * Create: 2011-11-29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_priv.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_protocol.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_utils.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_protocols_descript.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;securec.h&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> <span class="title">g_ir_prot_head</span>;</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/* store the max &amp; min value of pluse and space to minx and maxx */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mm_ps(phase, minp, maxp, mins, maxs)                                   \</span></span><br><span class="line"><span class="meta">    do &#123;                                                                       \</span></span><br><span class="line"><span class="meta">    (minp) = ((HI_U32)(phase)-&gt;pluse) * (100 - ((phase)-&gt;factor)) / 100;         \</span></span><br><span class="line"><span class="meta">    (maxp) = ((HI_U32)(phase)-&gt;pluse) * (100 + ((phase)-&gt;factor)) / 100;         \</span></span><br><span class="line"><span class="meta">    (mins) = ((HI_U32)(phase)-&gt;space) * (100 - ((phase)-&gt;factor)) / 100;         \</span></span><br><span class="line"><span class="meta">    (maxs) = ((HI_U32)(phase)-&gt;space) * (100 + ((phase)-&gt;factor)) / 100;         \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ir_protocol_check</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">c</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">ci</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    hi_info_func_enter();</span><br><span class="line">    <span class="keyword">if</span> ((ip-&gt;node.next != <span class="literal">NULL</span>) &amp;&amp; (ip-&gt;node.prev != <span class="literal">NULL</span>)</span><br><span class="line">        &amp;&amp; (ip-&gt;node.next != &amp;ip-&gt;node)</span><br><span class="line">                  &amp;&amp; (ip-&gt;node.prev != &amp;ip-&gt;node)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;protocol may be link to somewhere,&quot;</span></span><br><span class="line">                   <span class="string">&quot;ip-&gt;node.next:%p,ip-&gt;node.prev:%p!\n&quot;</span>,</span><br><span class="line">                   ip-&gt;node.next, ip-&gt;node.prev);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;ir_code_name == <span class="literal">NULL</span> || ip-&gt;match == <span class="literal">NULL</span> || ip-&gt;handle == <span class="literal">NULL</span></span><br><span class="line">        || (ip-&gt;idx &gt;= IR_PROT_BUTT)) &#123;</span><br><span class="line">        hi_info_func_exit();</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (osal_list_empty(&amp;g_ir_prot_head)) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    osal_list_for_each(c, &amp;g_ir_prot_head) &#123;</span><br><span class="line">        ci = osal_list_entry(c, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line">        <span class="keyword">if</span> (((ci-&gt;idx == ip-&gt;idx) &amp;&amp; (ci-&gt;priv == ip-&gt;priv))) &#123;</span><br><span class="line">            HI_LOG_ERR(<span class="string">&quot;protocol(%s)&#x27;s private data have been used by %s!\n&quot;</span>, ip-&gt;ir_code_name, ci-&gt;ir_code_name);</span><br><span class="line">            <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __UBOOT__</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(ci-&gt;ir_code_name, ip-&gt;ir_code_name)) &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="keyword">if</span> (!osal_strncmp(ci-&gt;ir_code_name, <span class="built_in">strlen</span>(ip-&gt;ir_code_name), ip-&gt;ir_code_name,</span><br><span class="line">                          <span class="built_in">strlen</span>(ip-&gt;ir_code_name))) &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">            HI_LOG_ERR(<span class="string">&quot;%s have been registered or used!\n&quot;</span>, ip-&gt;ir_code_name);</span><br><span class="line">            <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    hi_info_func_exit();</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">init_mmps</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    hi_info_func_enter();</span><br><span class="line"></span><br><span class="line">    mm_ps(&amp;ip-&gt;attr.header, ip-&gt;attr.header.minp, ip-&gt;attr.header.maxp,</span><br><span class="line">          ip-&gt;attr.header.mins, ip-&gt;attr.header.maxs);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;attr.second_header.pluse || ip-&gt;attr.second_header.space) &#123;</span><br><span class="line">        mm_ps(&amp;ip-&gt;attr.second_header, ip-&gt;attr.second_header.minp,</span><br><span class="line">              ip-&gt;attr.second_header.maxp, ip-&gt;attr.second_header.mins,</span><br><span class="line">              ip-&gt;attr.second_header.maxs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mm_ps(&amp;ip-&gt;attr.b0, ip-&gt;attr.b0.minp, ip-&gt;attr.b0.maxp, ip-&gt;attr.b0.mins,</span><br><span class="line">          ip-&gt;attr.b0.maxs);</span><br><span class="line"></span><br><span class="line">    mm_ps(&amp;ip-&gt;attr.b1, ip-&gt;attr.b1.minp, ip-&gt;attr.b1.maxp, ip-&gt;attr.b1.mins,</span><br><span class="line">          ip-&gt;attr.b1.maxs);</span><br><span class="line"></span><br><span class="line">    mm_ps(&amp;ip-&gt;attr.burst, ip-&gt;attr.burst.minp, ip-&gt;attr.burst.maxp,</span><br><span class="line">          ip-&gt;attr.burst.mins, ip-&gt;attr.burst.maxs);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;attr.repeat.pluse || ip-&gt;attr.repeat.space) &#123;</span><br><span class="line">        mm_ps(&amp;ip-&gt;attr.repeat, ip-&gt;attr.repeat.minp, ip-&gt;attr.repeat.maxp,</span><br><span class="line">              ip-&gt;attr.repeat.mins, ip-&gt;attr.repeat.maxs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;attr.repeat_burst.pluse || ip-&gt;attr.repeat_burst.space) &#123;</span><br><span class="line">        mm_ps(&amp;ip-&gt;attr.repeat_burst, ip-&gt;attr.repeat_burst.minp, ip-&gt;attr.repeat_burst.maxp,</span><br><span class="line">              ip-&gt;attr.repeat_burst.mins, ip-&gt;attr.repeat_burst.maxs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hi_info_func_exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">ir_register_normal</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">curr</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">prev</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">p</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;attr.second_header.pluse</span><br><span class="line">        || ip-&gt;attr.second_header.space) &#123;</span><br><span class="line">        osal_list_add(&amp;ip-&gt;node, &amp;g_ir_prot_head);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        prev = g_ir_prot_head.next;</span><br><span class="line">        osal_list_for_each(curr, &amp;g_ir_prot_head) &#123;</span><br><span class="line">            p = osal_list_entry(curr, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line">            <span class="keyword">if</span> (!p-&gt;attr.second_header.pluse &amp;&amp; !p-&gt;attr.second_header.space) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            prev = curr;</span><br><span class="line">        &#125;</span><br><span class="line">        osal_list_add(&amp;ip-&gt;node, prev);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">ir_register_rc6</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">curr</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">prev</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">p</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    prev = g_ir_prot_head.next;</span><br><span class="line">    osal_list_for_each(curr, &amp;g_ir_prot_head) &#123;</span><br><span class="line">        p = osal_list_entry(curr, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;idx &lt; IR_PROT_RC5) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (((p-&gt;idx == IR_PROT_RC6) &amp;&amp; (p-&gt;attr.wanna_bits &lt;= ip-&gt;attr.wanna_bits))</span><br><span class="line">            || (p-&gt;idx == IR_PROT_RC5) || (p-&gt;idx == IR_PROT_RC5X)) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        prev = curr;</span><br><span class="line">    &#125;</span><br><span class="line">    osal_list_add(&amp;ip-&gt;node, prev);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">ir_register_rc5_x</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">curr</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">prev</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">p</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    prev = g_ir_prot_head.next;</span><br><span class="line">    osal_list_for_each(curr, &amp;g_ir_prot_head) &#123;</span><br><span class="line">        p = osal_list_entry(curr, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line">        <span class="keyword">if</span> ((p-&gt;idx != IR_PROT_RC5) &amp;&amp; (p-&gt;idx != IR_PROT_RC5X)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (p-&gt;attr.wanna_bits &lt;= ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        prev = curr;</span><br><span class="line">    &#125;</span><br><span class="line">    osal_list_add(&amp;ip-&gt;node, prev);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ir_register_protocol</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    hi_info_func_enter();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ir_protocol_check(ip)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;ir_protocol_check(ip) failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    osal_spin_lock_irqsave(get_var_irlock(), &amp;flag);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    OSAL_INIT_LIST_HEAD(&amp;ip-&gt;node);</span><br><span class="line"></span><br><span class="line">    init_mmps(ip);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(ip-&gt;ir_code_name) &gt;= PROTOCOL_NAME_SZ) &#123;</span><br><span class="line">        ip-&gt;ir_code_name[PROTOCOL_NAME_SZ - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (osal_list_empty_careful(&amp;g_ir_prot_head)) &#123;</span><br><span class="line">        osal_list_add(&amp;ip-&gt;node, &amp;g_ir_prot_head);</span><br><span class="line">        <span class="keyword">goto</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* We need to do some sort.</span></span><br><span class="line"><span class="comment">     * Sort rules:</span></span><br><span class="line"><span class="comment">     * 1. Some protocol has obvious header/burst and</span></span><br><span class="line"><span class="comment">     * fix number of bits data, and has second header, will be set</span></span><br><span class="line"><span class="comment">     * in the first part of the list.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 2. Some protocol has obvious header/burst and</span></span><br><span class="line"><span class="comment">     * fix number of bits data, will be insert in the second part</span></span><br><span class="line"><span class="comment">     * of the list.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 3. rc6 will be insert in the third part.</span></span><br><span class="line"><span class="comment">     * 4. rc5 at the last.</span></span><br><span class="line"><span class="comment">     * 5. others at the end.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;idx &lt; IR_PROT_RC5) &#123;</span><br><span class="line">        ir_register_normal(ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ip-&gt;idx == IR_PROT_RC6) &#123;</span><br><span class="line">        ir_register_rc6(ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((ip-&gt;idx == IR_PROT_RC5) || (ip-&gt;idx == IR_PROT_RC5X)) &#123;</span><br><span class="line">        ir_register_rc5_x(ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        osal_list_add_tail(&amp;ip-&gt;node, &amp;g_ir_prot_head);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(ip-&gt;ir_code_name) &gt;= PROTOCOL_NAME_SZ) &#123;</span><br><span class="line">        ip-&gt;ir_code_name[PROTOCOL_NAME_SZ - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">out:</span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    osal_spin_unlock_irqrestore(get_var_irlock(), &amp;flag);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    hi_info_func_exit();</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ir_unregister_protocol</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> flag;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    hi_info_func_enter();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    osal_spin_lock_irqsave(get_var_irlock(), &amp;flag);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    osal_list_del(&amp;ip-&gt;node);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    osal_spin_unlock_irqrestore(get_var_irlock(), &amp;flag);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    hi_info_func_exit();</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> __ir_protocol_init(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NEC_SUPPORT</span></span><br><span class="line">    nec_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RC6_SUPPORT</span></span><br><span class="line">    rc6_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RC5_SUPPORT</span></span><br><span class="line">    rc5_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SONY_SUPPORT</span></span><br><span class="line">    sony_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> TC9012_SUPPORT</span></span><br><span class="line">    tc9012_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> CREDIT_SUPPORT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RCA_SUPPORT</span></span><br><span class="line">    rca_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> KALE_SUPPORT</span></span><br><span class="line">    kale_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SOYBEAN_SUPPORT</span></span><br><span class="line">    soybean_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NECJVC_SUPPORT</span></span><br><span class="line">    nec_jvc_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> MITSUBISHI_SUPPORT</span></span><br><span class="line">    mitsubishi_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SAMSUNG_SUPPORT</span></span><br><span class="line">    samsung_init();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ir_protocol_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, cnt;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">ip</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line">    osal_spinlock *buffer_lock = get_var_buffer_lock();</span><br><span class="line">    osal_spinlock *irlock = get_var_irlock();</span><br><span class="line">    osal_spin_lock_init(irlock);</span><br><span class="line">    osal_spin_lock_init(buffer_lock);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    hi_info_func_enter();</span><br><span class="line">    OSAL_INIT_LIST_HEAD(&amp;g_ir_prot_head);</span><br><span class="line"></span><br><span class="line">    cnt = <span class="keyword">sizeof</span>(g_ir_protocols) / <span class="keyword">sizeof</span>(g_ir_protocols[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">        ip = &amp;g_ir_protocols[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ip-&gt;ir_code_name == <span class="literal">NULL</span> || ip-&gt;match == <span class="literal">NULL</span> || ip-&gt;handle == <span class="literal">NULL</span></span><br><span class="line">            || (ip-&gt;idx == IR_PROT_BUTT)) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ir_register_protocol(ip)) &#123;</span><br><span class="line">            HI_LOG_ERR(<span class="string">&quot;fail to regist protocol %s\n&quot;</span>, ip-&gt;ir_code_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!i) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;no protocols registered!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    __ir_protocol_init();</span><br><span class="line">    hi_info_func_exit();</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __ir_protocol_exit(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NEC_SUPPORT</span></span><br><span class="line">    nec_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RC6_SUPPORT</span></span><br><span class="line">    rc6_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RC5_SUPPORT</span></span><br><span class="line">    rc5_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SONY_SUPPORT</span></span><br><span class="line">    sony_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> TC9012_SUPPORT</span></span><br><span class="line">    tc9012_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> CREDIT_SUPPORT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> KALE_SUPPORT</span></span><br><span class="line">    kale_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SOYBEAN_SUPPORT</span></span><br><span class="line">    soybean_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> RCA_SUPPORT</span></span><br><span class="line">    rca_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> NECJVC_SUPPORT</span></span><br><span class="line">    nec_jvc_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> MITSUBISHI_SUPPORT</span></span><br><span class="line">    mitsubishi_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SAMSUNG_SUPPORT</span></span><br><span class="line">    samsung_exit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ir_protocol_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">ip</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    hi_info_func_enter();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!osal_list_empty_careful(&amp;g_ir_prot_head)) &#123;</span><br><span class="line">        ip = osal_list_first_entry(&amp;g_ir_prot_head, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line"></span><br><span class="line">        (<span class="type">void</span>)ir_unregister_protocol(ip);</span><br><span class="line">    &#125;</span><br><span class="line">    __ir_protocol_exit();</span><br><span class="line">    hi_info_func_exit();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ir_protocol *<span class="title function_">ir_prot_first</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">ip</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (osal_list_empty_careful(&amp;g_ir_prot_head)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ip = osal_list_first_entry(&amp;g_ir_prot_head, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ir_protocol *<span class="title function_">ir_prot_next</span><span class="params">(<span class="keyword">struct</span> ir_protocol *curr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">osal_list_head</span> *<span class="title">c</span> =</span> &amp;curr-&gt;node;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_protocol</span> *<span class="title">ip</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (osal_list_is_last(c, &amp;g_ir_prot_head)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    c = curr-&gt;node.next;</span><br><span class="line">    ip = osal_list_entry(c, <span class="keyword">struct</span> ir_protocol, node);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ir_prot_valid</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (ip &amp;&amp; ip-&gt;ir_code_name &amp;&amp; ip-&gt;idx != IR_PROT_BUTT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Simply check the pluse and space of this key</span></span><br><span class="line"><span class="comment"> * is fall in the special phase&#x27;s pluse and space.</span></span><br><span class="line"><span class="comment"> * return 0 while match, others not match.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">NOTE:</span> call this routine is not correct</span></span><br><span class="line"><span class="comment"> * if phase is not exist or is not completely exist</span></span><br><span class="line"><span class="comment"> *  (both pluse and space) in a symbol sequence.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">key_match_phase</span><span class="params">(<span class="keyword">struct</span> key_attr *key, <span class="keyword">struct</span> phase_attr *phase)</span></span><br><span class="line">&#123;</span><br><span class="line">    HI_U32 min, max;</span><br><span class="line"></span><br><span class="line">    hi_dbg_func_enter();</span><br><span class="line"></span><br><span class="line">    min = phase-&gt;minp;</span><br><span class="line">    max = phase-&gt;maxp;</span><br><span class="line"></span><br><span class="line">    hi_dbg_print_u32(phase-&gt;minp);</span><br><span class="line">    hi_dbg_print_u32(phase-&gt;maxp);</span><br><span class="line">    hi_dbg_print_u32((HI_U32)key-&gt;lower);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)key-&gt;lower, min, max)) &#123;</span><br><span class="line">        min = phase-&gt;mins;</span><br><span class="line">        max = phase-&gt;maxs;</span><br><span class="line"></span><br><span class="line">        hi_dbg_print_u32(phase-&gt;mins);</span><br><span class="line">        hi_dbg_print_u32(phase-&gt;maxs);</span><br><span class="line">        hi_dbg_print_u32((HI_U32)key-&gt;upper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (data_fallin((HI_U32)key-&gt;upper, min, max)) &#123;</span><br><span class="line">            hi_dbg_func_exit();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hi_dbg_func_exit();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXPORT_SYMBOL(ir_register_protocol);</span><br><span class="line">EXPORT_SYMBOL(ir_unregister_protocol);</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里以SONY协议为例，原代码是正常能够解析出SONY的协议头并注册使用相关的匹配框架的。从sony_frame_match满足IR_MATCH_MATCH进入sony_frame_full_parser整个框架解析，然后是sony_header_match头部匹配，sony_key_parse开始解析sony_data_parse，sony_key_parse每次读取一个Bit数据，然后将其给key_lower，最终我们得到的数据就是key_lower,比如xml中的value值是0x010001,那么key_lower就是0x10001。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) Huawei Technologies Co., Ltd. 2012-2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> * Description:drv_ir_sony.c</span></span><br><span class="line"><span class="comment"> * Author: DPT_BSP</span></span><br><span class="line"><span class="comment"> * Create: 2018-12-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_osal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;securec.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_priv.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_protocol.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_utils.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_report.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/* store the max &amp; min value of pluse and space to minx and maxx */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mm_ps(phase, minp, maxp, mins, maxs) \</span></span><br><span class="line"><span class="meta">    do &#123;                                     \</span></span><br><span class="line"><span class="meta">        (minp) = (phase)-&gt;minp;                \</span></span><br><span class="line"><span class="meta">        (maxp) = (phase)-&gt;maxp;                \</span></span><br><span class="line"><span class="meta">        (mins) = (phase)-&gt;mins;                \</span></span><br><span class="line"><span class="meta">        (maxs) = (phase)-&gt;maxs;                \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_REPEAT_INTERVAL_TIME 300 <span class="comment">/* The repeat interval is 300ms */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_NORMAL_BURST 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_FINAL_BURST  1</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> <span class="title">g_sony_last_key</span>[<span class="title">MAX_SONY_INFR_NR</span>];</span></span><br><span class="line"><span class="type">static</span> osal_timer g_sony_timer[MAX_SONY_INFR_NR];</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">sony_keyup_proc</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">last_key</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_priv</span> *<span class="title">ir_local</span> =</span> get_var_ir_local();</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony keyup timer, i &gt; MAX_SONY_INFR_NR!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    last_key = &amp;g_sony_last_key[i];</span><br><span class="line">    <span class="keyword">if</span> ((last_key-&gt;lower || last_key-&gt;upper)</span><br><span class="line">        &amp;&amp; last_key-&gt;key_stat != KEY_STAT_UP) &#123;</span><br><span class="line">        last_key-&gt;key_stat = KEY_STAT_UP;</span><br><span class="line">        <span class="keyword">if</span> (ir_local-&gt;key_up_event) &#123;</span><br><span class="line">            ir_insert_key_tail(ir_local-&gt;key_buf, last_key);</span><br><span class="line">            osal_wait_wakeup(&amp;(ir_local-&gt;read_wait));</span><br><span class="line">        &#125;</span><br><span class="line">        last_key-&gt;lower = last_key-&gt;upper = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sony_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SONY_INFR_NR; i++) &#123;</span><br><span class="line">        osal_timer_init(&amp;g_sony_timer[i]);</span><br><span class="line">        g_sony_timer[i].data = (<span class="type">unsigned</span> <span class="type">long</span>)~<span class="number">0</span>;</span><br><span class="line">        g_sony_timer[i].handler = sony_keyup_proc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    size = MAX_SONY_INFR_NR * <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr);</span><br><span class="line">    <span class="keyword">if</span> (EOK != memset_s(g_sony_last_key, size, <span class="number">0</span>, size)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_last_key memset_s error!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sony_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SONY_INFR_NR; i++) &#123;</span><br><span class="line">        osal_timer_del(&amp;g_sony_timer[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> print_mm_sp(phase, name)        \</span></span><br><span class="line"><span class="meta">    do &#123;                                \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_str(name);          \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;minp); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;maxp); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;mins); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;maxs); \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_header_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    symbol = &amp;buf-&gt;buf[buf-&gt;reader];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.header)) &#123;</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, header not match! ip at:%p&quot;</span></span><br><span class="line">               <span class="string">&quot; header[p, s, f]: [%d, %d, %d],&quot;</span></span><br><span class="line">               <span class="string">&quot; key[l, u]:[%d, %d]\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, ip,</span><br><span class="line">               ip-&gt;attr.header.pluse,</span><br><span class="line">               ip-&gt;attr.header.space,</span><br><span class="line">               ip-&gt;attr.header.factor,</span><br><span class="line">               (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper);</span><br><span class="line">    print_mm_sp(&amp;ip-&gt;attr.header, <span class="string">&quot;header&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_data_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, i, j;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* try find burst. */</span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d,idx:%d header match!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">        n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = i + buf-&gt;reader + <span class="number">1</span>; i &lt; ip-&gt;attr.wanna_bits &amp;&amp; j != n;</span><br><span class="line">         i++, j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">            j -= MAX_SYMBOL_NUM;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (j == n) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        symbol = &amp;buf-&gt;buf[j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!symbol-&gt;lower &amp;&amp; !symbol-&gt;upper) &#123;</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NEED_MORE_DATA;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* check data phase is exceed or not */</span></span><br><span class="line">        <span class="keyword">if</span> (key_match_phase(symbol, &amp;ip-&gt;attr.b0)</span><br><span class="line">            &amp;&amp; key_match_phase(symbol, &amp;ip-&gt;attr.b1)) &#123;</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, checking burst at(%d)!\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, n);</span><br><span class="line">    symbol = &amp;buf-&gt;buf[n];</span><br><span class="line">    <span class="keyword">if</span> (!symbol-&gt;upper &amp;&amp; !symbol-&gt;lower) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, needs more data\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NEED_MORE_DATA;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_burst_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> minp, maxp;</span><br><span class="line">    <span class="comment">/* SONY frame burst may constains b0&#x27;s pluse or b1&#x27;s pluse</span></span><br><span class="line"><span class="comment">    * and space will &gt; 20000.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">        n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line">    symbol = &amp;buf-&gt;buf[n];</span><br><span class="line">    minp = ip-&gt;attr.b0.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b1.maxp;</span><br><span class="line">    <span class="keyword">if</span> (((HI_U32)symbol-&gt;lower &gt;= minp) &amp;&amp; ((HI_U32)symbol-&gt;lower &lt;= maxp)</span><br><span class="line">        &amp;&amp; ((HI_U32) symbol-&gt;upper &gt;= ip-&gt;attr.burst.mins)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, frame burst match!\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d. burst not match!&quot;</span></span><br><span class="line">                   <span class="string">&quot; key[l, u][%d, %d],&quot;</span></span><br><span class="line">                   <span class="string">&quot; burst[p, s, f]: [%d, %d, %d]\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv,</span><br><span class="line">                   (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                   ip-&gt;attr.burst.pluse,</span><br><span class="line">                   ip-&gt;attr.burst.space,</span><br><span class="line">                   ip-&gt;attr.burst.factor);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_frame_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* header match? */</span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, checking header!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">    ret = sony_header_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    ret = sony_data_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* burst match? */</span></span><br><span class="line">    ret = sony_burst_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* to see a frame is a full frame or a repeat frame */</span></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_match</span><span class="params">(<span class="keyword">enum</span> IR_MATCH_TYPE type,</span></span><br><span class="line"><span class="params">                                <span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;priv &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony , private data error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    symbol = &amp;buf-&gt;buf[buf-&gt;reader];</span><br><span class="line">    <span class="keyword">if</span> (!symbol-&gt;upper &amp;&amp; !symbol-&gt;lower) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, key empty!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_HEADER:</span><br><span class="line">            <span class="keyword">return</span> sony_header_match(buf, ip);</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_FRAME:</span><br><span class="line">            <span class="keyword">return</span> sony_frame_match(buf, ip);</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_BURST:</span><br><span class="line">        <span class="comment">/* fall though */</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_last_data_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> key_attr *key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> minp, maxp;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sony_last_data_cnt = ip-&gt;attr.wanna_bits - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    symbol = &amp;rd-&gt;buf[rd-&gt;reader];</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, meets burst, i:%d, ip-&gt;attr.wanna_bits:%d, rd-&gt;reader:%d!\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, sony_last_data_cnt, ip-&gt;attr.wanna_bits, rd-&gt;reader);</span><br><span class="line">    minp = ip-&gt;attr.b1.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b1.maxp;</span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)symbol-&gt;lower, minp, maxp)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, burst constains bit1!\n&quot;</span>, __func__, __LINE__);</span><br><span class="line">        <span class="keyword">if</span> (sony_last_data_cnt &lt; <span class="number">64</span>) &#123; <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">            key-&gt;lower |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; sony_last_data_cnt);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            key-&gt;upper |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>)</span><br><span class="line">                &lt;&lt; (sony_last_data_cnt - <span class="number">64</span>)); <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    minp = ip-&gt;attr.b0.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b0.maxp;</span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)symbol-&gt;lower, minp, maxp)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, burst constains bit0!\n&quot;</span>, __func__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_data_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> key_attr *key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    HI_U32 bit_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line">    <span class="comment">/* data phase */</span></span><br><span class="line">    symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse data(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    <span class="keyword">while</span> (symbol != <span class="literal">NULL</span> &amp;&amp; symbol-&gt;upper &amp;&amp; symbol-&gt;lower &amp;&amp; bit_cnt &lt; ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.b0)) &#123;</span><br><span class="line">            symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">            bit_cnt++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.b1)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bit_cnt &lt; <span class="number">64</span>) &#123; <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">                key-&gt;lower |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; bit_cnt);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                key-&gt;upper |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; (bit_cnt - <span class="number">64</span>)); <span class="comment">/* 64 is threshold */</span></span><br><span class="line">            &#125;</span><br><span class="line">            symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">            bit_cnt++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* meats burst. */</span></span><br><span class="line">        <span class="keyword">if</span> (bit_cnt + <span class="number">1</span> == ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">            ret = sony_last_data_parse(ip, rd, key);</span><br><span class="line">            <span class="keyword">if</span> (ret == <span class="number">0</span>) &#123;</span><br><span class="line">                bit_cnt++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        HI_LOG_INFO(<span class="string">&quot;SONY : unkown symbol[l, u]: [%d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; b0[p, s, f]: [%d, %d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; b1[p, s, f]: [%d, %d, %d]. Assume to 0!\n&quot;</span>,</span><br><span class="line">                    (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                    ip-&gt;attr.b0.pluse, ip-&gt;attr.b0.space,</span><br><span class="line">                    ip-&gt;attr.b0.factor,</span><br><span class="line">                    ip-&gt;attr.b1.pluse, ip-&gt;attr.b1.space,</span><br><span class="line">                    ip-&gt;attr.b1.factor);</span><br><span class="line">        bit_cnt++;</span><br><span class="line">        symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_burst_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> mins, maxs;</span><br><span class="line"></span><br><span class="line">    symbol = ir_reader_inc(rd);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse burst(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    mins = ip-&gt;attr.burst.mins;</span><br><span class="line">    maxs = ip-&gt;attr.burst.maxs;</span><br><span class="line">    <span class="keyword">if</span> (symbol &amp;&amp; ((!data_fallin((HI_U32)symbol-&gt;lower, ip-&gt;attr.b0.minp, ip-&gt;attr.b0.maxp) &amp;&amp;</span><br><span class="line">                             !data_fallin((HI_U32)symbol-&gt;lower, ip-&gt;attr.b1.minp, ip-&gt;attr.b1.maxp))</span><br><span class="line">                            || (symbol-&gt;upper &lt; maxs &amp;&amp; !data_fallin((HI_U32)symbol-&gt;upper, mins, maxs)))) &#123;</span><br><span class="line">        HI_LOG_INFO(<span class="string">&quot;SONY : unkown symbol[l, u]: [%d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; burst[p, s, f]: [%d, %d, %d].\n&quot;</span>,</span><br><span class="line">                    (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                    ip-&gt;attr.burst.pluse, ip-&gt;attr.burst.space,</span><br><span class="line">                    ip-&gt;attr.burst.factor);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (symbol-&gt;upper &gt; maxs) &#123;</span><br><span class="line">        <span class="keyword">return</span> SONY_FINAL_BURST;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SONY_NORMAL_BURST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_key_parse</span><span class="params">(<span class="keyword">struct</span> ir_priv *ir, <span class="keyword">struct</span> ir_protocol *ip,</span></span><br><span class="line"><span class="params">    <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> ir_buffer *wr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> <span class="title">key</span>;</span></span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* data phase */</span></span><br><span class="line">    <span class="keyword">if</span> (EOK != memset_s(&amp;key, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr), <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr))) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_frame_full_parse key memset_s error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    length = osal_min((HI_U32)<span class="built_in">strlen</span>(ip-&gt;ir_code_name), (HI_U32)(PROTOCOL_NAME_SZ - <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">if</span> (EOK != memcpy_s(key.protocol_name, PROTOCOL_NAME_SZ, ip-&gt;ir_code_name, length)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_frame_full_parse protocol_name memcpy_s err!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    key.protocol_name[length + <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    ret = sony_data_parse(ip, rd, &amp;key);</span><br><span class="line">    <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">        (HI_VOID)ir_next_reader_clr_inc(rd);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ret = sony_burst_parse(ip, rd);</span><br><span class="line">    <span class="keyword">if</span> (ret == SONY_FINAL_BURST) &#123;</span><br><span class="line">        ir_key_report(&amp;key, IR_NORMAL_FINAL_KEY, ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret == SONY_NORMAL_BURST) &#123;</span><br><span class="line">        ir_key_report(&amp;key, IR_NORMAL_KEY, ip);<span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) Huawei Technologies Co., Ltd. 2012-2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> * Description:drv_ir_sony.c</span></span><br><span class="line"><span class="comment"> * Author: DPT_BSP</span></span><br><span class="line"><span class="comment"> * Create: 2018-12-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_osal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;securec.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_priv.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_protocol.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_utils.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_report.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/* store the max &amp; min value of pluse and space to minx and maxx */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mm_ps(phase, minp, maxp, mins, maxs) \</span></span><br><span class="line"><span class="meta">    do &#123;                                     \</span></span><br><span class="line"><span class="meta">        (minp) = (phase)-&gt;minp;                \</span></span><br><span class="line"><span class="meta">        (maxp) = (phase)-&gt;maxp;                \</span></span><br><span class="line"><span class="meta">        (mins) = (phase)-&gt;mins;                \</span></span><br><span class="line"><span class="meta">        (maxs) = (phase)-&gt;maxs;                \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_REPEAT_INTERVAL_TIME 300 <span class="comment">/* The repeat interval is 300ms */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_NORMAL_BURST 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_FINAL_BURST  1</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> <span class="title">g_sony_last_key</span>[<span class="title">MAX_SONY_INFR_NR</span>];</span></span><br><span class="line"><span class="type">static</span> osal_timer g_sony_timer[MAX_SONY_INFR_NR];</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">sony_keyup_proc</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">last_key</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_priv</span> *<span class="title">ir_local</span> =</span> get_var_ir_local();</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony keyup timer, i &gt; MAX_SONY_INFR_NR!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    last_key = &amp;g_sony_last_key[i];</span><br><span class="line">    <span class="keyword">if</span> ((last_key-&gt;lower || last_key-&gt;upper)</span><br><span class="line">        &amp;&amp; last_key-&gt;key_stat != KEY_STAT_UP) &#123;</span><br><span class="line">        last_key-&gt;key_stat = KEY_STAT_UP;</span><br><span class="line">        <span class="keyword">if</span> (ir_local-&gt;key_up_event) &#123;</span><br><span class="line">            ir_insert_key_tail(ir_local-&gt;key_buf, last_key);</span><br><span class="line">            osal_wait_wakeup(&amp;(ir_local-&gt;read_wait));</span><br><span class="line">        &#125;</span><br><span class="line">        last_key-&gt;lower = last_key-&gt;upper = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sony_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SONY_INFR_NR; i++) &#123;</span><br><span class="line">        osal_timer_init(&amp;g_sony_timer[i]);</span><br><span class="line">        g_sony_timer[i].data = (<span class="type">unsigned</span> <span class="type">long</span>)~<span class="number">0</span>;</span><br><span class="line">        g_sony_timer[i].handler = sony_keyup_proc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    size = MAX_SONY_INFR_NR * <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr);</span><br><span class="line">    <span class="keyword">if</span> (EOK != memset_s(g_sony_last_key, size, <span class="number">0</span>, size)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_last_key memset_s error!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sony_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SONY_INFR_NR; i++) &#123;</span><br><span class="line">        osal_timer_del(&amp;g_sony_timer[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> print_mm_sp(phase, name)        \</span></span><br><span class="line"><span class="meta">    do &#123;                                \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_str(name);          \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;minp); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;maxp); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;mins); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;maxs); \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_header_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    symbol = &amp;buf-&gt;buf[buf-&gt;reader];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.header)) &#123;</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, header not match! ip at:%p&quot;</span></span><br><span class="line">               <span class="string">&quot; header[p, s, f]: [%d, %d, %d],&quot;</span></span><br><span class="line">               <span class="string">&quot; key[l, u]:[%d, %d]\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, ip,</span><br><span class="line">               ip-&gt;attr.header.pluse,</span><br><span class="line">               ip-&gt;attr.header.space,</span><br><span class="line">               ip-&gt;attr.header.factor,</span><br><span class="line">               (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper);</span><br><span class="line">    print_mm_sp(&amp;ip-&gt;attr.header, <span class="string">&quot;header&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_data_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, i, j;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* try find burst. */</span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d,idx:%d header match!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">        n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = i + buf-&gt;reader + <span class="number">1</span>; i &lt; ip-&gt;attr.wanna_bits &amp;&amp; j != n;</span><br><span class="line">         i++, j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">            j -= MAX_SYMBOL_NUM;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (j == n) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        symbol = &amp;buf-&gt;buf[j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!symbol-&gt;lower &amp;&amp; !symbol-&gt;upper) &#123;</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NEED_MORE_DATA;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* check data phase is exceed or not */</span></span><br><span class="line">        <span class="keyword">if</span> (key_match_phase(symbol, &amp;ip-&gt;attr.b0)</span><br><span class="line">            &amp;&amp; key_match_phase(symbol, &amp;ip-&gt;attr.b1)) &#123;</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, checking burst at(%d)!\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, n);</span><br><span class="line">    symbol = &amp;buf-&gt;buf[n];</span><br><span class="line">    <span class="keyword">if</span> (!symbol-&gt;upper &amp;&amp; !symbol-&gt;lower) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, needs more data\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NEED_MORE_DATA;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_burst_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> minp, maxp;</span><br><span class="line">    <span class="comment">/* SONY frame burst may constains b0&#x27;s pluse or b1&#x27;s pluse</span></span><br><span class="line"><span class="comment">    * and space will &gt; 20000.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">        n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line">    symbol = &amp;buf-&gt;buf[n];</span><br><span class="line">    minp = ip-&gt;attr.b0.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b1.maxp;</span><br><span class="line">    <span class="keyword">if</span> (((HI_U32)symbol-&gt;lower &gt;= minp) &amp;&amp; ((HI_U32)symbol-&gt;lower &lt;= maxp)</span><br><span class="line">        &amp;&amp; ((HI_U32) symbol-&gt;upper &gt;= ip-&gt;attr.burst.mins)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, frame burst match!\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d. burst not match!&quot;</span></span><br><span class="line">                   <span class="string">&quot; key[l, u][%d, %d],&quot;</span></span><br><span class="line">                   <span class="string">&quot; burst[p, s, f]: [%d, %d, %d]\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv,</span><br><span class="line">                   (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                   ip-&gt;attr.burst.pluse,</span><br><span class="line">                   ip-&gt;attr.burst.space,</span><br><span class="line">                   ip-&gt;attr.burst.factor);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_frame_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* header match? */</span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, checking header!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">    ret = sony_header_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    ret = sony_data_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* burst match? */</span></span><br><span class="line">    ret = sony_burst_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* to see a frame is a full frame or a repeat frame */</span></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_match</span><span class="params">(<span class="keyword">enum</span> IR_MATCH_TYPE type,</span></span><br><span class="line"><span class="params">                                <span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;priv &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony , private data error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    symbol = &amp;buf-&gt;buf[buf-&gt;reader];</span><br><span class="line">    <span class="keyword">if</span> (!symbol-&gt;upper &amp;&amp; !symbol-&gt;lower) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, key empty!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_HEADER:</span><br><span class="line">            <span class="keyword">return</span> sony_header_match(buf, ip);</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_FRAME:</span><br><span class="line">            <span class="keyword">return</span> sony_frame_match(buf, ip);</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_BURST:</span><br><span class="line">        <span class="comment">/* fall though */</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_last_data_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> key_attr *key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> minp, maxp;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sony_last_data_cnt = ip-&gt;attr.wanna_bits - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    symbol = &amp;rd-&gt;buf[rd-&gt;reader];</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, meets burst, i:%d, ip-&gt;attr.wanna_bits:%d, rd-&gt;reader:%d!\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, sony_last_data_cnt, ip-&gt;attr.wanna_bits, rd-&gt;reader);</span><br><span class="line">    minp = ip-&gt;attr.b1.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b1.maxp;</span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)symbol-&gt;lower, minp, maxp)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, burst constains bit1!\n&quot;</span>, __func__, __LINE__);</span><br><span class="line">        <span class="keyword">if</span> (sony_last_data_cnt &lt; <span class="number">64</span>) &#123; <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">            key-&gt;lower |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; sony_last_data_cnt);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            key-&gt;upper |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>)</span><br><span class="line">                &lt;&lt; (sony_last_data_cnt - <span class="number">64</span>)); <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    minp = ip-&gt;attr.b0.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b0.maxp;</span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)symbol-&gt;lower, minp, maxp)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, burst constains bit0!\n&quot;</span>, __func__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_data_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> key_attr *key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    HI_U32 bit_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line">    <span class="comment">/* data phase */</span></span><br><span class="line">    symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse data(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    <span class="keyword">while</span> (symbol != <span class="literal">NULL</span> &amp;&amp; symbol-&gt;upper &amp;&amp; symbol-&gt;lower &amp;&amp; bit_cnt &lt; ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.b0)) &#123;</span><br><span class="line">            symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">            bit_cnt++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.b1)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bit_cnt &lt; <span class="number">64</span>) &#123; <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">                key-&gt;lower |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; bit_cnt);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                key-&gt;upper |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; (bit_cnt - <span class="number">64</span>)); <span class="comment">/* 64 is threshold */</span></span><br><span class="line">            &#125;</span><br><span class="line">            symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">            bit_cnt++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* meats burst. */</span></span><br><span class="line">        <span class="keyword">if</span> (bit_cnt + <span class="number">1</span> == ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">            ret = sony_last_data_parse(ip, rd, key);</span><br><span class="line">            <span class="keyword">if</span> (ret == <span class="number">0</span>) &#123;</span><br><span class="line">                bit_cnt++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        HI_LOG_INFO(<span class="string">&quot;SONY : unkown symbol[l, u]: [%d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; b0[p, s, f]: [%d, %d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; b1[p, s, f]: [%d, %d, %d]. Assume to 0!\n&quot;</span>,</span><br><span class="line">                    (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                    ip-&gt;attr.b0.pluse, ip-&gt;attr.b0.space,</span><br><span class="line">                    ip-&gt;attr.b0.factor,</span><br><span class="line">                    ip-&gt;attr.b1.pluse, ip-&gt;attr.b1.space,</span><br><span class="line">                    ip-&gt;attr.b1.factor);</span><br><span class="line">        bit_cnt++;</span><br><span class="line">        symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_burst_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> mins, maxs;</span><br><span class="line"></span><br><span class="line">    symbol = ir_reader_inc(rd);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse burst(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    mins = ip-&gt;attr.burst.mins;</span><br><span class="line">    maxs = ip-&gt;attr.burst.maxs;</span><br><span class="line">    <span class="keyword">if</span> (symbol &amp;&amp; ((!data_fallin((HI_U32)symbol-&gt;lower, ip-&gt;attr.b0.minp, ip-&gt;attr.b0.maxp) &amp;&amp;</span><br><span class="line">                             !data_fallin((HI_U32)symbol-&gt;lower, ip-&gt;attr.b1.minp, ip-&gt;attr.b1.maxp))</span><br><span class="line">                            || (symbol-&gt;upper &lt; maxs &amp;&amp; !data_fallin((HI_U32)symbol-&gt;upper, mins, maxs)))) &#123;</span><br><span class="line">        HI_LOG_INFO(<span class="string">&quot;SONY : unkown symbol[l, u]: [%d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; burst[p, s, f]: [%d, %d, %d].\n&quot;</span>,</span><br><span class="line">                    (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                    ip-&gt;attr.burst.pluse, ip-&gt;attr.burst.space,</span><br><span class="line">                    ip-&gt;attr.burst.factor);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (symbol-&gt;upper &gt; maxs) &#123;</span><br><span class="line">        <span class="keyword">return</span> SONY_FINAL_BURST;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SONY_NORMAL_BURST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_key_parse</span><span class="params">(<span class="keyword">struct</span> ir_priv *ir, <span class="keyword">struct</span> ir_protocol *ip,</span></span><br><span class="line"><span class="params">    <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> ir_buffer *wr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> <span class="title">key</span>;</span></span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* data phase */</span></span><br><span class="line">    <span class="keyword">if</span> (EOK != memset_s(&amp;key, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr), <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr))) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_frame_full_parse key memset_s error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    length = osal_min((HI_U32)<span class="built_in">strlen</span>(ip-&gt;ir_code_name), (HI_U32)(PROTOCOL_NAME_SZ - <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">if</span> (EOK != memcpy_s(key.protocol_name, PROTOCOL_NAME_SZ, ip-&gt;ir_code_name, length)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_frame_full_parse protocol_name memcpy_s err!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    key.protocol_name[length + <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    ret = sony_data_parse(ip, rd, &amp;key);</span><br><span class="line">    <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">        (HI_VOID)ir_next_reader_clr_inc(rd);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ret = sony_burst_parse(ip, rd);</span><br><span class="line">    <span class="keyword">if</span> (ret == SONY_FINAL_BURST) &#123;</span><br><span class="line">        ir_key_report(&amp;key, IR_NORMAL_FINAL_KEY, ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret == SONY_NORMAL_BURST) &#123;</span><br><span class="line">        ir_key_report(&amp;key, IR_NORMAL_KEY, ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">/* need clear burst symbol? */</span></span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_frame_full_parse</span><span class="params">(<span class="keyword">struct</span> ir_priv *ir, <span class="keyword">struct</span> ir_protocol *ip,</span></span><br><span class="line"><span class="params">                          <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> ir_buffer *wr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;priv &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony , private data error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    osal_timer_del(&amp;g_sony_timer[ip-&gt;priv]);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse header(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    ret = sony_header_match(rd, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* key parse */</span></span><br><span class="line">    ret = sony_key_parse(ir, ip, rd, wr);</span><br><span class="line">    <span class="keyword">if</span> (ret != HI_SUCCESS) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(sony_match);</span><br><span class="line">EXPORT_SYMBOL(sony_frame_full_parse);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">/* need clear burst symbol? */</span></span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_frame_full_parse</span><span class="params">(<span class="keyword">struct</span> ir_priv *ir, <span class="keyword">struct</span> ir_protocol *ip,</span></span><br><span class="line"><span class="params">                          <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> ir_buffer *wr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;priv &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony , private data error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    osal_timer_del(&amp;g_sony_timer[ip-&gt;priv]);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse header(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    ret = sony_header_match(rd, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* key parse */</span></span><br><span class="line">    ret = sony_key_parse(ir, ip, rd, wr);</span><br><span class="line">    <span class="keyword">if</span> (ret != HI_SUCCESS) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(sony_match);</span><br><span class="line">EXPORT_SYMBOL(sony_frame_full_parse);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;实际情况并不是，而是高低位相反了，获取的数据位比如是000100100101,但是它解析出来的是101001001000。这些都是用示波器和代码调试测量出来的，知道了原因，就更改一下代码即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) Huawei Technologies Co., Ltd. 2012-2018. All rights reserved.</span></span><br><span class="line"><span class="comment"> * Description:drv_ir_sony.c</span></span><br><span class="line"><span class="comment"> * Author: DPT_BSP</span></span><br><span class="line"><span class="comment"> * Create: 2018-12-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_osal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;securec.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_priv.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_protocol.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_utils.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_ir_report.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __UBOOT__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/* store the max &amp; min value of pluse and space to minx and maxx */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mm_ps(phase, minp, maxp, mins, maxs) \</span></span><br><span class="line"><span class="meta">    do &#123;                                     \</span></span><br><span class="line"><span class="meta">        (minp) = (phase)-&gt;minp;                \</span></span><br><span class="line"><span class="meta">        (maxp) = (phase)-&gt;maxp;                \</span></span><br><span class="line"><span class="meta">        (mins) = (phase)-&gt;mins;                \</span></span><br><span class="line"><span class="meta">        (maxs) = (phase)-&gt;maxs;                \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_REPEAT_INTERVAL_TIME 300 <span class="comment">/* The repeat interval is 300ms */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_NORMAL_BURST 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SONY_FINAL_BURST  1</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> <span class="title">g_sony_last_key</span>[<span class="title">MAX_SONY_INFR_NR</span>];</span></span><br><span class="line"><span class="type">static</span> osal_timer g_sony_timer[MAX_SONY_INFR_NR];</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">sony_keyup_proc</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">last_key</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ir_priv</span> *<span class="title">ir_local</span> =</span> get_var_ir_local();</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony keyup timer, i &gt; MAX_SONY_INFR_NR!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    last_key = &amp;g_sony_last_key[i];</span><br><span class="line">    <span class="keyword">if</span> ((last_key-&gt;lower || last_key-&gt;upper)</span><br><span class="line">        &amp;&amp; last_key-&gt;key_stat != KEY_STAT_UP) &#123;</span><br><span class="line">        last_key-&gt;key_stat = KEY_STAT_UP;</span><br><span class="line">        <span class="keyword">if</span> (ir_local-&gt;key_up_event) &#123;</span><br><span class="line">            ir_insert_key_tail(ir_local-&gt;key_buf, last_key);</span><br><span class="line">            osal_wait_wakeup(&amp;(ir_local-&gt;read_wait));</span><br><span class="line">        &#125;</span><br><span class="line">        last_key-&gt;lower = last_key-&gt;upper = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sony_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SONY_INFR_NR; i++) &#123;</span><br><span class="line">        osal_timer_init(&amp;g_sony_timer[i]);</span><br><span class="line">        g_sony_timer[i].data = (<span class="type">unsigned</span> <span class="type">long</span>)~<span class="number">0</span>;</span><br><span class="line">        g_sony_timer[i].handler = sony_keyup_proc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    size = MAX_SONY_INFR_NR * <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr);</span><br><span class="line">    <span class="keyword">if</span> (EOK != memset_s(g_sony_last_key, size, <span class="number">0</span>, size)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_last_key memset_s error!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sony_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SONY_INFR_NR; i++) &#123;</span><br><span class="line">        osal_timer_del(&amp;g_sony_timer[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> print_mm_sp(phase, name)        \</span></span><br><span class="line"><span class="meta">    do &#123;                                \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_str(name);          \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;minp); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;maxp); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;mins); \</span></span><br><span class="line"><span class="meta">        hi_dbg_print_s32((phase)-&gt;maxs); \</span></span><br><span class="line"><span class="meta">    &#125; while (0)</span></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_header_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    symbol = &amp;buf-&gt;buf[buf-&gt;reader];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.header)) &#123;</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, header not match! ip at:%p&quot;</span></span><br><span class="line">               <span class="string">&quot; header[p, s, f]: [%d, %d, %d],&quot;</span></span><br><span class="line">               <span class="string">&quot; key[l, u]:[%d, %d]\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, ip,</span><br><span class="line">               ip-&gt;attr.header.pluse,</span><br><span class="line">               ip-&gt;attr.header.space,</span><br><span class="line">               ip-&gt;attr.header.factor,</span><br><span class="line">               (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper);</span><br><span class="line">    print_mm_sp(&amp;ip-&gt;attr.header, <span class="string">&quot;header&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_data_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, i, j;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* try find burst. */</span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d,idx:%d header match!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = i + buf-&gt;reader + <span class="number">1</span>; i &lt; <span class="number">20</span> ; i++, j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">            j -= MAX_SYMBOL_NUM;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        symbol = &amp;buf-&gt;buf[j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!symbol-&gt;lower &amp;&amp; !symbol-&gt;upper) &#123;</span><br><span class="line"><span class="keyword">if</span> (j - buf-&gt;reader &lt; <span class="number">0</span>)&#123;</span><br><span class="line">ip-&gt;attr.wanna_bits = j + MAX_SYMBOL_NUM - buf-&gt;reader - <span class="number">1</span>;</span><br><span class="line">ip-&gt;attr.burst_offset = j + MAX_SYMBOL_NUM - buf-&gt;reader - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ip-&gt;attr.wanna_bits = j- buf-&gt;reader - <span class="number">1</span>;</span><br><span class="line">ip-&gt;attr.burst_offset = j - buf-&gt;reader - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//HI_LOG_ERR(&quot;%s-&gt;%d, ip-&gt;attr.wanna_bits = %d ip-&gt;attr.burst_offset = %d \n&quot;, __func__, __LINE__, ip-&gt;attr.wanna_bits,ip-&gt;attr.burst_offset);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ip-&gt;attr.wanna_bits == <span class="number">15</span>)&#123;</span><br><span class="line"><span class="comment">//15bit</span></span><br><span class="line">ip-&gt;attr.burst.space = <span class="number">20000</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//12bit</span></span><br><span class="line">ip-&gt;attr.burst.space = <span class="number">25000</span>;</span><br><span class="line">&#125;</span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">       n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">        n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = i + buf-&gt;reader + <span class="number">1</span>; i &lt; ip-&gt;attr.wanna_bits &amp;&amp; j != n;</span><br><span class="line">         i++, j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">            j -= MAX_SYMBOL_NUM;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (j == n) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        symbol = &amp;buf-&gt;buf[j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!symbol-&gt;lower &amp;&amp; !symbol-&gt;upper) &#123;</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NEED_MORE_DATA;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* check data phase is exceed or not */</span></span><br><span class="line">        <span class="keyword">if</span> (key_match_phase(symbol, &amp;ip-&gt;attr.b0)</span><br><span class="line">            &amp;&amp; key_match_phase(symbol, &amp;ip-&gt;attr.b1)) &#123;</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, checking burst at(%d)!\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, n);</span><br><span class="line">    symbol = &amp;buf-&gt;buf[n];</span><br><span class="line">    <span class="keyword">if</span> (!symbol-&gt;upper &amp;&amp; !symbol-&gt;lower) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, needs more data\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NEED_MORE_DATA;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_burst_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> minp, maxp;</span><br><span class="line">    <span class="comment">/* SONY frame burst may constains b0&#x27;s pluse or b1&#x27;s pluse</span></span><br><span class="line"><span class="comment">    * and space will &gt; 20000.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    n = buf-&gt;reader + ip-&gt;attr.burst_offset;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= MAX_SYMBOL_NUM) &#123;</span><br><span class="line">        n -= MAX_SYMBOL_NUM;</span><br><span class="line">    &#125;</span><br><span class="line">    symbol = &amp;buf-&gt;buf[n];</span><br><span class="line">    minp = ip-&gt;attr.b0.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b1.maxp;</span><br><span class="line">    <span class="keyword">if</span> (((HI_U32)symbol-&gt;lower &gt;= minp) &amp;&amp; ((HI_U32)symbol-&gt;lower &lt;= maxp)</span><br><span class="line">        &amp;&amp; ((HI_U32) symbol-&gt;upper &gt;= ip-&gt;attr.burst.mins)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, frame burst match!\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d. burst not match!&quot;</span></span><br><span class="line">                   <span class="string">&quot; key[l, u][%d, %d],&quot;</span></span><br><span class="line">                   <span class="string">&quot; burst[p, s, f]: [%d, %d, %d]\n&quot;</span>,</span><br><span class="line">                   __func__, __LINE__, ip-&gt;priv,</span><br><span class="line">                   (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                   ip-&gt;attr.burst.pluse,</span><br><span class="line">                   ip-&gt;attr.burst.space,</span><br><span class="line">                   ip-&gt;attr.burst.factor);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_frame_match</span><span class="params">(<span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* header match? */</span></span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, checking header!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">    ret = sony_header_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* check frame symbols */</span></span><br><span class="line">    ret = sony_data_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* burst match? */</span></span><br><span class="line">    ret = sony_burst_match(buf, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IR_MATCH_MATCH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* to see a frame is a full frame or a repeat frame */</span></span><br><span class="line"><span class="keyword">enum</span> IR_MATCH_RESULT <span class="title function_">sony_match</span><span class="params">(<span class="keyword">enum</span> IR_MATCH_TYPE type,</span></span><br><span class="line"><span class="params">                                <span class="keyword">struct</span> ir_buffer *buf, <span class="keyword">struct</span> ir_protocol *ip)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;priv &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony , private data error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    symbol = &amp;buf-&gt;buf[buf-&gt;reader];</span><br><span class="line">    <span class="keyword">if</span> (!symbol-&gt;upper &amp;&amp; !symbol-&gt;lower) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, idx:%d, key empty!\n&quot;</span>, __func__, __LINE__, ip-&gt;priv);</span><br><span class="line">        <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_HEADER:</span><br><span class="line">            <span class="keyword">return</span> sony_header_match(buf, ip);</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_FRAME:</span><br><span class="line">            <span class="keyword">return</span> sony_frame_match(buf, ip);</span><br><span class="line">        <span class="keyword">case</span> IR_MTT_BURST:</span><br><span class="line">        <span class="comment">/* fall though */</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> IR_MATCH_NOT_MATCH;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_last_data_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> key_attr *key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> minp, maxp;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sony_last_data_cnt = ip-&gt;attr.wanna_bits - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    symbol = &amp;rd-&gt;buf[rd-&gt;reader];</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, meets burst, i:%d, ip-&gt;attr.wanna_bits:%d, rd-&gt;reader:%d!\n&quot;</span>,</span><br><span class="line">               __func__, __LINE__, sony_last_data_cnt, ip-&gt;attr.wanna_bits, rd-&gt;reader);</span><br><span class="line">    minp = ip-&gt;attr.b1.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b1.maxp;</span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)symbol-&gt;lower, minp, maxp)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, burst constains bit1!\n&quot;</span>, __func__, __LINE__);</span><br><span class="line">        <span class="keyword">if</span> (sony_last_data_cnt &lt; <span class="number">64</span>) &#123; <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">            key-&gt;lower |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; (sony_last_data_cnt<span class="number">-7</span>));</span><br><span class="line">            <span class="comment">//key-&gt;lower |= (unsigned long long)(((unsigned long long)1) &lt;&lt; sony_last_data_cnt);</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            key-&gt;upper |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>)</span><br><span class="line">                &lt;&lt; (sony_last_data_cnt - <span class="number">64</span>)); <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    minp = ip-&gt;attr.b0.minp;</span><br><span class="line">    maxp = ip-&gt;attr.b0.maxp;</span><br><span class="line">    <span class="keyword">if</span> (data_fallin((HI_U32)symbol-&gt;lower, minp, maxp)) &#123;</span><br><span class="line">        HI_LOG_DBG(<span class="string">&quot;%s-&gt;%d, burst constains bit0!\n&quot;</span>, __func__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_data_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> key_attr *key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    HI_U32 bit_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"><span class="comment">/*zhouj add*/</span></span><br><span class="line"><span class="type">int</span> command = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> address = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*zhouj add*/</span></span><br><span class="line">    <span class="comment">/* data phase */</span></span><br><span class="line">    symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse data(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    <span class="keyword">while</span> (symbol != <span class="literal">NULL</span> &amp;&amp; symbol-&gt;upper &amp;&amp; symbol-&gt;lower &amp;&amp; bit_cnt &lt; ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.b0)) &#123;</span><br><span class="line">            symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">            bit_cnt++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!key_match_phase(symbol, &amp;ip-&gt;attr.b1)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bit_cnt &lt; <span class="number">64</span>) &#123; <span class="comment">/* 64 is threshold of lower and upper */</span></span><br><span class="line"><span class="keyword">if</span>(bit_cnt &lt; <span class="number">7</span>) &#123;</span><br><span class="line">command |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; bit_cnt);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">7</span> &lt;= bit_cnt &amp;&amp; bit_cnt &lt; <span class="number">15</span>) &#123;</span><br><span class="line">address |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; (bit_cnt<span class="number">-7</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//key-&gt;lower |= (unsigned long long)(((unsigned long long)1) &lt;&lt; bit_cnt);</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                key-&gt;upper |= (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>) &lt;&lt; (bit_cnt - <span class="number">64</span>)); <span class="comment">/* 64 is threshold */</span></span><br><span class="line">            &#125;</span><br><span class="line">            symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">            bit_cnt++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* meats burst. */</span></span><br><span class="line">        <span class="keyword">if</span> (bit_cnt + <span class="number">1</span> == ip-&gt;attr.wanna_bits) &#123;</span><br><span class="line">command = command &lt;&lt; <span class="number">16</span>;</span><br><span class="line"><span class="comment">//HI_LOG_ERR(&quot;%s-----command-&gt;0x%x address-&gt;0x%x \n&quot;, __func__, command,address);</span></span><br><span class="line">key-&gt;lower = command+address;</span><br><span class="line">command = <span class="number">0</span>;</span><br><span class="line">address = <span class="number">0</span>;</span><br><span class="line">            ret = sony_last_data_parse(ip, rd, key);</span><br><span class="line">            <span class="keyword">if</span> (ret == <span class="number">0</span>) &#123;</span><br><span class="line">                bit_cnt++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        HI_LOG_INFO(<span class="string">&quot;SONY : unkown symbol[l, u]: [%d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; b0[p, s, f]: [%d, %d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; b1[p, s, f]: [%d, %d, %d]. Assume to 0!\n&quot;</span>,</span><br><span class="line">                    (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                    ip-&gt;attr.b0.pluse, ip-&gt;attr.b0.space,</span><br><span class="line">                    ip-&gt;attr.b0.factor,</span><br><span class="line">                    ip-&gt;attr.b1.pluse, ip-&gt;attr.b1.space,</span><br><span class="line">                    ip-&gt;attr.b1.factor);</span><br><span class="line">        bit_cnt++;</span><br><span class="line">        symbol = ir_next_reader_clr_inc(rd);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_burst_parse</span><span class="params">(<span class="keyword">struct</span> ir_protocol *ip, <span class="keyword">struct</span> ir_buffer *rd)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> *<span class="title">symbol</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> mins, maxs;</span><br><span class="line"></span><br><span class="line">    symbol = ir_reader_inc(rd);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse burst(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    mins = ip-&gt;attr.burst.mins;</span><br><span class="line">    maxs = ip-&gt;attr.burst.maxs;</span><br><span class="line">    <span class="keyword">if</span> (symbol &amp;&amp; ((!data_fallin((HI_U32)symbol-&gt;lower, ip-&gt;attr.b0.minp, ip-&gt;attr.b0.maxp) &amp;&amp;</span><br><span class="line">                             !data_fallin((HI_U32)symbol-&gt;lower, ip-&gt;attr.b1.minp, ip-&gt;attr.b1.maxp))</span><br><span class="line">                            || (symbol-&gt;upper &lt; maxs &amp;&amp; !data_fallin((HI_U32)symbol-&gt;upper, mins, maxs)))) &#123;</span><br><span class="line">        HI_LOG_INFO(<span class="string">&quot;SONY : unkown symbol[l, u]: [%d, %d],&quot;</span></span><br><span class="line">                    <span class="string">&quot; burst[p, s, f]: [%d, %d, %d].\n&quot;</span>,</span><br><span class="line">                    (HI_U32)symbol-&gt;lower, (HI_U32)symbol-&gt;upper,</span><br><span class="line">                    ip-&gt;attr.burst.pluse, ip-&gt;attr.burst.space,</span><br><span class="line">                    ip-&gt;attr.burst.factor);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (symbol-&gt;upper &gt; maxs) &#123;</span><br><span class="line">        <span class="keyword">return</span> SONY_FINAL_BURST;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SONY_NORMAL_BURST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_key_parse</span><span class="params">(<span class="keyword">struct</span> ir_priv *ir, <span class="keyword">struct</span> ir_protocol *ip,</span></span><br><span class="line"><span class="params">    <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> ir_buffer *wr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_attr</span> <span class="title">key</span>;</span></span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* data phase */</span></span><br><span class="line">    <span class="keyword">if</span> (EOK != memset_s(&amp;key, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr), <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> key_attr))) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_frame_full_parse key memset_s error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    length = osal_min((HI_U32)<span class="built_in">strlen</span>(ip-&gt;ir_code_name), (HI_U32)(PROTOCOL_NAME_SZ - <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">if</span> (EOK != memcpy_s(key.protocol_name, PROTOCOL_NAME_SZ, ip-&gt;ir_code_name, length)) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony_frame_full_parse protocol_name memcpy_s err!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    key.protocol_name[length + <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    ret = sony_data_parse(ip, rd, &amp;key);</span><br><span class="line">    <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">        (HI_VOID)ir_next_reader_clr_inc(rd);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ret = sony_burst_parse(ip, rd);</span><br><span class="line">    <span class="keyword">if</span> (ret == SONY_FINAL_BURST) &#123;</span><br><span class="line">        ir_key_report(&amp;key, IR_NORMAL_FINAL_KEY, ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret == SONY_NORMAL_BURST) &#123;</span><br><span class="line">        ir_key_report(&amp;key, IR_NORMAL_KEY, ip);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">/* need clear burst symbol? */</span></span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sony_frame_full_parse</span><span class="params">(<span class="keyword">struct</span> ir_priv *ir, <span class="keyword">struct</span> ir_protocol *ip,</span></span><br><span class="line"><span class="params">                          <span class="keyword">struct</span> ir_buffer *rd, <span class="keyword">struct</span> ir_buffer *wr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ip-&gt;priv &gt;= MAX_SONY_INFR_NR) &#123;</span><br><span class="line">        HI_LOG_ERR(<span class="string">&quot;sony , private data error!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    osal_timer_del(&amp;g_sony_timer[ip-&gt;priv]);</span><br><span class="line">    HI_LOG_DBG(<span class="string">&quot;try parse header(at %d)!\n&quot;</span>, rd-&gt;reader);</span><br><span class="line">    ret = sony_header_match(rd, ip);</span><br><span class="line">    <span class="keyword">if</span> (ret != IR_MATCH_MATCH) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* key parse */</span></span><br><span class="line">    ret = sony_key_parse(ir, ip, rd, wr);</span><br><span class="line">    <span class="keyword">if</span> (ret != HI_SUCCESS) &#123;</span><br><span class="line">        <span class="keyword">return</span> HI_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(sony_match);</span><br><span class="line">EXPORT_SYMBOL(sony_frame_full_parse);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这样看起来可能不是很好看明白，这里推荐用beyond compare工具进行对比，就是更改了sony_data_match函数(主要是12位和15位的匹配)，还有sony_data_parse函数，这里就不贴出来了。</p><h3 id="1-1-2-配置分析"><a href="#1-1-2-配置分析" class="headerlink" title="1.1.2 配置分析"></a>1.1.2 配置分析</h3><p>&emsp;&emsp;我们来看一下红外遥控是怎么配置的， 位于.&#x2F;device&#x2F;hisilicon&#x2F;bigfish&#x2F;system&#x2F;ir_user&#x2F;key_pars&#x2F;key.xml，简单看一下配置内容:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key_xml</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">etegol-key</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 00bf --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x00bf00&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_POWER&quot;</span>       /&gt;</span>      <span class="comment">&lt;!-- --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x01bf00&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_MUTE&quot;</span>        /&gt;</span>      <span class="comment">&lt;!-- --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x02bf00&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_1&quot;</span>           /&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x60bf00&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_HOME&quot;</span>        /&gt;</span>      <span class="comment">&lt;!-- --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- more...--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">etegol-key</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">other-key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x020707&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_POWER&quot;</span>      /&gt;</span>      <span class="comment">&lt;!-- --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x010707&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_SOURCE&quot;</span>     /&gt;</span>      <span class="comment">&lt;!-- --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span> <span class="attr">value</span>=<span class="string">&quot;0x8B0707&quot;</span> <span class="attr">name</span>=<span class="string">&quot;KEY_MEDIA&quot;</span>      /&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- more...--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">other-key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">key_xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;可以看到，这里外层有个标签key_xml，然后里面又分为两个部分，一个是etegol-key，一个是other-key。在里面的配置中包含了一个key标签，这个key标签有两个属性value和name。valus是十六进制值，name是对应的按键名称。其中vaule的值是十六进制值，这里需要拆分来看，前两位是功能码(用户码)。后面的四位是系统地址码，代表着这个遥控的头码，前两位是高八位，后两位是低八位。name是按键名称。注意这里的name和framwork中的keyEvent.java中的定义是不一样的，但是是一一对应的关系。</p><p>&emsp;&emsp;简单分析这里的映射关系，首先是linux键值字符型与整型的关系：.&#x2F;device&#x2F;hisilicon&#x2F;bigfish&#x2F;system&#x2F;ir_user&#x2F;key_pars&#x2F;linux_key.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.</span></span><br><span class="line"><span class="comment"> * Description: parse key for virtualkeypad</span></span><br><span class="line"><span class="comment"> * Author: hisilicon</span></span><br><span class="line"><span class="comment"> * Create: 2012-01-01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* copy from kernel/include/input.h,do not change it */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LINUX_KEY_HEADER</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LINUX_KEY_HEADER</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> LINUX_KEYCODE_NAME_SIZE = <span class="number">48</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> LINUX_KEYCODE_ARY_SIZE = <span class="number">512</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">linux_keycode_</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> linux_keycode_name[LINUX_KEYCODE_NAME_SIZE];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> linux_keycode;</span><br><span class="line">&#125; linux_keycode_ary;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Keys and buttons</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Most of the keys/buttons are modeled after USB HUT 1.12</span></span><br><span class="line"><span class="comment"> * (see http://www.usb.org/developers/hidpage).</span></span><br><span class="line"><span class="comment"> * Abbreviations in the comments:</span></span><br><span class="line"><span class="comment"> * AC - Application Control</span></span><br><span class="line"><span class="comment"> * AL - Application Launch Button</span></span><br><span class="line"><span class="comment"> * SC - System Control</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">const</span> linux_keycode_ary g_linuxKeycodeArray[LINUX_KEYCODE_ARY_SIZE] = &#123;</span><br><span class="line">    &#123;<span class="string">&quot;KEY_RESERVED&quot;</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;KEY_ESC&quot;</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;KEY_1&quot;</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    <span class="comment">//more ...</span></span><br><span class="line">    &#123;<span class="string">&quot;KEY_HOME&quot;</span>, <span class="number">102</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;KEY_REC_LIST&quot;</span>, <span class="number">0x284</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;KEY_WIFI_SETTING&quot;</span>, <span class="number">0x285</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;KEY_RECALL&quot;</span>, <span class="number">0x2f0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;KEY_MIN_INTERESTING&quot;</span>, <span class="number">113</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;KEY_MAX&quot;</span>, <span class="number">0x2ff</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;KEY_CNT&quot;</span>, <span class="number">0x300</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;可以看到在g_linuxKeycodeArray数组中自定义的字符串KEY_HOME的整型数据是102，这个字符串就是我们在key.xml中配置的name。接着继续分析这个KEY_HOME的配置。</p><ul><li>涉及目录<ul><li>.&#x2F;device&#x2F;hisilicon&#x2F;bigfish&#x2F;prebuilts&#x2F;Vendor_0001_Product_0001.kl</li><li>.&#x2F;frameworks&#x2F;native&#x2F;libs&#x2F;input&#x2F;InputEventLabels.cpp(这里Android 9和Android 12的路径不一样，关键在于DEFINE_KEYCODE宏函数处理)</li><li>.&#x2F;frameworks&#x2F;native&#x2F;include&#x2F;android&#x2F;keycodes.h</li><li>.&#x2F;frameworks&#x2F;base&#x2F;core&#x2F;res&#x2F;res&#x2F;values&#x2F;attrs.xml</li><li>.&#x2F;frameworks&#x2F;base&#x2F;core&#x2F;java&#x2F;android&#x2F;view&#x2F;KeyEvent.java</li><li>.&#x2F;device&#x2F;hisilicon&#x2F;bigfish&#x2F;sdk&#x2F;source&#x2F;kernel&#x2F;linux-xx.y&#x2F;drivers&#x2F;hid&#x2F;hid-input.c</li><li>.&#x2F;device&#x2F;hisilicon&#x2F;bigfish&#x2F;sdk&#x2F;source&#x2F;kernel&#x2F;linux-xx.y&#x2F;include&#x2F;uapi&#x2F;linux&#x2F;input-event-codes.h</li><li>.&#x2F;bionic&#x2F;libc&#x2F;kernel&#x2F;uapi&#x2F;linux&#x2F;input-event-codes.h<br>&emsp;&emsp;Vendor_0001_Product_0001.kl是本次分析的默认红外加载的键盘映射文件(KeyLayout),用于定义输入设备的按键映射和行为。如果你不知道当前红外默认加载的是哪个kl文件，可以使用 dumpsys input 查看。这里的键码102映射到 Android 系统中的 HOME 键。再比如KEY_WIFI_SETTING，在linux_key.h文件中定义的是0x285,对应的十进制为645，这些键码是唯一的。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># more</span><br><span class="line">key 102   HOME</span><br><span class="line">key 645   KEY_WIFI_SETTING</span><br><span class="line"># more</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里对应的key 645与之后蓝牙使用的KEY_WIFI_SETTING是sdk下的kernel中的input-event-codes.h定义的，当然也可以直接在hid-input.c使用数值进行绑定，而bionic中的input-event-codes.h同步对应可以使得getevent -l 命令获取到当前的key event name。</p><p>&emsp;&emsp;在linux_key.h中自定义了一个字串，我们需要在InputEventLabels文件中定义这个字串。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_KEYCODE(key) &#123; #key, AKEYCODE_##key &#125;</span></span><br><span class="line"><span class="comment">//more</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEYCODES_SEQUENCE \</span></span><br><span class="line"><span class="meta">    DEFINE_KEYCODE(UNKNOWN), \</span></span><br><span class="line"><span class="meta">    DEFINE_KEYCODE(SOFT_LEFT), \</span></span><br><span class="line"><span class="meta">    DEFINE_KEYCODE(SOFT_RIGHT), \</span></span><br><span class="line"><span class="meta">    DEFINE_KEYCODE(HOME), \    <span class="comment">//more</span></span></span><br><span class="line">    DEFINE_KEYCODE(KEY_WIFI_SETTING)</span><br><span class="line"><span class="comment">//more</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里的处理比如说HOME这个按键，在xml中是KEY_HOME，在InputEventLabels.cpp中是AKEYCODE_HOME。这。它使用#操作符将key参数转换为字符串，同时使用AKEYCODE_##key表示一个在代码中预定义的键码。在keycodes.h定义这个AKEYCODE_HOME，查看keycodes.h，可以看到已经定义了AKEYCODE_HOME枚举。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.....</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Key codes.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    <span class="comment">/** Unknown key code. */</span></span><br><span class="line">    AKEYCODE_UNKNOWN         = <span class="number">0</span>,</span><br><span class="line">    <span class="comment">/** Soft Left key.</span></span><br><span class="line"><span class="comment">     * Usually situated below the display on phones and used as a multi-function</span></span><br><span class="line"><span class="comment">     * feature key for selecting a software defined function shown on the bottom left</span></span><br><span class="line"><span class="comment">     * of the display. */</span></span><br><span class="line">    AKEYCODE_SOFT_LEFT       = <span class="number">1</span>,</span><br><span class="line">    <span class="comment">/** Soft Right key.</span></span><br><span class="line"><span class="comment">     * Usually situated below the display on phones and used as a multi-function</span></span><br><span class="line"><span class="comment">     * feature key for selecting a software defined function shown on the bottom right</span></span><br><span class="line"><span class="comment">     * of the display. */</span></span><br><span class="line">    AKEYCODE_SOFT_RIGHT      = <span class="number">2</span>,</span><br><span class="line">    <span class="comment">/** Home key.</span></span><br><span class="line"><span class="comment">     * This key is handled by the framework and is never delivered to applications. */</span></span><br><span class="line">    AKEYCODE_HOME            = <span class="number">3</span>,</span><br><span class="line">    <span class="comment">//.....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;文件attrs.xml中的keycode标签的枚举数组和KeyEvent.java中就是定义静态常量就是我们在framework层响应的keyCode值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">KeyEvent</span> <span class="keyword">extends</span> <span class="title class_">InputEvent</span> <span class="keyword">implements</span> <span class="title class_">Parcelable</span> &#123;</span><br><span class="line">    <span class="comment">/** Key code constant: Unknown key code. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">KEYCODE_UNKNOWN</span>         <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/** Key code constant: Soft Left key.</span></span><br><span class="line"><span class="comment">     * Usually situated below the display on phones and used as a multi-function</span></span><br><span class="line"><span class="comment">     * feature key for selecting a software defined function shown on the bottom left</span></span><br><span class="line"><span class="comment">     * of the display. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">KEYCODE_SOFT_LEFT</span>       <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/** Key code constant: Soft Right key.</span></span><br><span class="line"><span class="comment">     * Usually situated below the display on phones and used as a multi-function</span></span><br><span class="line"><span class="comment">     * feature key for selecting a software defined function shown on the bottom right</span></span><br><span class="line"><span class="comment">     * of the display. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">KEYCODE_SOFT_RIGHT</span>      <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="comment">/** Key code constant: Home key.</span></span><br><span class="line"><span class="comment">     * This key is handled by the framework and is never delivered to applications. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">KEYCODE_HOME</span>            <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">    <span class="comment">//more.....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-总结"><a href="#2-总结" class="headerlink" title="2. 总结"></a>2. 总结</h1><p>&emsp;&emsp;学会使用工具，找准分析方向，不要畏惧，不要放弃。剩下关于蓝牙的配置可以参考下面的文章。</p>]]></content>
      
      
      <categories>
          
          <category> AndroidTV </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AndroidTv遥控模拟器app</title>
      <link href="/2023/11/27/AndroidTv%E9%81%A5%E6%8E%A7%E6%A8%A1%E6%8B%9F%E5%99%A8app/"/>
      <url>/2023/11/27/AndroidTv%E9%81%A5%E6%8E%A7%E6%A8%A1%E6%8B%9F%E5%99%A8app/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>前言<ul><li>不要让时代的悲哀成为你的悲哀。</li></ul></li></ul><h1 id="AndroidTv遥控模拟器app"><a href="#AndroidTv遥控模拟器app" class="headerlink" title="AndroidTv遥控模拟器app"></a>AndroidTv遥控模拟器app</h1><p>&emsp;&emsp;由于公司是做机顶盒开发的，经常需要定制客户的遥控功能，遥控的系统码那么多，又不可能全部都购买一个遥控器，或者让客户邮寄过来进行配置(主要是验证遥控码值的功能)，由于自己刚开始配不熟悉，有时候还因为修改了Key值，导致经常配错，又懒得去找遥控验证(实在不好找)，想到手机也有红外功能，能不能用手机来模拟波形，实现模拟遥控发射的波形，来检测自己的遥控是否正确，正好当时也在研究AndroidTV系统源码中如何适配SONY的遥控器，所以就开发了这个app。这里简单记录一下，软件是年初的时候做的。</p><p>&emsp;&emsp;目前所支持的协议就三种，NEC,SONY,SAMSUNG。下面先简单介绍一下这三种协议以及波形(当时示波器自己倒是全部捕捉过，更换了电脑系统，没及时记录)。</p><h2 id="1-NEC协议"><a href="#1-NEC协议" class="headerlink" title="1.NEC协议"></a>1.NEC协议</h2><ul><li>参考文章<ul><li><a href="https://blog.csdn.net/qq_43415898/article/details/107561498">NEC红外传输协议详解（含代码）</a></li><li><a href="https://blog.csdn.net/u013606261/article/details/112977378">红外协议 IR NEC 协议深度解析-简单易懂协议详解</a></li></ul></li></ul><p>&emsp;&emsp;NEC协议是现在比较常用的协议，也是最简单的协议。红外接受管有3个脚，一个接地，一个接VCC,一个信号输出脚，用示波器直接接信号输出脚，可以看到波形如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/2020072415202195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDE1ODk4,size_16,color_FFFFFF,t_70" alt="NEC波形"></p><p>&emsp;&emsp;其中 1-引导码，2-用户码,3-用户反码，4-数据码，5-数据反码，6-结束码。对于引导码部分是由9ms的低电平和4.5ms高电平组成，在2-5阶段每个阶段都会受到8位数据，对于低电平0则是约11.25ms（560us低电平,565us高电平），高电平1则是约2.24ms(560us低电平,1680us高电平),这就是数据位的0,1。而结束码部分则是25.60ms(5.6ms低电平,20ms这里使用作为单按的情况)。以上的高低电平都是固定的。</p><ul><li>Nec协议封装代码<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote.protocol;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ClassName  : NecPattern</span></span><br><span class="line"><span class="comment"> * Description  : 构造NEC协议的pattern编码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NecPattern</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//引导码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">startH</span> <span class="operator">=</span> <span class="number">9000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">startL</span> <span class="operator">=</span> <span class="number">4500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//结束码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">endL</span> <span class="operator">=</span> <span class="number">560</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">endH</span> <span class="operator">=</span> <span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//高电平</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">high8</span> <span class="operator">=</span> <span class="number">560</span>;</span><br><span class="line">    <span class="comment">//低电平0：1125</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low0</span> <span class="operator">=</span> <span class="number">565</span>;</span><br><span class="line">    <span class="comment">//低电平1：2250</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low1</span> <span class="operator">=</span> <span class="number">1690</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] pattern;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正常发码：引导码（9ms+4.5ms）+用户编码（高八位）+用户编码（低八位）+键数据码+键数据反码+结束码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] buildPattern(<span class="type">int</span> userCodeH, <span class="type">int</span> userCodeL, <span class="type">int</span> keyCode) &#123;</span><br><span class="line">        <span class="comment">//用户编码高八位00</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userH</span> <span class="operator">=</span> constructBinaryCode(userCodeH);</span><br><span class="line">        <span class="comment">//用户编码低八位DF</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userL</span> <span class="operator">=</span> constructBinaryCode(userCodeL);</span><br><span class="line">        <span class="comment">//数字码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> constructBinaryCode(keyCode);</span><br><span class="line">        <span class="comment">//数字反码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">keyReverse</span> <span class="operator">=</span> constructBinaryCode(~keyCode);</span><br><span class="line"></span><br><span class="line">        list.clear();</span><br><span class="line">        <span class="comment">//引导码</span></span><br><span class="line">        list.add(startH);</span><br><span class="line">        list.add(startL);</span><br><span class="line">        <span class="comment">//用户编码</span></span><br><span class="line">        changeAdd(userH);</span><br><span class="line">        changeAdd(userL);</span><br><span class="line">        <span class="comment">//键数据码</span></span><br><span class="line">        changeAdd(key);</span><br><span class="line">        <span class="comment">//键数据反码</span></span><br><span class="line">        changeAdd(keyReverse);</span><br><span class="line">        <span class="comment">//结束码</span></span><br><span class="line">        list.add(endL);</span><br><span class="line">        list.add(endH);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> list.size();</span><br><span class="line">        pattern = <span class="keyword">new</span> <span class="title class_">int</span>[size];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="comment">//Log.d(TAG, &quot;buildPattern: &quot; + list.get(i));</span></span><br><span class="line">            pattern[i] = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pattern;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 十六进制键值转化为二进制串，并逆转编码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyCode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">constructBinaryCode</span><span class="params">(<span class="type">int</span> keyCode)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">binaryStr</span> <span class="operator">=</span> convertToBinary(keyCode);</span><br><span class="line">        <span class="type">char</span>[] chars = binaryStr.toCharArray();</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">7</span>; i &gt;= <span class="number">4</span>; i--) &#123;</span><br><span class="line">            sb.append(chars[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">3</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            sb.append(chars[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数字转换为长度为8位的二进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">convertToBinary</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">binary</span> <span class="operator">=</span> Integer.toBinaryString(num);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb8</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="comment">//每个元素长度为8位，不够前面补充0</span></span><br><span class="line">        <span class="keyword">if</span> (binary.length() &lt; <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">8</span> - binary.length(); i++) &#123;</span><br><span class="line">                sb8.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">binaryStr8</span> <span class="operator">=</span> sb8.append(binary).toString();</span><br><span class="line">            <span class="keyword">return</span> binaryStr8;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">binaryStr8</span> <span class="operator">=</span> binary.substring(binary.length() - <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">return</span> binaryStr8;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二进制转成电平</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">changeAdd</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> code.length();</span><br><span class="line">        String part;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            list.add(high8);</span><br><span class="line">            part = code.substring(i, i + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (part.equals(<span class="string">&quot;0&quot;</span>))</span><br><span class="line">                list.add(low0);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                list.add(low1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-SANSUNG协议"><a href="#2-SANSUNG协议" class="headerlink" title="2.SANSUNG协议"></a>2.SANSUNG协议</h2><p>&emsp;&emsp;理解了NEC协议，SAMSUNG协议就很容易理解了。最好的方式是利用示波器进行测量，也可以通过现有的代码进行分析。通过对比我们得知，SAMSUNG协议的引导码部分和NEC协议的只有引导码部分不是一样的(载波都是38k)，4.5ms的低电平和4.5ms高电平。这里就不做赘述了。</p><ul><li>SANSUNG协议封装代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote.protocol;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ClassName  : NecPattern</span></span><br><span class="line"><span class="comment"> * Description  : 构造NEC协议的pattern编码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SANSUNGPattern</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//引导码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">startH</span> <span class="operator">=</span> <span class="number">4500</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">startL</span> <span class="operator">=</span> <span class="number">4500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//结束码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">endL</span> <span class="operator">=</span> <span class="number">560</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">endH</span> <span class="operator">=</span> <span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//高电平</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">high8</span> <span class="operator">=</span> <span class="number">560</span>;</span><br><span class="line">    <span class="comment">//低电平0：1125</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low0</span> <span class="operator">=</span> <span class="number">565</span>;</span><br><span class="line">    <span class="comment">//低电平1：2250</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low1</span> <span class="operator">=</span> <span class="number">1690</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] pattern;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 正常发码：引导码（9ms+4.5ms）+用户编码（高八位）+用户编码（低八位）+键数据码+键数据反码+结束码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] buildPattern(<span class="type">int</span> userCodeH, <span class="type">int</span> userCodeL, <span class="type">int</span> keyCode) &#123;</span><br><span class="line">        <span class="comment">//用户编码高八位00</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userH</span> <span class="operator">=</span> constructBinaryCode(userCodeH);</span><br><span class="line">        <span class="comment">//用户编码低八位DF</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userL</span> <span class="operator">=</span> constructBinaryCode(userCodeL);</span><br><span class="line">        <span class="comment">//数字码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> constructBinaryCode(keyCode);</span><br><span class="line">        <span class="comment">//数字反码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">keyReverse</span> <span class="operator">=</span> constructBinaryCode(~keyCode);</span><br><span class="line"></span><br><span class="line">        list.clear();</span><br><span class="line">        <span class="comment">//引导码</span></span><br><span class="line">        list.add(startH);</span><br><span class="line">        list.add(startL);</span><br><span class="line">        <span class="comment">//用户编码</span></span><br><span class="line">        changeAdd(userH);</span><br><span class="line">        changeAdd(userL);</span><br><span class="line">        <span class="comment">//键数据码</span></span><br><span class="line">        changeAdd(key);</span><br><span class="line">        <span class="comment">//键数据反码</span></span><br><span class="line">        changeAdd(keyReverse);</span><br><span class="line">        <span class="comment">//结束码</span></span><br><span class="line">        list.add(endL);</span><br><span class="line">        list.add(endH);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> list.size();</span><br><span class="line">        pattern = <span class="keyword">new</span> <span class="title class_">int</span>[size];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="comment">//Log.d(TAG, &quot;buildPattern: &quot; + list.get(i));</span></span><br><span class="line">            pattern[i] = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pattern;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 十六进制键值转化为二进制串，并逆转编码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyCode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">constructBinaryCode</span><span class="params">(<span class="type">int</span> keyCode)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">binaryStr</span> <span class="operator">=</span> convertToBinary(keyCode);</span><br><span class="line">        <span class="type">char</span>[] chars = binaryStr.toCharArray();</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">7</span>; i &gt;= <span class="number">4</span>; i--) &#123;</span><br><span class="line">            sb.append(chars[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">3</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            sb.append(chars[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数字转换为长度为8位的二进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">convertToBinary</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">binary</span> <span class="operator">=</span> Integer.toBinaryString(num);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb8</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="comment">//每个元素长度为8位，不够前面补充0</span></span><br><span class="line">        <span class="keyword">if</span> (binary.length() &lt; <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">8</span> - binary.length(); i++) &#123;</span><br><span class="line">                sb8.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">binaryStr8</span> <span class="operator">=</span> sb8.append(binary).toString();</span><br><span class="line">            <span class="keyword">return</span> binaryStr8;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">binaryStr8</span> <span class="operator">=</span> binary.substring(binary.length() - <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">return</span> binaryStr8;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二进制转成电平</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">changeAdd</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> code.length();</span><br><span class="line">        String part;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            list.add(high8);</span><br><span class="line">            part = code.substring(i, i + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (part.equals(<span class="string">&quot;0&quot;</span>))</span><br><span class="line">                list.add(low0);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                list.add(low1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;查看NEC和SANSUNG的协议模拟代码，发现几乎是一样的。之前讨论的时候，考虑的是单按的情况，如果是重复按呢？如果是一个红外接收器既接收NEC，又接收SANSUNG，那么重复按一个键，就会错乱(甚至没有功能，下一篇文章将具体分析一下Android按键是如何解析分析匹配协议的)。</p><h2 id="3-SIRC-SONY索尼协议"><a href="#3-SIRC-SONY索尼协议" class="headerlink" title="3.SIRC SONY索尼协议"></a>3.SIRC SONY索尼协议</h2><ul><li>参考文章<ul><li><a href="https://blog.csdn.net/u013606261/article/details/112948103">红外协议 IR SIRC SONY 索尼 协议深度解析-简单易懂协议详解</a></li></ul></li></ul><p>&emsp;&emsp;对于SONY协议，共有3各版本：12位，15位和20位。与NEC协议不同的是，使用的是40K载波对编码后的波形进行调制，位时间长度都是1.2ms或0.6ms。这里只实现模拟了12位和15位的波形发射。</p><ul><li>SONY协议的发射波形逻辑0和逻辑1如下图所示：</li></ul><p><img src="https://img-blog.csdnimg.cn/20210121155614798.png#pic_center" alt="SONY"></p><ul><li>协议格式</li></ul><p><img src="https://img-blog.csdnimg.cn/20210121160145406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM2MDYyNjE=,size_16,color_FFFFFF,t_70#pic_center" alt="SONY协议格式"></p><ul><li>12位波形</li></ul><p><img src="https://img-blog.csdnimg.cn/20210121160828253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM2MDYyNjE=,size_16,color_FFFFFF,t_70#pic_center" alt="SONY12位"></p><ul><li><p>15位波形</p><ul><li>对于15位其实就是系统码值不够表达的，对于12位的一般系统码值是0x1，对于15位系统码值是0xA3。多了一位高位，所以需要多一个周期发射。</li></ul></li><li><p>20位波形，由于当时身边没有20位协议的遥控器，所以没有实现。</p></li><li><p>SONY协议模拟代码</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.example.remote.protocol;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * only support 12/15 bit</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SIRCPattern</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 12 bit</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span>[] test = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;</span><br><span class="line">            <span class="comment">//start</span></span><br><span class="line">            <span class="number">2400</span>, <span class="number">600</span>,</span><br><span class="line">            <span class="comment">//command</span></span><br><span class="line">            <span class="number">1200</span>,<span class="number">600</span>,<span class="comment">//1</span></span><br><span class="line">            <span class="number">600</span>,<span class="number">600</span>,<span class="comment">//0</span></span><br><span class="line">            <span class="number">1200</span>,<span class="number">600</span>,<span class="comment">//1</span></span><br><span class="line">            <span class="number">600</span>,<span class="number">600</span>,<span class="comment">//0</span></span><br><span class="line">            <span class="number">1200</span>,<span class="number">600</span>,<span class="comment">//1</span></span><br><span class="line">            <span class="number">600</span>,<span class="number">600</span>,<span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//address</span></span><br><span class="line">            <span class="number">600</span>,<span class="number">600</span>,<span class="comment">//0</span></span><br><span class="line">            <span class="number">1200</span>,<span class="number">600</span>,<span class="comment">//1</span></span><br><span class="line">            <span class="number">600</span>,<span class="number">600</span>,<span class="number">600</span>,<span class="number">600</span>,<span class="comment">//00</span></span><br><span class="line">            <span class="number">600</span>,<span class="number">600</span>,<span class="number">600</span>,<span class="number">600</span><span class="comment">//00</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> start[] = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">2400</span>,<span class="number">600</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> bit0[] = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">600</span>,<span class="number">600</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> bit1[] = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">1200</span>,<span class="number">600</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] pattern;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] buildPattern(<span class="type">int</span> address, <span class="type">int</span> command) &#123;</span><br><span class="line">        list.clear();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> level: start) &#123;</span><br><span class="line">            list.add(level);</span><br><span class="line">        &#125;</span><br><span class="line">        String addressStr;</span><br><span class="line">        String commandStr;</span><br><span class="line">        commandStr = constructBinaryCode(command,<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">if</span>(address &gt; <span class="number">0x0F</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            addressStr = constructBinaryCode(address,<span class="number">8</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            addressStr = constructBinaryCode(address,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        changeAdd(commandStr);</span><br><span class="line">        changeAdd(addressStr);</span><br><span class="line">        pattern = <span class="keyword">new</span> <span class="title class_">int</span>[list.size()];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            pattern[i] = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pattern;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数字转换为长度为length位的二进制字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">convertToBinaryBit</span><span class="params">(<span class="type">int</span> code,<span class="type">int</span> length)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">binary</span> <span class="operator">=</span> Integer.toBinaryString(code);</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="comment">//每个元素长度为8位，不够前面补充0</span></span><br><span class="line">        <span class="keyword">if</span> (binary.length() &lt; length) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length - binary.length(); i++) &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.append(binary).toString();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> binary.substring(binary.length() - length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 十六进制键值转化为二进制串，并逆转编码字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyCode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">constructBinaryCode</span><span class="params">(<span class="type">int</span> keyCode, <span class="type">int</span> length)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">binaryStr</span> <span class="operator">=</span> convertToBinaryBit(keyCode,length);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(binaryStr);</span><br><span class="line">        <span class="keyword">return</span> builder.reverse().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二进制字符串转换成电平</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">changeAdd</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; code.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (code.charAt(i) == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>( <span class="type">int</span> level : bit0)</span><br><span class="line">                &#123;</span><br><span class="line">                    list.add(level);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (code.charAt(i) == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>( <span class="type">int</span> level : bit1)</span><br><span class="line">                &#123;</span><br><span class="line">                    list.add(level);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-更多协议"><a href="#4-更多协议" class="headerlink" title="4.更多协议"></a>4.更多协议</h2><p>&emsp;&emsp;更多协议，请参考<a href="https://blog.csdn.net/u013606261/category_10817365.html">IR红外</a>，这里只做了这三种协议的模拟。</p><h2 id="5-布局以及其他代码。"><a href="#5-布局以及其他代码。" class="headerlink" title="5. 布局以及其他代码。"></a>5. 布局以及其他代码。</h2><p>&emsp;&emsp;UI比较简陋，就是简单的发射按钮以及输入框。</p><ul><li>activity_main.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.appbar.MaterialToolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:menu</span>=<span class="string">&quot;@menu/toolbar_menu&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:title</span>=<span class="string">&quot;@string/nec&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:titleCentered</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/user_title&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;@string/user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;33sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;@+id/toolbar&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/edit_user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;00BF&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:selectAllOnFocus</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLength</span>=<span class="string">&quot;4&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:digits</span>=<span class="string">&quot;0123456789abcdefABCDEF&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">&quot;@+id/user_title&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;48dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:importantForAutofill</span>=<span class="string">&quot;no&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/edit_input&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;01&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLength</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:selectAllOnFocus</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:digits</span>=<span class="string">&quot;0123456789abcdefABCDEF&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">&quot;@+id/edit_user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;48dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:importantForAutofill</span>=<span class="string">&quot;no&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/send&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">&quot;@+id/edit_input&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;@string/send&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;48dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:importantForAutofill</span>=<span class="string">&quot;no&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.core.widget.NestedScrollView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/input_scroll&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;#C5CAE9&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@+id/edit_user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;600dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/recyclerView&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layoutManager</span>=<span class="string">&quot;androidx.recyclerview.widget.GridLayoutManager&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:spanCount</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.core.widget.NestedScrollView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>recyler_list_item.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/key&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;@+id/input_scroll&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">&quot;@+id/edit_input&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;56dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:importantForAutofill</span>=<span class="string">&quot;no&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>tobla_menu.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nec&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;@string/nec&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:showAsAction</span>=<span class="string">&quot;never&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/samsung&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;@string/samsung&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:showAsAction</span>=<span class="string">&quot;never&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/sony&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;@string/sony&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:showAsAction</span>=<span class="string">&quot;never&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>对应的枚举类、适配器<ul><li>RecyclerKeyAdapter.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.api.IOnClickItemCallback;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.databinding.RecyclerListItemBinding;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.protocol.EProtocol;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecyclerKeyAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;RecyclerKeyAdapter.MyViewHolder&gt;&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IOnClickItemCallback onClickItemCallback;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;String&gt; buttonText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RecyclerKeyAdapter</span><span class="params">(List&lt;String&gt; buttonText)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.buttonText = buttonText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOnClickItemCallback</span><span class="params">(IOnClickItemCallback onClickItemCallback)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.onClickItemCallback = onClickItemCallback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MyViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="type">RecyclerListItemBinding</span> <span class="variable">binding</span> <span class="operator">=</span> RecyclerListItemBinding.inflate(LayoutInflater.from(parent.getContext()),parent,<span class="literal">false</span>);</span><br><span class="line">        <span class="type">MyViewHolder</span> <span class="variable">viewHolder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyViewHolder</span>(binding);</span><br><span class="line">        <span class="comment">//添加点击回调</span></span><br><span class="line">        binding.key.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (onClickItemCallback != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                onClickItemCallback.onItemClick(viewHolder.getBindingAdapterPosition());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> viewHolder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> MyViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        holder.binding.key.setText(buttonText.get(position));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> buttonText.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getButtonText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> buttonText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">        RecyclerListItemBinding binding;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyViewHolder</span><span class="params">(<span class="meta">@NonNull</span> RecyclerListItemBinding itemBinding)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(itemBinding.getRoot());</span><br><span class="line">            binding = itemBinding;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>EProtocol.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote.protocol;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">EProtocol</span> &#123;</span><br><span class="line">    NEC,</span><br><span class="line">    SAMSUNG,</span><br><span class="line">    SONY</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>IOnClickItemCallback.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.remote.protocol.EProtocol;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IOnClickItemCallback</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * item点击</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> position 点击位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(<span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>&emsp;&emsp;对了还需要封装一个检测当前手机是否支持红外功能类，防止应用闪退。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerIrManagerApi</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ConsumerIrManagerApi instance;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> android.hardware.ConsumerIrManager service;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ConsumerIrManagerApi</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="comment">//Android4.4才开始支持红外功能</span></span><br><span class="line">        <span class="comment">// 获取系统的红外遥控服务</span></span><br><span class="line">        service = (android.hardware.ConsumerIrManager) context.getApplicationContext().getSystemService(Context.CONSUMER_IR_SERVICE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ConsumerIrManagerApi <span class="title function_">getConsumerIrManager</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">ConsumerIrManagerApi</span>(context);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 手机是否有红外功能</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasIrEmitter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//android4.4及以上版本&amp;有红外功能</span></span><br><span class="line">        <span class="keyword">if</span> (service != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> service.hasIrEmitter();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//android4.4以下及4.4以上没红外功能</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发射红外信号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> carrierFrequency 红外频率</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern 数据码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transmit</span><span class="params">(<span class="type">int</span> carrierFrequency, <span class="type">int</span>[] pattern)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (service != <span class="literal">null</span>) &#123;</span><br><span class="line">            service.transmit(carrierFrequency, pattern);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取可支持的红外信号频率</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> android.hardware.ConsumerIrManager.CarrierFrequencyRange[] getCarrierFrequencies() &#123;</span><br><span class="line">        <span class="keyword">if</span> (service != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> service.getCarrierFrequencies();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>MainActivity.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.remote;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.text.InputFilter;</span><br><span class="line"><span class="keyword">import</span> android.text.Spanned;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.adapter.RecyclerKeyAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.api.ConsumerIrManagerApi;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.api.IOnClickItemCallback;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.databinding.ActivityMainBinding;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.protocol.EProtocol;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.protocol.NecPattern;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.protocol.SANSUNGPattern;</span><br><span class="line"><span class="keyword">import</span> com.example.remote.protocol.SIRCPattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">IOnClickItemCallback</span> &#123;</span><br><span class="line"></span><br><span class="line">    ActivityMainBinding mainBinding;</span><br><span class="line">    ConsumerIrManagerApi consumerIrManagerApi;</span><br><span class="line">    <span class="type">EProtocol</span> <span class="variable">protocol</span> <span class="operator">=</span> EProtocol.NEC;<span class="comment">//默认使用NEC协议</span></span><br><span class="line"></span><br><span class="line">    RecyclerKeyAdapter adapter;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; keyList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * NEC or SANSUNG</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">userCodeH</span> <span class="operator">=</span> <span class="number">0x00</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">userCodeL</span> <span class="operator">=</span> <span class="number">0xBF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SONY</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">address</span> <span class="operator">=</span> <span class="number">0x01</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        mainBinding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(mainBinding.getRoot());</span><br><span class="line">        setSupportActionBar(mainBinding.toolbar);</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">if</span> (!consumerIrManagerApi.hasIrEmitter()) &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;手机不支持红外遥控&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            finish();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar_menu, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onCreateOptionsMenu(menu);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(<span class="meta">@NonNull</span> MenuItem item)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.nec:</span><br><span class="line">                protocol = EProtocol.NEC;</span><br><span class="line">                mainBinding.toolbar.setTitle(R.string.nec);</span><br><span class="line">                notifyDataButton();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.samsung:</span><br><span class="line">                protocol = EProtocol.SAMSUNG;</span><br><span class="line">                mainBinding.toolbar.setTitle(R.string.samsung);</span><br><span class="line">                notifyDataButton();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.sony:</span><br><span class="line">                protocol = EProtocol.SONY;</span><br><span class="line">                mainBinding.toolbar.setTitle(R.string.sony);</span><br><span class="line">                notifyDataSonyButton();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                protocol = EProtocol.NEC;</span><br><span class="line">                mainBinding.toolbar.setTitle(R.string.nec);</span><br><span class="line">                notifyDataButton();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">0xFF</span>; i++) &#123;</span><br><span class="line">            keyList.add(<span class="string">&quot;0x&quot;</span>+String.format(<span class="string">&quot;%02x&quot;</span>, i));</span><br><span class="line">        &#125;</span><br><span class="line">        consumerIrManagerApi = ConsumerIrManagerApi.getConsumerIrManager(<span class="built_in">this</span>);</span><br><span class="line">        adapter = <span class="keyword">new</span> <span class="title class_">RecyclerKeyAdapter</span>(keyList);</span><br><span class="line">        adapter.setOnClickItemCallback(<span class="built_in">this</span>);</span><br><span class="line">        mainBinding.recyclerView.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        mainBinding.editUser.setOnEditorActionListener(<span class="keyword">new</span> <span class="title class_">TextView</span>.OnEditorActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onEditorAction</span><span class="params">(TextView v, <span class="type">int</span> actionId, KeyEvent event)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (protocol == EProtocol.SONY &amp;&amp; mainBinding.editUser.getText().length() &gt; <span class="number">2</span>)&#123;</span><br><span class="line">                    mainBinding.editUser.setText(String.format(<span class="string">&quot;%02x&quot;</span>, address));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (mainBinding.editUser.getText().length() == <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="comment">//4位头码处理</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> mainBinding.editUser.getText().toString();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">codeH</span> <span class="operator">=</span> <span class="string">&quot;0x&quot;</span> + text.substring(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">codeL</span> <span class="operator">=</span> <span class="string">&quot;0x&quot;</span> + text.substring(<span class="number">2</span>);</span><br><span class="line">                    userCodeH = Integer.decode(codeH);</span><br><span class="line">                    userCodeL = Integer.decode(codeL);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((mainBinding.editUser.getText().length() == <span class="number">2</span>)) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> mainBinding.editUser.getText().toString();</span><br><span class="line">                    address = Integer.decode(<span class="string">&quot;0x&quot;</span> + text);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        mainBinding.editInput.setOnEditorActionListener((v, actionId, event) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (protocol == EProtocol.SONY)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> mainBinding.editInput.getText().toString();</span><br><span class="line">                <span class="type">int</span>  <span class="variable">command</span> <span class="operator">=</span> Integer.decode( <span class="string">&quot;0x&quot;</span> + text);</span><br><span class="line">                <span class="keyword">if</span> (command &gt; <span class="number">0x7F</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    mainBinding.editInput.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        mainBinding.send.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(mainBinding.editInput.getText())) &#123;</span><br><span class="line">                    <span class="keyword">switch</span> (protocol) &#123;</span><br><span class="line">                        <span class="keyword">case</span> NEC:</span><br><span class="line">                            consumerIrManagerApi.transmit(<span class="number">38000</span>, NecPattern.buildPattern(</span><br><span class="line">                                    userCodeH, userCodeL, Integer.decode(<span class="string">&quot;0x&quot;</span> + mainBinding.editInput.getText().toString())));</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> SAMSUNG:</span><br><span class="line">                            consumerIrManagerApi.transmit(<span class="number">38000</span>, SANSUNGPattern.buildPattern(</span><br><span class="line">                                    userCodeH, userCodeL, Integer.decode(<span class="string">&quot;0x&quot;</span> + mainBinding.editInput.getText().toString())));</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> SONY:</span><br><span class="line">                            consumerIrManagerApi.transmit(<span class="number">40000</span>, SIRCPattern.buildPattern(</span><br><span class="line">                                    address, Integer.decode(<span class="string">&quot;0x&quot;</span> + mainBinding.editInput.getText().toString())));</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span>:</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (protocol) &#123;</span><br><span class="line">            <span class="keyword">case</span> NEC:</span><br><span class="line">                consumerIrManagerApi.transmit(<span class="number">38000</span>, NecPattern.buildPattern(</span><br><span class="line">                        userCodeH, userCodeL, Integer.decode(keyList.get(position))));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SAMSUNG:</span><br><span class="line">                consumerIrManagerApi.transmit(<span class="number">38000</span>, SANSUNGPattern.buildPattern(</span><br><span class="line">                        userCodeH, userCodeL, Integer.decode(keyList.get(position))));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SONY:</span><br><span class="line">                consumerIrManagerApi.transmit(<span class="number">40000</span>, SIRCPattern.buildPattern(</span><br><span class="line">                        address, Integer.decode(keyList.get(position))));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NotifyDataSetChanged&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">notifyDataSonyButton</span><span class="params">()</span>&#123;</span><br><span class="line">        mainBinding.editUser.setText(String.format(<span class="string">&quot;%02x&quot;</span>, address));</span><br><span class="line">        mainBinding.editUser.setHint(String.format(<span class="string">&quot;%02x&quot;</span>, address));</span><br><span class="line">        keyList.clear();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">0x7F</span>; i++) &#123;</span><br><span class="line">                keyList.add(<span class="string">&quot;0x&quot;</span> + String.format(<span class="string">&quot;%02x&quot;</span>, i));</span><br><span class="line">        &#125;</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NotifyDataSetChanged&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">notifyDataButton</span><span class="params">()</span>&#123;</span><br><span class="line">        mainBinding.editUser.setText(<span class="string">&quot;00BF&quot;</span>);</span><br><span class="line">        mainBinding.editUser.setHint(<span class="string">&quot;00BF&quot;</span>);</span><br><span class="line">        keyList.clear();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">0xFF</span>; i++) &#123;</span><br><span class="line">            keyList.add(<span class="string">&quot;0x&quot;</span> + String.format(<span class="string">&quot;%02x&quot;</span>, i));</span><br><span class="line">        &#125;</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>&emsp;&emsp;对于任意一个红外遥控，每个按键都有对应的码值和系统码值，通过这些码值，可以模拟出任意一个按键。比如一个遥控的码值是0x12，系统码值是0707，那么切换对应的协议，将头码设置为0707,输入码值0x12，就可以模拟出这个按键。这里就不放效果图了，有兴趣的可以自己尝试。当然，这个模拟器是要知道对方遥控的协议按键码值才可以，如果要适配空调家用电视，这些就直接用手机自带的万能遥控使用。本工具仅用于生产测试功能。<br>&emsp;&emsp;在做这个模拟器的时候，示波器的使用是不可缺少的。再进行App调试配对波形的时候和解析波形，产生了巨大的作用。顺便还研究了Android系统源码的红外分析，将于下篇文章分享。不得不说，懒才是第一生产力，哈哈。</p>]]></content>
      
      
      <categories>
          
          <category> AndroidTV </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android第三方网络框架封装-Java</title>
      <link href="/2023/11/24/Android%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85-Java/"/>
      <url>/2023/11/24/Android%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6%E5%B0%81%E8%A3%85-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="Android第三方网络框架封装-Java"><a href="#Android第三方网络框架封装-Java" class="headerlink" title="Android第三方网络框架封装-Java"></a>Android第三方网络框架封装-Java</h1><ul><li>参考文章&#x2F;博主<ul><li><a href="https://blog.csdn.net/m0_37796683/category_8995029.html?spm=1001.2014.3001.5482">苏火火</a></li><li><a href="https://juejin.cn/post/7060419394484043813">Android进阶： 详解OkHttp+Retrofit+Rxjava实现网络请求</a></li><li><a href="https://blog.csdn.net/fitaotao/article/details/105201116">RxJava2+Retrofit2+OkHttp3的基础、封装和项目中的使用</a></li></ul></li></ul><p>&emsp;&emsp;<font color=red>本文中的所有内容大部分来源于网络资料，如有侵权请联系本人修改或删除，请大家多多支持原创!非常感谢！</font></p><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>&emsp;&emsp;在Android开发中，网络请求是必不可少的一环。最近做了一个需求，类似于应用宝的功能，需要从服务器获取数据，然后展示到界面上。并下载apk文件，实现静默安装。本篇主要介绍自己是如何使用Rxjava、Retrofit、Okhttp等框架，实现网络请求和下载apk的功能。</p><h3 id="1-1-OKHttp"><a href="#1-1-OKHttp" class="headerlink" title="1.1 OKHttp"></a>1.1 OKHttp</h3><p>&emsp;&emsp;OkHttp是一个用于处理HTTP请求的开源Java库，由Square公司开发。对于网络框架，更多的人会想到volley，volley是Android系统自带的网络请求框架。但是volle在Android 5.0之后被Google抛弃了，所以OkHttp逐渐成为Android开发中首选的网络请求框架。</p><ul><li><p>优点</p><ul><li>支持HTTP&#x2F;2，HTTPS(有效使用套接字)</li><li>连接池（在没有HTTTP&#x2F;2的情况下，多个请求使用同一个TCP连接,减少请求延迟）</li><li>GZiP压缩 (缩小下载大小)</li><li>响应缓存 (减少重复的网络请求)</li><li>拦截器 (修改请求和响应)</li><li>从常见的连接问题中自动恢复</li><li>替代IP的DNS解析(在IPv4和IPv6的网络中)</li><li>支持现代TLS功能(TLS 1.3, ALPN, Certificate Compression 证书钩子)</li><li>支持同步和异步调用</li></ul></li><li><p>使用</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation(<span class="string">&quot;com.squareup.okhttp3:okhttp:3.6.0&quot;</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;当导入okhttp时，会自动导入一个高性能的I&#x2F;O库<a href="https://square.github.io/okio/">okio</a>，以及<a href="https://kotlinlang.org/api/latest/jvm/stdlib/">koltin标准库</a>。</p><h3 id="1-2-Retrofit2"><a href="#1-2-Retrofit2" class="headerlink" title="1.2 Retrofit2"></a>1.2 Retrofit2</h3><p>&emsp;&emsp;Retrofit可以理解为okhttp的加强版，底层封装了OkHttp。<font color=red>Retrofit是一个RESTful的http网络请求框架的封装</font>。本质过程：App应用程序通过Retrofit请求网络，实质上是使用Retrofit接口层封装请求参数、Header、Url等信息，之后由okhttp来完成后续的请求工作。在服务端返回数据后，okhttp将原始数据交给Retrofit，Retrofit根据用户需求解析。</p><ul><li><p>优点</p><ul><li>超级解耦，接口定义、接口参数、接口回调不在耦合在一起</li><li>可以配置不同的httpClient来实现网络请求，如okhttp、httpClient等</li><li>支持同步、异步、RxJava</li><li>可以配置不同反序列化工具类来解析不同的数据，如json、xml等</li><li>请求速度快，使用方便灵活</li></ul></li><li><p>使用</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Retrofit库</span></span><br><span class="line">implementation <span class="string">&#x27;com.squareup.retrofit2:retrofit:2.9.0&#x27;</span></span><br><span class="line"><span class="comment">//添加retrofit gson转换会自动下载gson</span></span><br><span class="line">implementation <span class="string">&#x27;com.squareup.retrofit2:converter-gson:2.9.0&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-RxJava"><a href="#1-2-RxJava" class="headerlink" title="1.2 RxJava"></a>1.2 RxJava</h3><p>&emsp;&emsp;RxJava在GitHub上《RxJava》的自我介绍是：a library for composing asynchronous and event-based programs using observable sequences for the Java VM.(一个在Java VM 上使用可观测的序列来组成异步的，基于事件的程序的库)，有些人可能感到疑惑，其实本质上可以用一词来概括——“异步”，它就是一个异步的操作库，而别的定语都基于这之上的。</p><ul><li><p>优点</p><ul><li>异步和并发： RxJava 提供了简单而强大的异步编程模型。通过使用观察者和可观察者，你可以轻松地处理异步任务、事件和并发操作。</li><li>错误处理： RxJava提供了强大的错误处理机制，允许开发者在异步操作中更好地处理错误，而不是简单地嵌套回调中。</li><li>多线程支持： RxJava通过调度器（Schedulers）支持多线程操作，可以在不同的线程上执行任务，从而更好地管理并发。</li><li>响应式思维： RxJava通过引入响应式编程的思想，使得程序更容易理解、扩展和维护。它让开发者从“怎么做”（How to do）转变为“想要什么”（What to do）</li><li>组合和变换： RxJava提供了丰富的操作符，使得可以轻松组合、转换和过滤事件序列。这种组合性质使得处理复杂的业务逻辑变得更加简单。</li></ul></li><li><p>使用</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.squareup.retrofit2:adapter-rxjava3:2.9.0&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;io.reactivex.rxjava3:rxandroid:3.0.0&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>RxJava最核心的两个东西Observable（被观察者、事件源）和Observer（观察者），Observable发出一系列的事件，Observer处理这些事件。在Observer接收到事件处理之前我们很方便地对结果做出各种拦截处理等。</li></ul><h2 id="2-封装"><a href="#2-封装" class="headerlink" title="2. 封装"></a>2. 封装</h2><p>&emsp;&emsp; 这里只对4个文件进行阐述：</p><ul><li>ApiService</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ApiService</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">SERVER_DEBUG</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.0.241:8088/&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileId 文件id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Streaming</span> 是注解大文件的</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Streaming</span></span><br><span class="line">    <span class="meta">@GET(&quot;appmanager/android/download/&#123;fileId&#125;&quot;)</span></span><br><span class="line">    Observable&lt;ResponseBody&gt; <span class="title function_">downloadApkFile</span><span class="params">(<span class="meta">@Header(&quot;apiKey&quot;)</span> String apikey, <span class="meta">@Path(&quot;fileId&quot;)</span> String fileId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GET(&quot;appmanager/android/getApps&quot;)</span></span><br><span class="line">    Observable&lt;AppResponse&gt; <span class="title function_">getAllApkInfo</span><span class="params">(<span class="meta">@Header(&quot;apiKey&quot;)</span> String apikey, <span class="meta">@QueryMap</span> Map&lt;String, Object&gt; map)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>ApiRetrofit</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zj970</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> api请求管理工具</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2023-09-16 2:34 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiRetrofit</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> ApiRetrofit instances;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> OkHttpClient okHttpClient;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Retrofit retrofit;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> ApiService API;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> ApiRetrofit.class.getSimpleName();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">TIME_OUT</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">//10秒超时断开连接</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ApiRetrofit <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instances == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (ApiRetrofit.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (instances == <span class="literal">null</span>) &#123;</span><br><span class="line">                    instances = <span class="keyword">new</span> <span class="title class_">ApiRetrofit</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instances;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OkHttpClient <span class="title function_">initClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (okHttpClient == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (ApiRetrofit.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (okHttpClient == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//请求日志打印</span></span><br><span class="line">                    <span class="comment">//记得一定要把okhttpclient配置的日志拦截器去掉，否则所有数据流都会加载进内存</span></span><br><span class="line">                    <span class="type">HttpLoggingInterceptor</span> <span class="variable">loggingInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpLoggingInterceptor</span>(message -&gt; &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            LogUtil.e(<span class="string">&quot;initClient---&gt;&quot;</span>, URLDecoder.decode(message, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</span><br><span class="line">                    <span class="comment">//注释1：创建OkHttpClient</span></span><br><span class="line">                    okHttpClient = <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder()</span><br><span class="line">                            .connectTimeout(TIME_OUT, TimeUnit.SECONDS)</span><br><span class="line">                            <span class="comment">//.addInterceptor(loggingInterceptor)//所有数据流都会加载进内存触发GC</span></span><br><span class="line">                            .readTimeout(TIME_OUT, TimeUnit.SECONDS)</span><br><span class="line">                            .writeTimeout(TIME_OUT, TimeUnit.SECONDS)</span><br><span class="line">                            .build();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> okHttpClient;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Retrofit <span class="title function_">initRetrofit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (retrofit == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (ApiRetrofit.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (retrofit == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//注释2：创建Retrofit</span></span><br><span class="line">                    retrofit = <span class="keyword">new</span> <span class="title class_">Retrofit</span>.Builder()</span><br><span class="line">                            .client(initClient())</span><br><span class="line">                            <span class="comment">/// 设置基址</span></span><br><span class="line">                            .baseUrl(ApiService.SERVER_DEBUG)<span class="comment">//必填</span></span><br><span class="line">                            <span class="comment">// 适配rxjava，目的在于使用观察者模式，分解上层请求的过程，便于我们横加干预（比如请求嵌套）</span></span><br><span class="line">                            .addConverterFactory(MGsonConverterFactory.create(<span class="keyword">new</span> <span class="title class_">Gson</span>()))</span><br><span class="line">                            .addCallAdapterFactory(RxJava3CallAdapterFactory.create())</span><br><span class="line">                            .build();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> retrofit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initAPI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (API == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (ApiRetrofit.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (API == <span class="literal">null</span>) &#123;</span><br><span class="line">                    API = initRetrofit().create(ApiService.class);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Observable&lt;AppResponse&gt; <span class="title function_">getAllApkInfo</span><span class="params">(Map&lt;String, Object&gt; map)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> API.getAllApkInfo(Constant.getApiKey(),map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Observable&lt;ResponseBody&gt; <span class="title function_">downloadApkFile</span><span class="params">(String fileId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> API.downloadApkFile(Constant.getApiKey(),fileId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>自定义的Gson工厂转换</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zj970</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义gson转换工厂，需要对data进行加密解密</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2023-09-16 6:23 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MGsonConverterFactory</span> <span class="keyword">extends</span> <span class="title class_">Converter</span>.Factory &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;ConverterFactory&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Gson mGson;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MGsonConverterFactory <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> create(<span class="keyword">new</span> <span class="title class_">Gson</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MGsonConverterFactory <span class="title function_">create</span><span class="params">(Gson gson)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MGsonConverterFactory</span>(gson);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">MGsonConverterFactory</span><span class="params">(Gson mGson)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mGson = mGson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;ResponseBody, ?&gt; responseBodyConverter(Type type, Annotation[] annotations, Retrofit retrofit) &#123;</span><br><span class="line">        TypeAdapter&lt;?&gt; adapter = mGson.getAdapter(TypeToken.get(type));</span><br><span class="line">        LogUtil.d(TAG, <span class="string">&quot;responseBodyConverter--&gt;&quot;</span> + TypeToken.get(type).toString());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MGsonResponseBodyConverter</span>&lt;&gt;(mGson, adapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;?, RequestBody&gt; requestBodyConverter(Type type, Annotation[] parameterAnnotations,</span><br><span class="line">                                                          Annotation[] methodAnnotations, Retrofit retrofit) &#123;</span><br><span class="line">        TypeAdapter&lt;?&gt; adapter = mGson.getAdapter(TypeToken.get(type));</span><br><span class="line">        LogUtil.d(TAG, <span class="string">&quot;requestBodyConverter--&gt;&quot;</span> + TypeToken.get(type).toString());</span><br><span class="line">        <span class="keyword">return</span> (Converter&lt;?, RequestBody&gt;) <span class="keyword">new</span> <span class="title class_">MGsonResponseBodyConverter</span>&lt;&gt;(mGson, adapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zj970</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义解析GsonResponseBoay</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2023-09-16 6:23 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">MGsonResponseBodyConverter</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;ResponseBody,T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;Conver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Gson gson;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    MGsonResponseBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        <span class="built_in">this</span>.gson = gson;</span><br><span class="line">        <span class="built_in">this</span>.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">convert</span><span class="params">(ResponseBody value)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> value.string();</span><br><span class="line">        LogUtil.d(TAG,<span class="string">&quot;start ---&gt; &quot;</span> + str);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">BaseResponse</span> <span class="variable">baseResponse</span> <span class="operator">=</span> gson.fromJson(str,BaseResponse.class);</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> baseResponse.getData();</span><br><span class="line">            <span class="keyword">if</span> (data != <span class="literal">null</span> &amp;&amp; data.length() &gt; <span class="number">16</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> CiphertextUtils.INSTANCE.decryptAES128(</span><br><span class="line">                        data.substring(<span class="number">16</span>), Constant.APP_KEY,data.substring(<span class="number">0</span>,<span class="number">16</span>));</span><br><span class="line">                baseResponse.setData(body);</span><br><span class="line">                str = baseResponse.toJson();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            LogUtil.e(TAG,<span class="string">&quot;convert is failed&quot;</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            value.close();</span><br><span class="line">        &#125;</span><br><span class="line">        LogUtil.d(TAG,<span class="string">&quot;convert end --&gt;&quot;</span>+str);</span><br><span class="line">        <span class="type">T</span> <span class="variable">result</span> <span class="operator">=</span> adapter.fromJson(str);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">BaseResponse</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(<span class="type">int</span> code)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line">        <span class="keyword">private</span> String data;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(String data)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.data = data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;BaseResponse&#123;&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;code=&quot;</span> + code +</span><br><span class="line">                    <span class="string">&quot;, msg=&#x27;&quot;</span> + msg + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, data=&#x27;&quot;</span> + data + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">toJson</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="string">&quot;&#123;\&quot;code\&quot;:&quot;</span> + code +</span><br><span class="line">                    <span class="string">&quot;, \&quot;msg\&quot;:\&quot;&quot;</span> + msg + <span class="string">&#x27;\&quot;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, \&quot;data\&quot;:&quot;</span> + data +</span><br><span class="line">                    <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>AES 加密</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zj970</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 加密解密工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2023-09-16 5:24 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">CiphertextUtils</span> &#123;</span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">CiphertextUtils</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES 加密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  String <span class="title function_">encryptAES</span><span class="params">(String plainText,String secretKey,String ivKey)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(Constant.ALGORITHM);</span><br><span class="line">            <span class="type">SecretKeySpec</span> <span class="variable">spec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(secretKey.getBytes(StandardCharsets.UTF_8),<span class="string">&quot;AES&quot;</span>);</span><br><span class="line">            <span class="type">IvParameterSpec</span> <span class="variable">ivParameterSpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(Constant.IV_KEY.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE,spec,ivParameterSpec);</span><br><span class="line">            <span class="type">byte</span>[] encryptedBytes = cipher.doFinal(plainText.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            LogUtil.d(<span class="string">&quot;encryptAES&quot;</span>,ivKey + Base64.encodeToString(encryptedBytes,Base64.DEFAULT));</span><br><span class="line">            <span class="keyword">return</span> ivKey + Base64.encodeToString(encryptedBytes,Base64.DEFAULT);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES 解密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encryptedText</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ivKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  String <span class="title function_">decryptAES128</span><span class="params">(String encryptedText, String secretKey,String ivKey)</span> <span class="keyword">throws</span></span><br><span class="line">            NoSuchPaddingException, NoSuchAlgorithmException, IllegalBlockSizeException,</span><br><span class="line">            BadPaddingException, InvalidAlgorithmParameterException, InvalidKeyException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] encryptedBytes = Base64.decode(encryptedText,Base64.DEFAULT);</span><br><span class="line">        <span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(Constant.ALGORITHM);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建密钥对象</span></span><br><span class="line">        <span class="type">SecretKeySpec</span> <span class="variable">SecretKey</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(secretKey.getBytes(StandardCharsets.UTF_8), <span class="string">&quot;AES&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 IV 对象</span></span><br><span class="line">        <span class="type">IvParameterSpec</span> <span class="variable">ivParameterSpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(ivKey.getBytes(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化解密操作</span></span><br><span class="line">        cipher.init(Cipher.DECRYPT_MODE, SecretKey, ivParameterSpec);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行解密操作</span></span><br><span class="line">        <span class="type">byte</span>[] decryptedBytes = cipher.doFinal(encryptedBytes);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将解密后的字节数组转为字符串</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(decryptedBytes, StandardCharsets.UTF_8);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp; 实体类的定义根据网络数据来定义即可。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AndroidTv部分页面按键音无效</title>
      <link href="/2023/11/11/AndroidTv%E9%83%A8%E5%88%86%E9%A1%B5%E9%9D%A2%E6%8C%89%E9%94%AE%E9%9F%B3%E6%97%A0%E6%95%88/"/>
      <url>/2023/11/11/AndroidTv%E9%83%A8%E5%88%86%E9%A1%B5%E9%9D%A2%E6%8C%89%E9%94%AE%E9%9F%B3%E6%97%A0%E6%95%88/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Android-Tv-部分页面按键音无效，dispatchKeyEvent分发被拦截"><a href="#Android-Tv-部分页面按键音无效，dispatchKeyEvent分发被拦截" class="headerlink" title="Android Tv 部分页面按键音无效，dispatchKeyEvent分发被拦截"></a>Android Tv 部分页面按键音无效，dispatchKeyEvent分发被拦截</h1><p>&emsp;&emsp;开始阅读之前，可以简单了解一下这些大佬的文章。  </p><ul><li><a href="https://www.jianshu.com/u/2c5186caa67a">c枫_撸码的日子</a>  <ul><li><a href="https://www.jianshu.com/p/821b3efbe3a1">Android 按键处理一 （基础知识）</a></li><li><a href="https://www.jianshu.com/p/d465008996cd">Android 按键处理二 （按键流程之内核层篇）</a></li><li><a href="https://www.jianshu.com/p/70769c5f1ffe">Android 按键处理三 （按键流程之framework）</a></li></ul></li><li><a href="https://blog.csdn.net/benzhujie1245com?type=blog">空杯的境界</a><ul><li><a href="https://blog.csdn.net/benzhujie1245com/article/details/89559900">Android 按键事件(KeyEvent)的分发机制</a></li></ul></li><li><a href="https://juneyang.blog.csdn.net/?type=blog">小羊子说</a><ul><li><a href="https://blog.csdn.net/jun5753/article/details/78665886">Android TV中按键事件和焦点处理总结</a></li></ul></li><li><a href="https://blog.csdn.net/txksnail?type=blog">圆周率X</a><ul><li><a href="https://blog.csdn.net/txksnail/article/details/103638638">Android dispatchKeyEvent事件分发详解，简单易懂</a></li></ul></li></ul><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>&emsp;&emsp;接入喇叭，进入应用，突然发现一些页面有系统调用的按键提示音，而有些页面则没有。(最终发现是使用了Scrollview出的bug)</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>&emsp;&emsp;既然按键声音没有发出，那首先需要了解一下按键声音是怎么发出的。当用户注册了clickListener，则调用发出playSoundEffect()和响应用户写好的onClick()方法。首先排除系统设置声音无效。可以使用adb命令 <b>adb shell Settings get sound_effects_enabled</b><br>查看。（1开启0关闭）既然如此，那只有一个可能，按键被消费了或者被拦截了。先来看看按键按下去，在framework层和应用层发生了什么。</p><ol><li>首先触发dispatchKeyEvent，通过上面大佬的文章我们知道，按键起始于DecorView进行分发处理</li><li>然后触发onUserInteraction</li><li>执行onKeyDown</li><li>松开&#x2F;抬起案件，再次触发dispatchKeyEvent</li><li>然后再触发onUserInteraction</li><li>再次onKeyUp</li></ol><p>&emsp;&emsp;在我的问题中，通过log日志打印发现，没有声音执行的时候并没有执行Activity的onKeyDown，又因为没有写拦截事件(因为所有页面都是继承于一个基类)，锁定在Activity中的dispatchKeyEvent。通过log日志发现，这个方法会执行两次，符合上述的步骤。通过对比发现，没有发出声音的页面是没有成对消费，一次为true一次为false。因为是采用的FragmentActivity，通过Fragment的replace进行交替，而且Fragment不是一次性加载，排除因为焦点的缘故，导致没有按键提示音(子控件也没有焦点消耗按键事件)。</p><p>&emsp;&emsp;然后进入终极的Debug环节，通过最终在ViewGroup的dispatchKeyEvent中递归查询当前焦点View为ScollView的子类返回了true。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">dispatchKeyEvent</span><span class="params">(KeyEvent event)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="literal">null</span>) &#123;</span><br><span class="line">        mInputEventConsistencyVerifier.onKeyEvent(event, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((mPrivateFlags &amp; (PFLAG_FOCUSED | PFLAG_HAS_BOUNDS))</span><br><span class="line">            == (PFLAG_FOCUSED | PFLAG_HAS_BOUNDS)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">super</span>.dispatchKeyEvent(event)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFocused != <span class="literal">null</span> &amp;&amp; (mFocused.mPrivateFlags &amp; PFLAG_HAS_BOUNDS)</span><br><span class="line">            == PFLAG_HAS_BOUNDS) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mFocused.dispatchKeyEvent(event)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="literal">null</span>) &#123;</span><br><span class="line">        mInputEventConsistencyVerifier.onUnhandledEvent(event, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20191220211750432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3R4a3NuYWls,size_16,color_FFFFFF,t_70" alt="KeyEvent分发逻辑图"></p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>&emsp;&emsp;就算定位到了这个View产生了事件拦截，但并没有往内容长度上面想。手动屏蔽一个页面，发现原来的主页面有声音了，再对比有声音的页面和无声音的页面，公司的老员工就琢磨出了问题，是这个页面内容超出了屏幕导致的，我一试，在没声音的页面删掉几个加载项，唉？它好了！果断去网上找了几篇文章，发现一篇类似的文章。</p><ul><li><a href="https://blog.csdn.net/Ever69/article/details/104315253">完美解决Android中的ScrollView嵌套ScrollView滑动冲突问题</a></li></ul><p>&emsp;&emsp;汗颜，果然家有一老，如有一宝。问题找到了，就是由于焦点管理和事件分发机制的相互作用所致。当按键按下切换的时候，焦点产生了移动，由于内容超出了屏幕。此时按键按下正在尝试滚动，此时的按键事件被视为滚动手势而被拦截。(听同事说，之前他使用自定义的ListView也出现了按键音效被拦截的情况，但是换成了RecylerView便没有了)。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>&emsp;&emsp;解决方法选择了一个简单粗暴的方法，写一个类继承ScrollView重写dispatchKeyEvent方法，当事件被拦截的时候，手动调用播放按键音。如果有大佬有相关的经验，可以评论区讨论一下，非常感谢。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">dispatchKeyEvent</span><span class="params">(KeyEvent keyEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">super</span>.dispatchKeyEvent(keyEvent);</span><br><span class="line">    <span class="keyword">if</span> (keyEvent.getAction() == KeyEvent.ACTION_DOWN &amp;&amp; result)</span><br><span class="line">    &#123;</span><br><span class="line">        audioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_DOWN);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RecyclerView和ListView的缓存复用机制</title>
      <link href="/2023/11/11/RecyclerView%E5%92%8CListView%E7%9A%84%E7%BC%93%E5%AD%98%E5%A4%8D%E7%94%A8%E6%9C%BA%E5%88%B6/"/>
      <url>/2023/11/11/RecyclerView%E5%92%8CListView%E7%9A%84%E7%BC%93%E5%AD%98%E5%A4%8D%E7%94%A8%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>&emsp;&emsp;Android对于列表View的渲染和使用，常用的控件为ListView和RecyclerView。</p><h1 id="适配器使用"><a href="#适配器使用" class="headerlink" title="适配器使用"></a>适配器使用</h1><h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WifiAdapter</span> <span class="keyword">extends</span> <span class="title class_">ArrayAdapter</span>&lt;ScanResult&gt; &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WifiAdapter</span><span class="params">(Context context, <span class="type">int</span> resource, List&lt;ScanResult&gt; objects)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, resource, objects);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取适配器控件中的View对象，得到用于展示数据的视图 int position,：当前item的下标 View convertView,</span></span><br><span class="line"><span class="comment">     * 表示可复用的View ViewGroup parent 当前绘制的item 所属的listview</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="type">ScanResult</span> <span class="variable">item</span> <span class="operator">=</span> getItem(position);</span><br><span class="line">        WifiHolder holder;</span><br><span class="line">        <span class="comment">// 表示第一次运行创建，否则复用view</span></span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            convertView = LayoutInflater.from(getContext()).inflate(R.layout.network_item, parent, <span class="literal">false</span>);</span><br><span class="line">            holder = <span class="keyword">new</span> <span class="title class_">WifiHolder</span>();</span><br><span class="line">            holder.wifi_image = convertView.findViewById(R.id.wifi_image);</span><br><span class="line">            holder.wifi_name = convertView.findViewById(R.id.wifi_name);</span><br><span class="line">            holder.wifi_type = convertView.findViewById(R.id.wifi_type);</span><br><span class="line">            convertView.setTag(holder);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 进行复用</span></span><br><span class="line">            holder = (WifiHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        holder.wifi_name.setText(item.SSID);</span><br><span class="line">        <span class="type">String</span> <span class="variable">capabilities</span> <span class="operator">=</span> item.capabilities;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(capabilities)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (capabilities.contains(<span class="string">&quot;WPA&quot;</span>) || capabilities.contains(<span class="string">&quot;wpa&quot;</span>)) &#123;</span><br><span class="line">                holder.wifi_image.setImageResource(NetworkUtil.wifiLevelLock[getLevel(item.level)]);</span><br><span class="line">                holder.wifi_type.setText(<span class="string">&quot;WPA&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (capabilities.contains(<span class="string">&quot;WEP&quot;</span>) || capabilities.contains(<span class="string">&quot;wep&quot;</span>)) &#123;</span><br><span class="line">                holder.wifi_image.setImageResource(NetworkUtil.wifiLevelLock[getLevel(item.level)]);</span><br><span class="line">                holder.wifi_type.setText(<span class="string">&quot;WEP&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                holder.wifi_image.setImageResource(NetworkUtil.wifiLevelUnLock[getLevel(item.level)]);</span><br><span class="line">                holder.wifi_type.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">WifiHolder</span> &#123;</span><br><span class="line"></span><br><span class="line">        ImageView wifi_image;</span><br><span class="line">        TextView wifi_name;</span><br><span class="line">        TextView wifi_type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getLevel</span><span class="params">(<span class="type">int</span> mRssi)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mRssi == Integer.MAX_VALUE) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> WifiManager.calculateSignalLevel(mRssi, <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zj970</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: App列表适配器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 9/19/23 4:41 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalAppItemAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;LocalAppItemAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> LocalAppItemAdapter.class.getSimpleName();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;AppResponse.AppBean&gt; appInfoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IViewListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LocalPresenter presenter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LocalAppItemAdapter</span><span class="params">(IViewListener listener, LocalPresenter presenter)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = listener;</span><br><span class="line">        <span class="built_in">this</span>.presenter = presenter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAppInfoList</span><span class="params">(List&lt;AppResponse.AppBean&gt; appInfoList)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.appInfoList.clear();</span><br><span class="line">        <span class="built_in">this</span>.appInfoList.addAll(appInfoList);</span><br><span class="line">        notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeAt</span><span class="params">(AppResponse.AppBean info)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">position</span> <span class="operator">=</span> appInfoList.indexOf(info);</span><br><span class="line">        <span class="built_in">this</span>.appInfoList.remove(info);</span><br><span class="line">        notifyItemRemoved(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> LayoutInflater.from(parent.getContext()).inflate(R.layout.item_app_common, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="type">ViewHolder</span> <span class="variable">viewHolder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(view);</span><br><span class="line">        <span class="keyword">return</span> viewHolder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;SetTextI18n&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        AppResponse.<span class="type">AppBean</span> <span class="variable">info</span> <span class="operator">=</span> appInfoList.get(position);</span><br><span class="line">        holder.mTVAppName.setText(info.getLabel());</span><br><span class="line">        holder.mTVAppVersion.setText(BApplication.getmContext().getText(R.string.version_app)</span><br><span class="line">                + <span class="string">&quot;:&quot;</span> + info.getCurrentVersion() + <span class="string">&quot;-----&gt;&quot;</span> + info.getVersionCode());</span><br><span class="line">        holder.mIVAppIcon.setImageDrawable(info.getDrawable());</span><br><span class="line">        holder.mCFP.setAnimation(<span class="literal">true</span>);</span><br><span class="line">        holder.mCFP.showPercentText(<span class="literal">false</span>);</span><br><span class="line">        holder.itemView.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener != <span class="literal">null</span>) &#123;</span><br><span class="line">                listener.onclick(holder.itemView, info, presenter);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> appInfoList != <span class="literal">null</span> ? appInfoList.size() : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line">        ImageView mIVAppIcon;</span><br><span class="line">        ImageView mIVAppStatus;</span><br><span class="line">        TextView mTVAppName;</span><br><span class="line">        TextView mTVAppVersion;</span><br><span class="line">        TextView mTVState;</span><br><span class="line">        ColorfulProgressbar mCFP;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            mIVAppIcon = itemView.findViewById(R.id.mIVAppIcon);</span><br><span class="line">            mTVAppName = itemView.findViewById(R.id.mTVAppName);</span><br><span class="line">            mTVAppVersion = itemView.findViewById(R.id.mTVAppVersion);</span><br><span class="line">            mIVAppStatus = itemView.findViewById(R.id.mIVAppStatus);</span><br><span class="line">            mTVState = itemView.findViewById(R.id.mTVState);</span><br><span class="line">            mCFP = (ColorfulProgressbar) itemView.findViewById(R.id.mCFP);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IViewListener</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onclick</span><span class="params">(View view, AppResponse.AppBean info, LocalPresenter filePresenter)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="使用RecyclerView添加子控件点击响应事件数据紊乱"><a href="#使用RecyclerView添加子控件点击响应事件数据紊乱" class="headerlink" title="使用RecyclerView添加子控件点击响应事件数据紊乱"></a>使用RecyclerView添加子控件点击响应事件数据紊乱</h2><ul><li>代码片段</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">    <span class="type">Data</span> <span class="variable">info</span> <span class="operator">=</span> mData.get(position);</span><br><span class="line">    <span class="comment">//.........</span></span><br><span class="line">    <span class="keyword">if</span>(info.getType() == <span class="number">0</span>)<span class="comment">//当类型为0不响应此事件</span></span><br><span class="line">    &#123;</span><br><span class="line">        holder.itemView.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener != <span class="literal">null</span>) &#123;</span><br><span class="line">                listener.onclick(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;以上代码当时撰写测试的时候感觉是没有问题，可在后续测试中出现了明明点击的是Data B渲染的视图View，但是响应的是Data A的数据，后续通过阅读代码，发现是RecyclerView的复用机制导致的，以下是代码修改: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">    <span class="type">Data</span> <span class="variable">info</span> <span class="operator">=</span> mData.get(position);</span><br><span class="line">    <span class="comment">//.........</span></span><br><span class="line">    <span class="keyword">if</span>(info.getType() == <span class="number">0</span>)<span class="comment">//当类型为0不响应此事件</span></span><br><span class="line">    &#123;</span><br><span class="line">        holder.itemView.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener != <span class="literal">null</span>) &#123;</span><br><span class="line">                listener.onclick(mData.get(holder.getAdapterPosition()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里使用了holder.getAdapterPostion()来获取精准的的位置信息，对于此方法的描述，官方的文档进行了详细阐述，经过测试发现响应的数据和渲染的数据终于一致。  </p><blockquote><p>Returns the Adapter position of the item represented by this ViewHolder.<br>Note that this might be different than the getLayoutPosition() if there are pending adapter updates but a new layout pass has not happened yet.<br>RecyclerView does not handle any adapter updates until the next layout traversal. This may create temporary inconsistencies between what user sees on the screen and what adapter contents have. This inconsistency is not important since it will be less than 16ms but it might be a problem if you want to use ViewHolder position to access the adapter. Sometimes, you may need to get the exact adapter position to do some actions in response to user events. In that case, you should use this method which will calculate the Adapter position of the ViewHolder.<br>Note that if you’ve called RecyclerView.Adapter.notifyDataSetChanged(), until the next layout pass, the return value of this method will be NO_POSITION.<br>Returns:<br>The adapter position of the item if it still exists in the adapter. NO_POSITION if item has been removed from the adapter, RecyclerView.Adapter.notifyDataSetChanged() has been called after the last layout pass or the ViewHolder has already been recycled.</p></blockquote><p>&emsp;&emsp;但是，功能在后续的测试中又出现了问题，有些视图ItemView明明是可以点击响应的，却无法响应，又做了如下更改： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">    <span class="type">Data</span> <span class="variable">info</span> <span class="operator">=</span> mData.get(position);</span><br><span class="line">    <span class="comment">//.........</span></span><br><span class="line">    <span class="keyword">if</span>(info.getType() == <span class="number">0</span>)<span class="comment">//当类型为0不响应此事件</span></span><br><span class="line">    &#123;</span><br><span class="line">        holder.itemView.setOnClickListener(v -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener != <span class="literal">null</span>) &#123;</span><br><span class="line">                listener.onclick(mData.get(holder.getAdapterPosition()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 清除不需要的点击事件或设置默认的点击事件</span></span><br><span class="line">        holder.itemView.setOnClickListener(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">    <span class="type">Data</span> <span class="variable">info</span> <span class="operator">=</span> mData.get(position);</span><br><span class="line">    <span class="comment">//.........</span></span><br><span class="line">    holder.itemView.setOnClickListener(v -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(info.getType() == <span class="number">0</span>)<span class="comment">//当类型为0不响应此事件</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (listener != <span class="literal">null</span>) &#123;</span><br><span class="line">                listener.onclick(mData.get(holder.getAdapterPosition()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;经历这几次波折，对于RecyclerView和ListView的缓存机制不甚了解，故做以下笔记。</p><hr><h1 id="延伸学习"><a href="#延伸学习" class="headerlink" title="延伸学习"></a>延伸学习</h1><ul><li>参考文章<ul><li><a href="https://www.jianshu.com/p/1eaaccd169e4#:~:text=ListView%20%E5%92%8C%20RecyclerView%20%E7%9A%84%E5%A4%8D%E7%94%A8%E6%9C%BA%E5%88%B6%E8%BF%98%E6%98%AF%E6%9C%89%E5%BE%88%E5%A4%A7%E7%9A%84%E5%B7%AE%E5%BC%82%EF%BC%8C%20ListView,%E7%9A%84%E5%A4%8D%E7%94%A8%E6%98%AF%E4%B8%A4%E7%BA%A7%E7%BC%93%E5%AD%98%E7%9A%84%EF%BC%8C%E8%80%8C%20RecyclerView%20%E6%98%AF%E5%9B%9B%E7%BA%A7%E7%BC%93%E5%AD%98%EF%BC%8C%E5%9C%A8%E8%BF%99%E9%87%8C%E5%8F%82%E8%80%83%E4%BA%86%20%E8%85%BE%E8%AE%AFBugly%E5%B9%B2%E8%B4%A7%E5%88%86%E4%BA%AB%20%E9%87%8C%E9%9D%A2%E8%AF%A6%E7%BB%86%E6%AF%94%E8%BE%83%E4%BA%86%E8%BF%99%E4%B8%A4%E8%80%85%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%82">虚心学习的小来子</a></li><li><a href="https://www.cnblogs.com/RGogoing/p/5554086.html">代码如风的</a></li></ul></li></ul><h2 id="复用机制"><a href="#复用机制" class="headerlink" title="复用机制"></a>复用机制</h2><p>&emsp;&emsp;首先了解一些概念，ActiveView其实就是在UI屏幕上可见的视图(onScreenView)，也就是与用户进行交互的View，而有些View滑动到屏幕外面(offScrenView)那么这些View就变成了ScrapView，这些View已经无法与用户进行交互了，自然UI视图改变的时候就不需要再去重新绘制。但是这些View并没有被销毁掉，而是存储起来。目地就是为了二次复用。</p><ul><li>ListView的两级缓存</li></ul><table><thead><tr><th></th><th>是否 createView</th><th>是否 bindView</th><th>备注</th></tr></thead><tbody><tr><td>mActiveViews</td><td>否</td><td>否</td><td>用于屏幕内快速复用</td></tr><tr><td>mScrapViews</td><td>否</td><td>是</td><td></td></tr></tbody></table><p>&emsp;&emsp;<b>mActiveViews</b>是一个保存可以屏幕内可见、可以直接复用的View数组(AbsListView.java)。假如说有这样一个场景，屏幕里面可以完整的容纳六个View，往下滑动的时候，第0个位置的View被滑出了屏幕，但是mActiveViews数组里面还有5个可以被快速复用。</p><p><img src="https://upload-images.jianshu.io/upload_images/6268659-8559c9cdd1da5c72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400/format/webp" alt="image.png"></p><p>&emsp;&emsp;<b>mScrapViews</b>是一个保存溢出屏幕View的数组，移到这里的View都会恢复一个空白的View,同时也恢复所有的状态(恢复到刚创建时的状态)。</p><ul><li>RecyclerView的四级缓存</li></ul><table><thead><tr><th></th><th>是否 createView</th><th>是否 bindView</th><th>备注</th></tr></thead><tbody><tr><td>mAttachedScrap</td><td>否</td><td>否</td><td>用于屏幕内快速复用</td></tr><tr><td>mCachedViews</td><td>否</td><td>否</td><td>static final int DEFAULT_CACHE_SIZE = 2</td></tr><tr><td>mViewCashExtension</td><td>不研究</td><td>不研究</td><td></td></tr><tr><td>mRecyclerPool</td><td>否</td><td>是</td><td>static final int DEFAULT_MAX_SCRAP = 5</td><td></td></tr></tbody></table><p>&emsp;&emsp;<b>mAttachedScrap</b>和ListView的mActivityViews相似，但是复用的东西不同，ListView复用的是View，<font color=red>也就是实现ListView的Adapter的时候实现getView方法的参数convertView</font>，但是RecyclerView复用的对象是ViewHolder，ListView也可以自己实现ViewHolder。   </p><p>&emsp;&emsp;<b>mCachedViews和mRecyclerPool</b>这两个加起来实现的效果和ListView的mScrapViews差不多，不过相对于mScrapView做了一个分级缓存，先回收到mCachedViews，这里不会变成初始化形态，但是mCachedViews超过规定的数量时，会把最老的那个转到mRecyclerPool里面，相当于ListView的mScrapViews，ViewHolder所有属性和状态都会被还原，当然在理论上实现多个RecyclerView共用一个mRecyclerPool，可以节省内存。</p><h2 id="2-ViewHolder的复用概念"><a href="#2-ViewHolder的复用概念" class="headerlink" title="2. ViewHolder的复用概念"></a>2. ViewHolder的复用概念</h2><p><img src="https://images2015.cnblogs.com/blog/734980/201612/734980-20161207101444288-1931079409.png" alt="image.png"></p><p>&emsp;&emsp;ViewHolder 和复用机制没有什么直接的关系。用 getView 的时候会 findViewById ，这无疑是很浪费时间的。ViewHolder 是用来保持着 convertView 对里面每个子 View 的引用。</p><ul><li>ListView和RecyclerView是先复用再回收。</li></ul><h3 id="ListView-的复用步骤"><a href="#ListView-的复用步骤" class="headerlink" title="ListView 的复用步骤"></a>ListView 的复用步骤</h3><p><img src="https://upload-images.jianshu.io/upload_images/6268659-e49a8c59bbaf57c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/513/format/webp" alt="ListView复用过程.png"></p><h3 id="RecyclerView-的复用步骤"><a href="#RecyclerView-的复用步骤" class="headerlink" title="RecyclerView 的复用步骤"></a>RecyclerView 的复用步骤</h3><p><img src="https://upload-images.jianshu.io/upload_images/6268659-960be4d65c743072.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/551/format/webp" alt="RecyclerView复用过程.png"></p><h3 id="ListView-的回收"><a href="#ListView-的回收" class="headerlink" title="ListView 的回收"></a>ListView 的回收</h3><p>&emsp;&emsp;完全滑出屏幕后就把 View 回收到 mScrapeViews 当中去，并把 View 还原成初始状态，所以说 ListView 中所有进行复用的 View 的数量加起来一定是一个定值，其大小和屏幕所能容纳下的 item 的个数有关。</p><h3 id="RecyclerView-的回收"><a href="#RecyclerView-的回收" class="headerlink" title="RecyclerView 的回收"></a>RecyclerView 的回收</h3><p>&emsp;&emsp;RecyclerView 的回收过程就是一个标准的二级缓存，滑出屏幕的 ViewHolder 先缓存进 mCacheViews ，此时并不还原视图，当 mCacheViews 中的数量超过一定的限制以后（默认是2个，这个是可以由自己来决定的），将最先放入 mCacheViews 的 ViewHolder 放入到 mRecyclerPool 当中去，并且是根据 View 的 type 不同，放入不同的 mRecyclerPool 当中去，同时 mRecyclerPool 也有大小的限制（默认是 5 个），但是这种回收机制好处就在于可以保证 mCacheViews 和 mRecyclerPool 是最新的放到前面。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离别2022</title>
      <link href="/2023/11/10/%E7%A6%BB%E5%88%AB2022/"/>
      <url>/2023/11/10/%E7%A6%BB%E5%88%AB2022/</url>
      
        <content type="html"><![CDATA[<h1 id="第一行代码-Android-第2版-郭霖著"><a href="#第一行代码-Android-第2版-郭霖著" class="headerlink" title="第一行代码 Android 第2版 郭霖著"></a>第一行代码 Android 第2版 郭霖著</h1><ul><li>第1章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/HelloWorld">开启启程——你的第一行Android代码</a></li><li>第2章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/ActivityStudy">先从看得到的入手——探究活动</a></li><li>第3章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/UIStudy">软件也要拼脸蛋——UI开发的点点滴滴</a></li><li>第4章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/FragmentsStudy">手机平板要兼顾——探究碎片</a></li><li>第5章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/BroadcastStudy">全局大喇叭——详解广播机制</a></li><li>第6章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/PersistenceTechnology">数据存储全方案——详解持久化技术</a></li><li>第7章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/ConTentProviders">跨程序共享数据——探究内容提供器</a></li><li>第8章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/Multimedia">丰富你的程序——运用手机多媒体</a></li><li>第9章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/NetworkStudy">看看精彩的世界——使用网络技术</a></li><li>第10章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/ServerStudy">后台默默的劳动者——探究服务</a></li><li>第11章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/AndroidLocation">Android特色开发——基于位置的服务</a></li><li>第12章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/MaterialDesign">最佳的UI体验——MaterialDesign实战</a></li><li>第13章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/AdvancedSkills">继续进阶——你还应该掌握的高级技巧</a></li><li>第14章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/CoolWeather">进入实战——开发酷欧天气</a></li><li>第15章 <a href="https://github.com/zj970/androidStudy/tree/master/StudyFirstAndroid/CoolWeather">最后一步——将应用发布到360应用商店</a></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>&emsp;&emsp;观看郭老师的第一行代码书籍，始于7月终于12月。从一个懵懂无知的Android小白，如今总算入了门。恰逢2023年元旦来临之际，感触颇多。<br>&emsp;&emsp;还记得刚接触Android时配置环境的手忙脚乱，踩了很多坑。比如jdk、gradle、gradle plugins之间的关系，gradle的语法。第三方jar的引用等，仿佛还在昨日。当第一次启动了HelloWord时，才发现，我与安卓开发者如此之近.<br>&emsp;&emsp;在开发过程中，我常与framework打交道，对于我来说，是痛苦的。刚开始不了解Android四大基础组件，Activity、Service、Broadcast、Content Provider。然后就直接去看framework的源码，是十分头疼的。但是Linux鼻祖Linus Torvalds 说过：Read The Fucking Source Code。<br>&emsp;&emsp;刚开始时，由于公司的项目都是采用Eclipse阅读查看，并没有使用gradle构建，而是使用Android.mk去编译。调试代码特别麻烦，只能使用jdb去调试。然后我就把公司的项目导入到AS里面进行开发调试。在此过程中，由于不熟悉groovy语法以及Android Studio的项目结构，吃了好大的亏。后面对Android.mk转换也是吃了很大的亏，不清楚如何这个项目的到底有哪些三方库的导入，以及framework的优先级问题等等，在不断地查询与学习中，一个一个地解决了，这对后面的二次开发奠定了很大的作用。<br>&emsp;&emsp;后面被老大安排了一个开机向导的任务，需要重写老项目的样式，将几个单页面放在一个视图中，其中有国家、语言页面可以上下滑动选择，并且将所有的页面连在一起，采用画卷的方式展示出来。当时刚好看到郭老师的常用布局方式，单页面里面的垂直滑动选择可以采用RecyclerView，但是其他该怎么办呢？经过搜索查询，知道了ViewPager的存在。立马锁定了采取ViewPager+RecyclerView的组合，一开始想法很简单，无非就是照着书上，写适配器搭数据进去不就行了吗？后来，数据的显示，View之间的交互、搭建开发环境都弄了好久。<br>&emsp;&emsp;再后面又是对原生态Settings下手，二次开发。网络模块、蓝牙、基础设置、系统信息这些等等。<br>&emsp;&emsp;在工作之余我会将郭老师的所有案列所有笔记都敲一遍，我只是一个普通人，没有超凡的记忆和过人的天赋，用自己对编程的热爱，只是做着自己认为的努力。不知道未来如何，但是每改一个bug，每实现一个功能，倍感欣悦，愿新的一年，还是如今的少年，不被社会公司打败，无论多少年，愿亦是如此。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
